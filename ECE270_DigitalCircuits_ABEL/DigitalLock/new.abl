


MODULE isp4256ZEio

TITLE 'isp4256ZE Development Board I/O Configuration'

" Target CPLD is ispMACH LC4256ZE 144-pin TQFP (LC4256ZE-5TN144C)

LIBRARY 'lattice';

DECLARATIONS

" Internal Oscillator

osc_dis, osc_rst, osc_out, tmr_out node istype 'com';

" Use maximum possible internal divisor -> yields approx 4 Hz output frequency

XLAT_OSCTIMER(DYNOSCDIS, TIMERRES, OSCOUT, TIMEROUT, 1048576);

" Input pins from DIP switch
" DOWN - contact closure to ground - logic 0
" UP - open contact pulled high with resistor - logic 1

DIP0 pin 79;	"IO_K6
DIP1 pin 78;	"IO_K8
DIP2 pin 77;	"IO_K10
DIP3 pin 76;	"IO_K12
DIP4 pin 23;	"IO_E6
DIP5 pin 24;	"IO_E8
DIP6 pin 25;	"IO_E10
DIP7 pin 26;	"IO_E12

DIP = [DIP7, DIP6, DIP5, DIP4, DIP3, DIP2, DIP1, DIP0];

" SPDT toggle switches (can be used to create bounceless switches) 
" ACTIVE LOW (contact closure to ground, with pull-up)
!S1_NC pin 58;	"IO_I2   normally closed (down position)
!S1_NO pin 59;	"IO_I4   normally open (up position)
!S2_NC pin 60;	"IO_I6   normally closed (down position)
!S2_NO pin 61;	"IO_I8   normally open (up position)

" Top row of red LEDs

!LED0 pin 40 istype 'com';	"IO_G10  right-most
!LED1 pin 39 istype 'com';	"IO_G12
!LED2 pin 33 istype 'com';	"IO_F12
!LED3 pin 32 istype 'com'; 	"IO_F10
!LED4 pin 31 istype 'com';	"IO_F8
!LED5 pin 30 istype 'com';	"IO_F6
!LED6 pin 29 istype 'com';	"IO_F4
!LED7 pin 28 istype 'com';	"IO_F2   left-most

TOPRED = [LED7, LED6, LED5, LED4, LED3, LED2, LED1, LED0];

" Second row (from top) of red LEDs

!LED8 pin 139 istype 'com';	"IO_B4   right-most
!LED9 pin 138 istype 'com';	"IO_B2
!LED10 pin 135 istype 'com';	"IO_A12	
!LED11 pin 134 istype 'com';	"IO_A10
!LED12 pin 133 istype 'com';	"IO_A8
!LED13 pin 132 istype 'com';	"IO_A6
!LED14 pin 131 istype 'com';	"IO_A4
!LED15 pin 130 istype 'com';	"IO_A2   left-most

MIDRED = [LED15, LED14, LED13, LED12, LED11, LED10, LED9, LED8];

" 7-segment common-anode displays (active low outputs)
" Right-most display (DIS1)

!DIS1a pin 87 istype 'com';	"IO_L6
!DIS1b pin 86 istype 'com';	"IO_L8
!DIS1c pin 85 istype 'com';	"IO_L10
!DIS1d pin 84 istype 'com';	"IO_L12
!DIS1e pin 83 istype 'com';	"IO_L14
!DIS1f pin 81 istype 'com';	"IO_K2
!DIS1g pin 80 istype 'com';	"IO_K4

DIS1 = [DIS1a, DIS1b, DIS1c, DIS1d, DIS1e, DIS1f, DIS1g];

" Second-from-right display (DIS2)

!DIS2a pin 98 istype 'com';	"IO_M12
!DIS2b pin 97 istype 'com';	"IO_M10
!DIS2c pin 96 istype 'com';	"IO_M8
!DIS2d pin 95 istype 'com';	"IO_M6
!DIS2e pin 94 istype 'com';	"IO_M4
!DIS2f pin 93 istype 'com';	"IO_M2
!DIS2g pin 88 istype 'com';	"IO_L4

DIS2 = [DIS2a, DIS2b, DIS2c, DIS2d, DIS2e, DIS2f, DIS2g];

" Second-from-left display (DIS3)

!DIS3a pin 125 istype 'com';	"IO_P2
!DIS3b pin 124 istype 'com';	"IO_P4
!DIS3c pin 123 istype 'com';	"IO_P6
!DIS3d pin 122 istype 'com';  "IO_P8
!DIS3e pin 121 istype 'com';	"IO_P10
!DIS3f pin 120 istype 'com';	"IO_P12
!DIS3g pin 116 istype 'com';	"IO_O2

DIS3 = [DIS3a, DIS3b, DIS3c, DIS3d, DIS3e, DIS3f, DIS3g];

" Left-most display (DIS4)

!DIS4a pin 44 istype 'com';	"IO_G2
!DIS4b pin 48 istype 'com';	"IO_H12
!DIS4c pin 49 istype 'com';	"IO_H10
!DIS4d pin 50 istype 'com';	"IO_H8
!DIS4e pin 51 istype 'com';	"IO_H6
!DIS4f pin 52 istype 'com'; 	"IO_H4
!DIS4g pin 53 istype 'com';	"IO_H2

DIS4 = [DIS4a, DIS4b, DIS4c, DIS4d, DIS4e, DIS4f, DIS4g];

" Jumbo R-Y-G LEDs
!LED16 pin 140 istype 'com';	"IO_B6   RED
!LED17 pin 141 istype 'com';	"IO_B8   YELLOW
!LED18 pin 142 istype 'com';	"IO_B10  GREEN
!LED19 pin 143 istype 'com';	"IO_B12  (unpopulated)

" Bottom row of red LEDs

!LED20 pin 100 istype 'com';	"IO_N2   right-most
!LED21 pin 101 istype 'com';	"IO_N4
!LED22 pin 102 istype 'com';	"IO_N6
!LED23 pin 103 istype 'com';	"IO_N8
!LED24 pin 104 istype 'com';	"IO_N10
!LED25 pin 105 istype 'com';	"IO_N12
!LED26 pin 111 istype 'com';	"IO_O12
!LED27 pin 112 istype 'com';	"IO_O10  left-most

BOTRED = [LED27, LED26, LED25, LED24, LED23, LED22, LED21, LED20];

" Yellow LEDs next to toggle switches
!LED28 pin 63 istype 'com';	"IO_I12  right
!LED29 pin 62 istype 'com';	"IO_I10  left

" 7-segment alphanumeric display code declarations
blank = [0,0,0,0,0,0,0];  " blank (all off)
char0 = [1,1,1,1,1,1,0];  " 0
char1 = [0,1,1,0,0,0,0];  " 1
char2 = [1,1,0,1,1,0,1];  " 2
char3 = [1,1,1,1,0,0,1];  " 3
char4 = [0,1,1,0,0,1,1];  " 4
char5 = [1,0,1,1,0,1,1];  " 5
char6 = [1,0,1,1,1,1,1];  " 6
char7 = [1,1,1,0,0,0,0];  " 7
char8 = [1,1,1,1,1,1,1];  " 8
char9 = [1,1,1,1,0,1,1];  " 9
charA = [1,1,1,0,1,1,1];  " A
charB = [0,0,1,1,1,1,1];  " b
charC = [1,0,0,1,1,1,0];  " C
charD = [0,1,1,1,1,0,1];  " d
charE = [1,0,0,1,1,1,1];  " E
charF = [1,0,0,0,1,1,1];  " F
charG = [1,1,1,1,0,1,1];  " g
charH = [0,1,1,0,1,1,1];  " H
charI = [0,0,1,0,0,0,0];  " i
charJ = [0,1,1,1,0,0,0];  " J
charL = [0,0,0,1,1,1,0];  " L
charN = [0,0,1,0,1,0,1];  " n
charO = [0,0,1,1,1,0,1];  " o
charP = [1,1,0,0,1,1,1];  " P
charR = [0,0,0,0,1,0,1];  " r
charS = [1,0,1,1,0,1,1];  " S
charU = [0,1,1,1,1,1,0];  " U
charY = [0,1,1,1,0,1,1];  " y	

" User-defined variables follow

" Note - these should all be declared as NODES (*not* PINS)

lft0..lft27 node istype 'reg';
LFT0 = [lft0,lft1,lft2,lft3,lft4,lft5,lft6];
LFT1 = [lft7,lft8,lft9,lft10,lft11,lft12,lft13];
LFT2 = [lft14,lft15,lft16,lft17,lft18,lft19,lft20];
LFT3 = [lft21,lft22,lft23,lft24,lft25,lft26,lft27];
LFT = [LFT0,LFT1,LFT2,LFT3];

timdiv2 node istype 'reg_d,buffer';
timdiv4 node istype 'reg_d,buffer';

pse0..pse7 node istype 'reg';
pse = [pse7,pse6,pse5,pse4,pse3,pse2,pse1,pse0];

ring0..ring7 node istype 'reg';
ring = [ring7,ring6,ring5,ring4,ring3,ring2,ring1,ring0];

BFC node istype 'reg';
BFD node istype 'reg';

x = .x.;
jb0..jb2 node istype 'reg';
st0..st3 node istype 'reg';
jb = [jb0,jb1,jb2];

ST = [st0,st1,st2,st3];
ST0 = [0,0,0,0];
ST1 = [0,0,0,1];
ST2 = [0,0,1,0];
ST3 = [0,0,1,1];
ST4 = [0,1,0,0];
ST5 = [0,1,0,1];
ST6 = [0,1,1,0];
ST7 = [0,1,1,1];
GG  = [1,0,0,0];
GJ  = [1,0,0,1];

nico,poi,daze node istype 'reg';
mod0..mod20 node istype 'reg';
MOD0 = [mod0,mod1,mod2,mod3,mod4,mod5,mod6];
MOD1 = [mod7,mod8,mod9,mod10,mod11,mod12,mod13];
MOD2 = [mod14,mod15,mod16,mod17,mod18,mod19,mod20];
MOD = [MOD0,MOD1,MOD2];
" ======================= START OF EQUATIONS SECTION =================================

EQUATIONS

" Internal oscillator setup (disable/enable and reset variables) and OSCTIMER instance

osc_dis = 0;
osc_rst = 0;

I1 OSCTIMER(osc_dis, osc_rst, osc_out, tmr_out);

" User-defined equations, clocked-operator tables, and/or state diagram definitions follow

" timdiv
timdiv2.CLK = tmr_out;
timdiv2 := !timdiv2;
timdiv4.CLK = timdiv2.Q;
timdiv4 := !timdiv4;		"divide twice


" Step 1
" use 1,2,4,6 poly
pse0 := (pse1 $ (pse2 $ (pse4 $ pse6))&!DIP0) # pse0&DIP0;   
pse1 := pse0&!DIP0 # pse1&DIP0;   "DIP0 enable : freeze
pse2 := pse1&!DIP0 # pse2&DIP0;   "DIP0 disable: pse0 random start from pse8
pse3 := pse2&!DIP0 # pse3&DIP0;   "DIP0 to enable and disable 
pse4 := pse3&!DIP0 # pse4&DIP0;
pse5 := pse4&!DIP0 # pse5&DIP0;
pse6 := pse5&!DIP0 # pse6&DIP0;
pse7 := pse6&!DIP0 # pse7&DIP0;
pse.AP = DIP7;                    "DIP7 to preset
pse.CLK = timdiv4.Q;
TOPRED = (pse.Q & !DIP1);         "DIP1 hidden or display TOPRED

"Step 2

MIDRED = ring.Q;
ring0 := !(ring0#ring1#ring2#ring3#ring4#ring5#ring6#ring7);  " Ring counter
ring1 := ring0;
ring2 := ring1;
ring3 := ring2;
ring4 := ring3;
ring5 := ring4;
ring6 := ring5;
ring7 := ring6;
[ring1..ring7].AR = DIP7;          "DIP7 Initialize to 00000001
ring0.AP = DIP7;		   "DIP7 initialize ring0 to 1
ring.CLK = BFC.Q & DIP0 &!(jb0#jb2);  
" bouncefree s1 to control ring clk
" DIP0 is comparaion mode

BFC.D = 0;                         " Construct bouncefree 
BFC.CLK = 0;
BFC.AP = S1_NO;             	   " S1 normally open	
BFC.AR = S1_NC;			   " S1 normally closed

BFD.D = 0;
BFD.CLK = 0;
BFD.AP = S2_NO;
BFD.AR = S2_NC;



"Step 3
ST.CLK = BFC;
ST.AR = DIP7;

[LED16..LED18] = [jb0..jb2];               "RED Yellow Green

jb0 := !jb0;          
jb1 := jb1;
jb2 := jb2;
jb.clk = timdiv4;
jb.ar = DIP7;
jb0.ar = jb1 # jb2;


STATE_DIAGRAM ST
state ST0: if(BFD == pse0)&(DIP0 == 1) then ST1
      else if(BFD == !pse0)&(DIP0 == 1) then GG;
state ST1: if(BFD == pse1)&(DIP0 == 1) then ST2
      else if(BFD == !pse1)&(DIP0 == 1) then GG;
state ST2: if(BFD == pse2)&(DIP0 == 1) then ST3
      else if(BFD == !pse2)&(DIP0 == 1) then GG;
state ST3: if(BFD == pse3)&(DIP0 == 1) then ST4
      else if(BFD == !pse3)&(DIP0 == 1) then GG;
state ST4: if(BFD == pse4)&(DIP0 == 1) then ST5
      else if(BFD == !pse4)&(DIP0 == 1) then GG;
state ST5: if(BFD == pse5)&(DIP0 == 1) then ST6
      else if(BFD == !pse5)&(DIP0 == 1) then GG;
state ST6: if(BFD == pse6)&(DIP0 == 1) then ST7
      else if(BFD == !pse6)&(DIP0 == 1) then GG;
state ST7: if(BFD == pse7)&(DIP0 == 1) then GJ
      else if(BFD == !pse7)&(DIP0 == 1) then GG;
state GG: goto GG;
state GJ: if(!DIP2 == 1) then ST1
      else if(!DIP2 == 0) then GJ;

TRUTH_TABLE ([ST]->[jb0,jb1,jb2])   "For red yellow green
[ST0]->[0,0,0];
[ST1]->[0,1,0];
[ST2]->[0,1,0];
[ST3]->[0,1,0];
[ST4]->[0,1,0];
[ST5]->[0,1,0];
[ST6]->[0,1,0];
[ST7]->[0,1,0];
[GG] ->[1,0,0];
[GJ] ->[0,0,1];

EQUATIONS 

"Step 4
DIS1 = LFT0.Q;
DIS2 = LFT1.Q;
DIS3 = LFT2.Q;
DIS4 = LFT3.Q;

LFT3 := LFT2;
LFT2 := LFT1;
LFT1 := LFT0;
LFT0 := !(jb0#jb1#jb2)&MOD0 # jb0&MOD1 # jb2&MOD2;
LFT.AR = jb1;
MOD.CLK = timdiv4;
MOD.AR = DIP7;
MOD2.AR = jb1;
MOD1.AR = !jb0;
LFT.CLK = timdiv4;
[nico,poi,daze].AR = DIP7;
[nico,poi,daze].CLK = timdiv4;

TRUTH_TABLE ([MOD0,nico]:>[MOD0,nico])
[blank,0]:>[charS,0];
[charS,0]:>[charE,0];
[charE,0]:>[charC,0];
[charC,0]:>[charU,0];
[charU,0]:>[charR,0];
[charR,0]:>[charE,1];
[charE,1]:>[blank,0];

TRUTH_TABLE ([MOD1,poi,daze]:>[MOD1,poi,daze])
[blank,0,0]:>[charE,0,0];
[charE,0,0]:>[charR,0,0];
[charR,0,0]:>[charR,0,1];
[charR,0,1]:>[charO,0,1];
[charO,0,1]:>[charR,1,0];
[charR,1,0]:>[blank,0,0];

TRUTH_TABLE([MOD2]:>[MOD2])
[blank]:>[charO];
[charO]:>[charP];
[charP]:>[charE];
[charE]:>[charN];
[charN]:>[blank];

END

