==27454== Memcheck, a memory error detector
==27454== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==27454== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==27454== Command: ./a.out 30
==27454== Parent PID: 27451
==27454== 
--27454-- 
--27454-- Valgrind options:
--27454--    --tool=memcheck
--27454--    --leak-check=full
--27454--    --verbose
--27454--    --log-file=memcheck.log
--27454-- Contents of /proc/version:
--27454--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--27454-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--27454-- Page sizes: currently 4096, max supported 4096
--27454-- Valgrind library directory: /usr/lib64/valgrind
--27454-- Reading syms from /tmp/.Vhe6CU/a.out
--27454-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--27454--    object doesn't have a dynamic symbol table
--27454-- Reading syms from /lib64/ld-2.12.so
--27454--   Considering /usr/lib/debug/.build-id/3b/fa45bce0e82e1d90d37a0cc8630f97f2003bf5.debug ..
--27454--   .. build-id is valid
--27454-- Scheduler: using generic scheduler lock implementation.
--27454-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==27454== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-27454-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==27454== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-27454-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==27454== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-27454-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==27454== 
==27454== TO CONTROL THIS PROCESS USING vgdb (which you probably
==27454== don't want to do, unless you know exactly what you're doing,
==27454== or are doing some strange experiment):
==27454==   /usr/lib64/valgrind/../../bin/vgdb --pid=27454 ...command...
==27454== 
==27454== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==27454==   /path/to/gdb ./a.out
==27454== and then give GDB the following command
==27454==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=27454
==27454== --pid is optional if only one valgrind process is running
==27454== 
--27454-- REDIR: 0x35ff417610 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--27454-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--27454-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--27454-- REDIR: 0x35ff417480 (index) redirected to 0x4a07c30 (index)
--27454-- REDIR: 0x35ff417500 (strcmp) redirected to 0x4a08570 (strcmp)
--27454-- Reading syms from /lib64/libc-2.12.so
--27454--   Considering /usr/lib/debug/.build-id/73/3ad3a438b5a695f7a63a77413f9b2c8c94e8e6.debug ..
--27454--   .. build-id is valid
--27454-- REDIR: 0x35ff884cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--27454-- REDIR: 0x35ff886f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--27454-- REDIR: 0x35ff882c40 (__GI_strrchr) redirected to 0x4a07ab0 (__GI_strrchr)
--27454-- REDIR: 0x35ff87a640 (malloc) redirected to 0x4a069ac (malloc)
--27454-- REDIR: 0x35ff881160 (__GI_strlen) redirected to 0x4a07fb0 (__GI_strlen)
--27454-- REDIR: 0x35ff889670 (memcpy) redirected to 0x4a08b60 (memcpy)
--27454-- REDIR: 0x35ff884500 (mempcpy) redirected to 0x4a0a020 (mempcpy)
--27454-- REDIR: 0x35ff88aaf0 (strchrnul) redirected to 0x4a09fb0 (strchrnul)
--27454-- REDIR: 0x35ff87b520 (free) redirected to 0x4a063a9 (free)
--27454-- REDIR: 0x35ff87f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--27454-- REDIR: 0x35ff928420 (__strcmp_sse42) redirected to 0x4a084d0 (strcmp)
==27454== 
==27454== HEAP SUMMARY:
==27454==     in use at exit: 54 bytes in 6 blocks
==27454==   total heap usage: 17 allocs, 11 frees, 176 bytes allocated
==27454== 
==27454== Searching for pointers to 6 not-freed blocks
==27454== Checked 64,552 bytes
==27454== 
==27454== 18 (16 direct, 2 indirect) bytes in 1 blocks are definitely lost in loss record 5 of 6
==27454==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==27454==    by 0x400BA5: List_createNode_sol (<stdin>:19)
==27454==    by 0x400FE2: List_create (test_support_functions.c:48)
==27454==    by 0x400FFF: List_create (test_support_functions.c:49)
==27454==    by 0x400FFF: List_create (test_support_functions.c:49)
==27454==    by 0x4011E3: make_list (test_support_functions.c:77)
==27454==    by 0x401FA1: tests_List_sort (test_List_sort.c:105)
==27454==    by 0x402211: main (<stdin>:159)
==27454== 
==27454== 36 (16 direct, 20 indirect) bytes in 1 blocks are definitely lost in loss record 6 of 6
==27454==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==27454==    by 0x400BA5: List_createNode_sol (<stdin>:19)
==27454==    by 0x400FE2: List_create (test_support_functions.c:48)
==27454==    by 0x4011E3: make_list (test_support_functions.c:77)
==27454==    by 0x401FA1: tests_List_sort (test_List_sort.c:105)
==27454==    by 0x402211: main (<stdin>:159)
==27454== 
==27454== LEAK SUMMARY:
==27454==    definitely lost: 32 bytes in 2 blocks
==27454==    indirectly lost: 22 bytes in 4 blocks
==27454==      possibly lost: 0 bytes in 0 blocks
==27454==    still reachable: 0 bytes in 0 blocks
==27454==         suppressed: 0 bytes in 0 blocks
==27454== 
==27454== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 from 6)
--27454-- 
--27454-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--27454-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==27454== 
==27454== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 from 6)
