   ---------------------------------------------------------------------------
   Welcome to the PA03 testing program. This program takes a _long_ time
   to execute. There is a reason for this. You should not rely on this
   program to test your code as you go. Instead, you should think about
   what your code should be doing, and what inputs should produce what
   outputs for each of your functions.
   
        YOU SHOULD THEN TEST EVERY PIECE OF CODE AS YOU WRITE IT 
   
                                 AND 
   
                        FIX MISTAKES AS YOU GO.
   
   When you are convinced that you have the entire assignment 100%% correct,
   then you can use this testing program to test it. 
   
   This will give you your mark assuming that you submit it correctly, and 
   there are no other irregularities.
   ---------------------------------------------------------------------------

test 01 :: passing NULL to strcat_ex()

   const char * z2 = "How did it get so late so soon?";
   char * s1 = NULL;
   int n;
   char * s2 = strcat_ex(&s1, &n, z2);
   // s1 = (nil): "(null)"
   // s2 = (nil)
   // n = 7
   // Error, s1 is still NULL
   // Error, n should be 1 + 2 * strlen(z2)
   Testcase FAILED
Memory errors detected, testcase failed.
==2784== Memcheck, a memory error detector
==2784== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==2784== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==2784== Command: /tmp/.ptVh3K/a.out 0
==2784== Parent PID: 2783
==2784== 
--2784-- 
--2784-- Valgrind options:
--2784--    --tool=memcheck
--2784--    --leak-check=full
--2784--    --verbose
--2784--    --log-file=memcheck.log
--2784-- Contents of /proc/version:
--2784--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--2784-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--2784-- Page sizes: currently 4096, max supported 4096
--2784-- Valgrind library directory: /usr/lib64/valgrind
--2784-- Reading syms from /tmp/.ptVh3K/a.out
--2784-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--2784--    object doesn't have a dynamic symbol table
--2784-- Reading syms from /lib64/ld-2.12.so
--2784--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--2784--   .. build-id is valid
--2784-- Scheduler: using generic scheduler lock implementation.
--2784-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==2784== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-2784-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==2784== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-2784-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==2784== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-2784-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==2784== 
==2784== TO CONTROL THIS PROCESS USING vgdb (which you probably
==2784== don't want to do, unless you know exactly what you're doing,
==2784== or are doing some strange experiment):
==2784==   /usr/lib64/valgrind/../../bin/vgdb --pid=2784 ...command...
==2784== 
==2784== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==2784==   /path/to/gdb /tmp/.ptVh3K/a.out
==2784== and then give GDB the following command
==2784==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=2784
==2784== --pid is optional if only one valgrind process is running
==2784== 
--2784-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--2784-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--2784-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--2784-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--2784-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--2784-- Reading syms from /lib64/libc-2.12.so
--2784--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--2784--   .. build-id is valid
--2784-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--2784-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--2784-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--2784-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--2784-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--2784-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--2784-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--2784-- REDIR: 0x3f79e81120 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--2784-- REDIR: 0x3f79f33560 (__strlen_sse42) redirected to 0x4a07f50 (strlen)
--2784-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--2784-- REDIR: 0x3f79e80b70 (strcpy) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--2784-- REDIR: 0x3f79f34000 (???) redirected to 0x4a07f90 (strcpy)
--2784-- REDIR: 0x3f79e81240 (strnlen) redirected to 0x4a07ef0 (strnlen)
==2784== Use of uninitialised value of size 8
==2784==    at 0x3F79E43AAB: _itoa_word (_itoa.c:195)
==2784==    by 0x3F79E46662: vfprintf (vfprintf.c:1640)
==2784==    by 0x3F79E4F199: printf (printf.c:35)
==2784==    by 0x401055: test_01 (<stdin>:206)
==2784==    by 0x4023F5: main (<stdin>:567)
==2784== 
==2784== Conditional jump or move depends on uninitialised value(s)
==2784==    at 0x3F79E43AB5: _itoa_word (_itoa.c:195)
==2784==    by 0x3F79E46662: vfprintf (vfprintf.c:1640)
==2784==    by 0x3F79E4F199: printf (printf.c:35)
==2784==    by 0x401055: test_01 (<stdin>:206)
==2784==    by 0x4023F5: main (<stdin>:567)
==2784== 
==2784== Conditional jump or move depends on uninitialised value(s)
==2784==    at 0x3F79E450F3: vfprintf (vfprintf.c:1640)
==2784==    by 0x3F79E4F199: printf (printf.c:35)
==2784==    by 0x401055: test_01 (<stdin>:206)
==2784==    by 0x4023F5: main (<stdin>:567)
==2784== 
==2784== Conditional jump or move depends on uninitialised value(s)
==2784==    at 0x3F79E45111: vfprintf (vfprintf.c:1640)
==2784==    by 0x3F79E4F199: printf (printf.c:35)
==2784==    by 0x401055: test_01 (<stdin>:206)
==2784==    by 0x4023F5: main (<stdin>:567)
==2784== 
==2784== Conditional jump or move depends on uninitialised value(s)
==2784==    at 0x401125: test_01 (<stdin>:213)
==2784==    by 0x4023F5: main (<stdin>:567)
==2784== 
==2784== 
==2784== HEAP SUMMARY:
==2784==     in use at exit: 63 bytes in 1 blocks
==2784==   total heap usage: 1 allocs, 0 frees, 63 bytes allocated
==2784== 
==2784== Searching for pointers to 1 not-freed blocks
==2784== Checked 64,600 bytes
==2784== 
==2784== 63 bytes in 1 blocks are definitely lost in loss record 1 of 1
==2784==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==2784==    by 0x4027C0: strcat_ex (answer03.c:18)
==2784==    by 0x401004: test_01 (<stdin>:203)
==2784==    by 0x4023F5: main (<stdin>:567)
==2784== 
==2784== LEAK SUMMARY:
==2784==    definitely lost: 63 bytes in 1 blocks
==2784==    indirectly lost: 0 bytes in 0 blocks
==2784==      possibly lost: 0 bytes in 0 blocks
==2784==    still reachable: 0 bytes in 0 blocks
==2784==         suppressed: 0 bytes in 0 blocks
==2784== 
==2784== Use --track-origins=yes to see where uninitialised values come from
==2784== ERROR SUMMARY: 6 errors from 6 contexts (suppressed: 6 from 6)
==2784== 
==2784== 1 errors in context 1 of 6:
==2784== Conditional jump or move depends on uninitialised value(s)
==2784==    at 0x401125: test_01 (<stdin>:213)
==2784==    by 0x4023F5: main (<stdin>:567)
==2784== 
==2784== 
==2784== 1 errors in context 2 of 6:
==2784== Conditional jump or move depends on uninitialised value(s)
==2784==    at 0x3F79E45111: vfprintf (vfprintf.c:1640)
==2784==    by 0x3F79E4F199: printf (printf.c:35)
==2784==    by 0x401055: test_01 (<stdin>:206)
==2784==    by 0x4023F5: main (<stdin>:567)
==2784== 
==2784== 
==2784== 1 errors in context 3 of 6:
==2784== Conditional jump or move depends on uninitialised value(s)
==2784==    at 0x3F79E450F3: vfprintf (vfprintf.c:1640)
==2784==    by 0x3F79E4F199: printf (printf.c:35)
==2784==    by 0x401055: test_01 (<stdin>:206)
==2784==    by 0x4023F5: main (<stdin>:567)
==2784== 
==2784== 
==2784== 1 errors in context 4 of 6:
==2784== Conditional jump or move depends on uninitialised value(s)
==2784==    at 0x3F79E43AB5: _itoa_word (_itoa.c:195)
==2784==    by 0x3F79E46662: vfprintf (vfprintf.c:1640)
==2784==    by 0x3F79E4F199: printf (printf.c:35)
==2784==    by 0x401055: test_01 (<stdin>:206)
==2784==    by 0x4023F5: main (<stdin>:567)
==2784== 
==2784== 
==2784== 1 errors in context 5 of 6:
==2784== Use of uninitialised value of size 8
==2784==    at 0x3F79E43AAB: _itoa_word (_itoa.c:195)
==2784==    by 0x3F79E46662: vfprintf (vfprintf.c:1640)
==2784==    by 0x3F79E4F199: printf (printf.c:35)
==2784==    by 0x401055: test_01 (<stdin>:206)
==2784==    by 0x4023F5: main (<stdin>:567)
==2784== 
--2784-- 
--2784-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--2784-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==2784== 
==2784== ERROR SUMMARY: 6 errors from 6 contexts (suppressed: 6 from 6)

test 02 :: passing NULL to strcat_ex()

   const char * z0 = "";
   char * s1 = NULL;
   int n;
   char * s2 = strcat_ex(&s1, &n, z0);
   // s1 = (nil): "(null)"
   // s2 = (nil)
   // n = 7
   // Error, s1 is still NULL
   // Error, n should be 1 + 2 * strlen(z0)
   Testcase FAILED
Memory errors detected, testcase failed.
==8933== Memcheck, a memory error detector
==8933== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==8933== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==8933== Command: /tmp/.ptVh3K/a.out 1
==8933== Parent PID: 8931
==8933== 
--8933-- 
--8933-- Valgrind options:
--8933--    --tool=memcheck
--8933--    --leak-check=full
--8933--    --verbose
--8933--    --log-file=memcheck.log
--8933-- Contents of /proc/version:
--8933--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--8933-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--8933-- Page sizes: currently 4096, max supported 4096
--8933-- Valgrind library directory: /usr/lib64/valgrind
--8933-- Reading syms from /tmp/.ptVh3K/a.out
--8933-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--8933--    object doesn't have a dynamic symbol table
--8933-- Reading syms from /lib64/ld-2.12.so
--8933--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--8933--   .. build-id is valid
--8933-- Scheduler: using generic scheduler lock implementation.
--8933-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==8933== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-8933-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==8933== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-8933-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==8933== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-8933-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==8933== 
==8933== TO CONTROL THIS PROCESS USING vgdb (which you probably
==8933== don't want to do, unless you know exactly what you're doing,
==8933== or are doing some strange experiment):
==8933==   /usr/lib64/valgrind/../../bin/vgdb --pid=8933 ...command...
==8933== 
==8933== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==8933==   /path/to/gdb /tmp/.ptVh3K/a.out
==8933== and then give GDB the following command
==8933==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=8933
==8933== --pid is optional if only one valgrind process is running
==8933== 
--8933-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--8933-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--8933-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--8933-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--8933-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--8933-- Reading syms from /lib64/libc-2.12.so
--8933--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--8933--   .. build-id is valid
--8933-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--8933-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--8933-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--8933-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--8933-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--8933-- REDIR: 0x3f79e81120 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--8933-- REDIR: 0x3f79f33560 (__strlen_sse42) redirected to 0x4a07f50 (strlen)
--8933-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--8933-- REDIR: 0x3f79e80b70 (strcpy) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--8933-- REDIR: 0x3f79f34000 (???) redirected to 0x4a07f90 (strcpy)
--8933-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--8933-- REDIR: 0x3f79e81240 (strnlen) redirected to 0x4a07ef0 (strnlen)
--8933-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
==8933== Use of uninitialised value of size 8
==8933==    at 0x3F79E43AAB: _itoa_word (_itoa.c:195)
==8933==    by 0x3F79E46662: vfprintf (vfprintf.c:1640)
==8933==    by 0x3F79E4F199: printf (printf.c:35)
==8933==    by 0x401236: test_02 (<stdin>:235)
==8933==    by 0x402404: main (<stdin>:568)
==8933== 
==8933== Conditional jump or move depends on uninitialised value(s)
==8933==    at 0x3F79E43AB5: _itoa_word (_itoa.c:195)
==8933==    by 0x3F79E46662: vfprintf (vfprintf.c:1640)
==8933==    by 0x3F79E4F199: printf (printf.c:35)
==8933==    by 0x401236: test_02 (<stdin>:235)
==8933==    by 0x402404: main (<stdin>:568)
==8933== 
==8933== Conditional jump or move depends on uninitialised value(s)
==8933==    at 0x3F79E450F3: vfprintf (vfprintf.c:1640)
==8933==    by 0x3F79E4F199: printf (printf.c:35)
==8933==    by 0x401236: test_02 (<stdin>:235)
==8933==    by 0x402404: main (<stdin>:568)
==8933== 
==8933== Conditional jump or move depends on uninitialised value(s)
==8933==    at 0x3F79E45111: vfprintf (vfprintf.c:1640)
==8933==    by 0x3F79E4F199: printf (printf.c:35)
==8933==    by 0x401236: test_02 (<stdin>:235)
==8933==    by 0x402404: main (<stdin>:568)
==8933== 
==8933== Conditional jump or move depends on uninitialised value(s)
==8933==    at 0x401306: test_02 (<stdin>:242)
==8933==    by 0x402404: main (<stdin>:568)
==8933== 
==8933== 
==8933== HEAP SUMMARY:
==8933==     in use at exit: 1 bytes in 1 blocks
==8933==   total heap usage: 1 allocs, 0 frees, 1 bytes allocated
==8933== 
==8933== Searching for pointers to 1 not-freed blocks
==8933== Checked 64,600 bytes
==8933== 
==8933== 1 bytes in 1 blocks are definitely lost in loss record 1 of 1
==8933==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==8933==    by 0x4027C0: strcat_ex (answer03.c:18)
==8933==    by 0x4011E5: test_02 (<stdin>:232)
==8933==    by 0x402404: main (<stdin>:568)
==8933== 
==8933== LEAK SUMMARY:
==8933==    definitely lost: 1 bytes in 1 blocks
==8933==    indirectly lost: 0 bytes in 0 blocks
==8933==      possibly lost: 0 bytes in 0 blocks
==8933==    still reachable: 0 bytes in 0 blocks
==8933==         suppressed: 0 bytes in 0 blocks
==8933== 
==8933== Use --track-origins=yes to see where uninitialised values come from
==8933== ERROR SUMMARY: 6 errors from 6 contexts (suppressed: 6 from 6)
==8933== 
==8933== 1 errors in context 1 of 6:
==8933== Conditional jump or move depends on uninitialised value(s)
==8933==    at 0x401306: test_02 (<stdin>:242)
==8933==    by 0x402404: main (<stdin>:568)
==8933== 
==8933== 
==8933== 1 errors in context 2 of 6:
==8933== Conditional jump or move depends on uninitialised value(s)
==8933==    at 0x3F79E45111: vfprintf (vfprintf.c:1640)
==8933==    by 0x3F79E4F199: printf (printf.c:35)
==8933==    by 0x401236: test_02 (<stdin>:235)
==8933==    by 0x402404: main (<stdin>:568)
==8933== 
==8933== 
==8933== 1 errors in context 3 of 6:
==8933== Conditional jump or move depends on uninitialised value(s)
==8933==    at 0x3F79E450F3: vfprintf (vfprintf.c:1640)
==8933==    by 0x3F79E4F199: printf (printf.c:35)
==8933==    by 0x401236: test_02 (<stdin>:235)
==8933==    by 0x402404: main (<stdin>:568)
==8933== 
==8933== 
==8933== 1 errors in context 4 of 6:
==8933== Conditional jump or move depends on uninitialised value(s)
==8933==    at 0x3F79E43AB5: _itoa_word (_itoa.c:195)
==8933==    by 0x3F79E46662: vfprintf (vfprintf.c:1640)
==8933==    by 0x3F79E4F199: printf (printf.c:35)
==8933==    by 0x401236: test_02 (<stdin>:235)
==8933==    by 0x402404: main (<stdin>:568)
==8933== 
==8933== 
==8933== 1 errors in context 5 of 6:
==8933== Use of uninitialised value of size 8
==8933==    at 0x3F79E43AAB: _itoa_word (_itoa.c:195)
==8933==    by 0x3F79E46662: vfprintf (vfprintf.c:1640)
==8933==    by 0x3F79E4F199: printf (printf.c:35)
==8933==    by 0x401236: test_02 (<stdin>:235)
==8933==    by 0x402404: main (<stdin>:568)
==8933== 
--8933-- 
--8933-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--8933-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==8933== 
==8933== ERROR SUMMARY: 6 errors from 6 contexts (suppressed: 6 from 6)

test 03 :: no reallocate

   const char * z2 = "How did it get so late so soon?";
   int n = 2048;
   char * s1 = malloc(n);
   char * s3 = s1; // keep a copy
   s1[0] = '\0';
   char * s2 = strcat_ex(&s1, &n, z2);
   // s1 = 0x4c3c880: "How did it get so late so soon?How did it get so late so soon?"
   // s2 = 0x4c3c880
   // s3 = 0x4c3c040
   // n = 2048
   // Error, s1 changed in strcat_ex(...) when it shouldn't have
   // Error, strcmp(s1, z2) should be 0 :: s1 = "How did it get so late so soon?How did it get so late so soon?", z2 = "How did it get so late so soon?"
   Testcase FAILED

test 04 :: force reallocate

   const char * z2 = "How did it get so late so soon?";
   const char * s0 = "Hal, ";
   char * s1 = strdup(s0);
   int n = strlen(s0);
   char * s2 = strcat_ex(&s1, &n, z2);
   // s1 = 0x4c3c040: "Hal, How did it get so late so soon?"
   // s2 = 0x4c3c040
   // n = 5
   // Error, n should be 1 + 2 * (strlen(s0) + strlen(z2))
   Testcase FAILED
Memory errors detected, testcase failed.
==21492== Memcheck, a memory error detector
==21492== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==21492== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==21492== Command: /tmp/.ptVh3K/a.out 3
==21492== Parent PID: 21489
==21492== 
--21492-- 
--21492-- Valgrind options:
--21492--    --tool=memcheck
--21492--    --leak-check=full
--21492--    --verbose
--21492--    --log-file=memcheck.log
--21492-- Contents of /proc/version:
--21492--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--21492-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--21492-- Page sizes: currently 4096, max supported 4096
--21492-- Valgrind library directory: /usr/lib64/valgrind
--21492-- Reading syms from /tmp/.ptVh3K/a.out
--21492-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--21492--    object doesn't have a dynamic symbol table
--21492-- Reading syms from /lib64/ld-2.12.so
--21492--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--21492--   .. build-id is valid
--21492-- Scheduler: using generic scheduler lock implementation.
--21492-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==21492== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-21492-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==21492== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-21492-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==21492== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-21492-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==21492== 
==21492== TO CONTROL THIS PROCESS USING vgdb (which you probably
==21492== don't want to do, unless you know exactly what you're doing,
==21492== or are doing some strange experiment):
==21492==   /usr/lib64/valgrind/../../bin/vgdb --pid=21492 ...command...
==21492== 
==21492== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==21492==   /path/to/gdb /tmp/.ptVh3K/a.out
==21492== and then give GDB the following command
==21492==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=21492
==21492== --pid is optional if only one valgrind process is running
==21492== 
--21492-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--21492-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--21492-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--21492-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--21492-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--21492-- Reading syms from /lib64/libc-2.12.so
--21492--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--21492--   .. build-id is valid
--21492-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--21492-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--21492-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--21492-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--21492-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--21492-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--21492-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--21492-- REDIR: 0x3f79e81120 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--21492-- REDIR: 0x3f79f33560 (__strlen_sse42) redirected to 0x4a07f50 (strlen)
--21492-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--21492-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
--21492-- REDIR: 0x3f79e7f470 (strcat) redirected to 0x4a07c20 (strcat)
==21492== Invalid write of size 1
==21492==    at 0x4A07C4C: strcat (mc_replace_strmem.c:267)
==21492==    by 0x4028AA: strcat_ex (answer03.c:36)
==21492==    by 0x401620: test_04 (<stdin>:298)
==21492==    by 0x402422: main (<stdin>:570)
==21492==  Address 0x4c3c046 is 0 bytes after a block of size 6 alloc'd
==21492==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==21492==    by 0x3F79E80E91: strdup (strdup.c:43)
==21492==    by 0x401602: test_04 (<stdin>:297)
==21492==    by 0x402422: main (<stdin>:570)
==21492== 
==21492== Invalid write of size 1
==21492==    at 0x4A07C5F: strcat (mc_replace_strmem.c:267)
==21492==    by 0x4028AA: strcat_ex (answer03.c:36)
==21492==    by 0x401620: test_04 (<stdin>:298)
==21492==    by 0x402422: main (<stdin>:570)
==21492==  Address 0x4c3c064 is not stack'd, malloc'd or (recently) free'd
==21492== 
==21492== Invalid read of size 1
==21492==    at 0x3F79E47E3C: vfprintf (vfprintf.c:1641)
==21492==    by 0x3F79E4F199: printf (printf.c:35)
==21492==    by 0x401641: test_04 (<stdin>:299)
==21492==    by 0x402422: main (<stdin>:570)
==21492==  Address 0x4c3c046 is 0 bytes after a block of size 6 alloc'd
==21492==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==21492==    by 0x3F79E80E91: strdup (strdup.c:43)
==21492==    by 0x401602: test_04 (<stdin>:297)
==21492==    by 0x402422: main (<stdin>:570)
==21492== 
==21492== Invalid read of size 1
==21492==    at 0x4A0A063: mempcpy (mc_replace_strmem.c:1267)
==21492==    by 0x3F79E7190E: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1329)
==21492==    by 0x3F79E4819F: vfprintf (vfprintf.c:1641)
==21492==    by 0x3F79E4F199: printf (printf.c:35)
==21492==    by 0x401641: test_04 (<stdin>:299)
==21492==    by 0x402422: main (<stdin>:570)
==21492==  Address 0x4c3c046 is 0 bytes after a block of size 6 alloc'd
==21492==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==21492==    by 0x3F79E80E91: strdup (strdup.c:43)
==21492==    by 0x401602: test_04 (<stdin>:297)
==21492==    by 0x402422: main (<stdin>:570)
==21492== 
==21492== Invalid read of size 1
==21492==    at 0x4A0A050: mempcpy (mc_replace_strmem.c:1267)
==21492==    by 0x3F79E7190E: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1329)
==21492==    by 0x3F79E4819F: vfprintf (vfprintf.c:1641)
==21492==    by 0x3F79E4F199: printf (printf.c:35)
==21492==    by 0x401641: test_04 (<stdin>:299)
==21492==    by 0x402422: main (<stdin>:570)
==21492==  Address 0x4c3c047 is 1 bytes after a block of size 6 alloc'd
==21492==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==21492==    by 0x3F79E80E91: strdup (strdup.c:43)
==21492==    by 0x401602: test_04 (<stdin>:297)
==21492==    by 0x402422: main (<stdin>:570)
==21492== 
--21492-- REDIR: 0x3f79e81350 (strncmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--21492-- REDIR: 0x3f79f29130 (__strncmp_sse42) redirected to 0x4a083d0 (strncmp)
--21492-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--21492-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
==21492== Invalid read of size 1
==21492==    at 0x4A084A8: strcmp (mc_replace_strmem.c:729)
==21492==    by 0x4017AB: test_04 (<stdin>:310)
==21492==    by 0x402422: main (<stdin>:570)
==21492==  Address 0x4c3c046 is 0 bytes after a block of size 6 alloc'd
==21492==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==21492==    by 0x3F79E80E91: strdup (strdup.c:43)
==21492==    by 0x401602: test_04 (<stdin>:297)
==21492==    by 0x402422: main (<stdin>:570)
==21492== 
==21492== 
==21492== HEAP SUMMARY:
==21492==     in use at exit: 0 bytes in 0 blocks
==21492==   total heap usage: 1 allocs, 1 frees, 6 bytes allocated
==21492== 
==21492== All heap blocks were freed -- no leaks are possible
==21492== 
==21492== ERROR SUMMARY: 123 errors from 6 contexts (suppressed: 6 from 6)
==21492== 
==21492== 1 errors in context 1 of 6:
==21492== Invalid write of size 1
==21492==    at 0x4A07C5F: strcat (mc_replace_strmem.c:267)
==21492==    by 0x4028AA: strcat_ex (answer03.c:36)
==21492==    by 0x401620: test_04 (<stdin>:298)
==21492==    by 0x402422: main (<stdin>:570)
==21492==  Address 0x4c3c064 is not stack'd, malloc'd or (recently) free'd
==21492== 
==21492== 
==21492== 15 errors in context 2 of 6:
==21492== Invalid read of size 1
==21492==    at 0x4A0A050: mempcpy (mc_replace_strmem.c:1267)
==21492==    by 0x3F79E7190E: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1329)
==21492==    by 0x3F79E4819F: vfprintf (vfprintf.c:1641)
==21492==    by 0x3F79E4F199: printf (printf.c:35)
==21492==    by 0x401641: test_04 (<stdin>:299)
==21492==    by 0x402422: main (<stdin>:570)
==21492==  Address 0x4c3c047 is 1 bytes after a block of size 6 alloc'd
==21492==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==21492==    by 0x3F79E80E91: strdup (strdup.c:43)
==21492==    by 0x401602: test_04 (<stdin>:297)
==21492==    by 0x402422: main (<stdin>:570)
==21492== 
==21492== 
==21492== 15 errors in context 3 of 6:
==21492== Invalid read of size 1
==21492==    at 0x4A0A063: mempcpy (mc_replace_strmem.c:1267)
==21492==    by 0x3F79E7190E: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1329)
==21492==    by 0x3F79E4819F: vfprintf (vfprintf.c:1641)
==21492==    by 0x3F79E4F199: printf (printf.c:35)
==21492==    by 0x401641: test_04 (<stdin>:299)
==21492==    by 0x402422: main (<stdin>:570)
==21492==  Address 0x4c3c046 is 0 bytes after a block of size 6 alloc'd
==21492==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==21492==    by 0x3F79E80E91: strdup (strdup.c:43)
==21492==    by 0x401602: test_04 (<stdin>:297)
==21492==    by 0x402422: main (<stdin>:570)
==21492== 
==21492== 
==21492== 30 errors in context 4 of 6:
==21492== Invalid write of size 1
==21492==    at 0x4A07C4C: strcat (mc_replace_strmem.c:267)
==21492==    by 0x4028AA: strcat_ex (answer03.c:36)
==21492==    by 0x401620: test_04 (<stdin>:298)
==21492==    by 0x402422: main (<stdin>:570)
==21492==  Address 0x4c3c046 is 0 bytes after a block of size 6 alloc'd
==21492==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==21492==    by 0x3F79E80E91: strdup (strdup.c:43)
==21492==    by 0x401602: test_04 (<stdin>:297)
==21492==    by 0x402422: main (<stdin>:570)
==21492== 
==21492== 
==21492== 31 errors in context 5 of 6:
==21492== Invalid read of size 1
==21492==    at 0x4A084A8: strcmp (mc_replace_strmem.c:729)
==21492==    by 0x4017AB: test_04 (<stdin>:310)
==21492==    by 0x402422: main (<stdin>:570)
==21492==  Address 0x4c3c046 is 0 bytes after a block of size 6 alloc'd
==21492==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==21492==    by 0x3F79E80E91: strdup (strdup.c:43)
==21492==    by 0x401602: test_04 (<stdin>:297)
==21492==    by 0x402422: main (<stdin>:570)
==21492== 
==21492== 
==21492== 31 errors in context 6 of 6:
==21492== Invalid read of size 1
==21492==    at 0x3F79E47E3C: vfprintf (vfprintf.c:1641)
==21492==    by 0x3F79E4F199: printf (printf.c:35)
==21492==    by 0x401641: test_04 (<stdin>:299)
==21492==    by 0x402422: main (<stdin>:570)
==21492==  Address 0x4c3c046 is 0 bytes after a block of size 6 alloc'd
==21492==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==21492==    by 0x3F79E80E91: strdup (strdup.c:43)
==21492==    by 0x401602: test_04 (<stdin>:297)
==21492==    by 0x402422: main (<stdin>:570)
==21492== 
--21492-- 
--21492-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--21492-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==21492== 
==21492== ERROR SUMMARY: 123 errors from 6 contexts (suppressed: 6 from 6)

test 5 :: explode(...)

   const char * str = "The\nTuring test";
   const char * delims = " \n";
   int n;
   char * * strArr = explode(std, delims, &n);
   // strArr[0] is "The"
   // strArr[1] is "Turing"
   // strArr[2] is "test"
   (pass.)
Memory errors detected, testcase failed.
==28230== Memcheck, a memory error detector
==28230== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==28230== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==28230== Command: /tmp/.ptVh3K/a.out 4
==28230== Parent PID: 28229
==28230== 
--28230-- 
--28230-- Valgrind options:
--28230--    --tool=memcheck
--28230--    --leak-check=full
--28230--    --verbose
--28230--    --log-file=memcheck.log
--28230-- Contents of /proc/version:
--28230--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--28230-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--28230-- Page sizes: currently 4096, max supported 4096
--28230-- Valgrind library directory: /usr/lib64/valgrind
--28230-- Reading syms from /tmp/.ptVh3K/a.out
--28230-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--28230--    object doesn't have a dynamic symbol table
--28230-- Reading syms from /lib64/ld-2.12.so
--28230--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--28230--   .. build-id is valid
--28230-- Scheduler: using generic scheduler lock implementation.
--28230-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==28230== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-28230-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==28230== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-28230-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==28230== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-28230-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==28230== 
==28230== TO CONTROL THIS PROCESS USING vgdb (which you probably
==28230== don't want to do, unless you know exactly what you're doing,
==28230== or are doing some strange experiment):
==28230==   /usr/lib64/valgrind/../../bin/vgdb --pid=28230 ...command...
==28230== 
==28230== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==28230==   /path/to/gdb /tmp/.ptVh3K/a.out
==28230== and then give GDB the following command
==28230==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=28230
==28230== --pid is optional if only one valgrind process is running
==28230== 
--28230-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--28230-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--28230-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--28230-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--28230-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--28230-- Reading syms from /lib64/libc-2.12.so
--28230--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--28230--   .. build-id is valid
--28230-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--28230-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--28230-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--28230-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--28230-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--28230-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--28230-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--28230-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--28230-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
--28230-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--28230-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
==28230== Conditional jump or move depends on uninitialised value(s)
==28230==    at 0x401941: test_explode_XX (<stdin>:340)
==28230==    by 0x40243B: main (<stdin>:571)
==28230== 
==28230== Conditional jump or move depends on uninitialised value(s)
==28230==    at 0x4019AE: test_explode_XX (<stdin>:344)
==28230==    by 0x40243B: main (<stdin>:571)
==28230== 
--28230-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--28230-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
==28230== Conditional jump or move depends on uninitialised value(s)
==28230==    at 0x401A07: test_explode_XX (<stdin>:350)
==28230==    by 0x40243B: main (<stdin>:571)
==28230== 
==28230== Conditional jump or move depends on uninitialised value(s)
==28230==    at 0x400F75: destroyStringArray_sol (<stdin>:137)
==28230==    by 0x401BA0: test_explode_XX (<stdin>:378)
==28230==    by 0x40243B: main (<stdin>:571)
==28230== 
==28230== 
==28230== HEAP SUMMARY:
==28230==     in use at exit: 0 bytes in 0 blocks
==28230==   total heap usage: 8 allocs, 8 frees, 80 bytes allocated
==28230== 
==28230== All heap blocks were freed -- no leaks are possible
==28230== 
==28230== Use --track-origins=yes to see where uninitialised values come from
==28230== ERROR SUMMARY: 13 errors from 4 contexts (suppressed: 6 from 6)
==28230== 
==28230== 1 errors in context 1 of 4:
==28230== Conditional jump or move depends on uninitialised value(s)
==28230==    at 0x401941: test_explode_XX (<stdin>:340)
==28230==    by 0x40243B: main (<stdin>:571)
==28230== 
==28230== 
==28230== 4 errors in context 2 of 4:
==28230== Conditional jump or move depends on uninitialised value(s)
==28230==    at 0x400F75: destroyStringArray_sol (<stdin>:137)
==28230==    by 0x401BA0: test_explode_XX (<stdin>:378)
==28230==    by 0x40243B: main (<stdin>:571)
==28230== 
==28230== 
==28230== 4 errors in context 3 of 4:
==28230== Conditional jump or move depends on uninitialised value(s)
==28230==    at 0x401A07: test_explode_XX (<stdin>:350)
==28230==    by 0x40243B: main (<stdin>:571)
==28230== 
==28230== 
==28230== 4 errors in context 4 of 4:
==28230== Conditional jump or move depends on uninitialised value(s)
==28230==    at 0x4019AE: test_explode_XX (<stdin>:344)
==28230==    by 0x40243B: main (<stdin>:571)
==28230== 
--28230-- 
--28230-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--28230-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==28230== 
==28230== ERROR SUMMARY: 13 errors from 4 contexts (suppressed: 6 from 6)

test 6 :: explode(...)

   const char * str = "lady beatle brew";
   const char * delims = " ";
   int n;
   char * * strArr = explode(std, delims, &n);
   // strArr[0] is "lady"
   // strArr[1] is "beatle"
   // strArr[2] is "brew"
   (pass.)
Memory errors detected, testcase failed.
==3201== Memcheck, a memory error detector
==3201== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==3201== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==3201== Command: /tmp/.ptVh3K/a.out 5
==3201== Parent PID: 3198
==3201== 
--3201-- 
--3201-- Valgrind options:
--3201--    --tool=memcheck
--3201--    --leak-check=full
--3201--    --verbose
--3201--    --log-file=memcheck.log
--3201-- Contents of /proc/version:
--3201--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--3201-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--3201-- Page sizes: currently 4096, max supported 4096
--3201-- Valgrind library directory: /usr/lib64/valgrind
--3201-- Reading syms from /tmp/.ptVh3K/a.out
--3201-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--3201--    object doesn't have a dynamic symbol table
--3201-- Reading syms from /lib64/ld-2.12.so
--3201--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--3201--   .. build-id is valid
--3201-- Scheduler: using generic scheduler lock implementation.
--3201-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==3201== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-3201-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==3201== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-3201-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==3201== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-3201-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==3201== 
==3201== TO CONTROL THIS PROCESS USING vgdb (which you probably
==3201== don't want to do, unless you know exactly what you're doing,
==3201== or are doing some strange experiment):
==3201==   /usr/lib64/valgrind/../../bin/vgdb --pid=3201 ...command...
==3201== 
==3201== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==3201==   /path/to/gdb /tmp/.ptVh3K/a.out
==3201== and then give GDB the following command
==3201==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=3201
==3201== --pid is optional if only one valgrind process is running
==3201== 
--3201-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--3201-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--3201-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--3201-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--3201-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--3201-- Reading syms from /lib64/libc-2.12.so
--3201--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--3201--   .. build-id is valid
--3201-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--3201-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--3201-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--3201-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--3201-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--3201-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--3201-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--3201-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--3201-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
--3201-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--3201-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
==3201== Conditional jump or move depends on uninitialised value(s)
==3201==    at 0x401941: test_explode_XX (<stdin>:340)
==3201==    by 0x402454: main (<stdin>:572)
==3201== 
==3201== Conditional jump or move depends on uninitialised value(s)
==3201==    at 0x4019AE: test_explode_XX (<stdin>:344)
==3201==    by 0x402454: main (<stdin>:572)
==3201== 
--3201-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--3201-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
==3201== Conditional jump or move depends on uninitialised value(s)
==3201==    at 0x401A07: test_explode_XX (<stdin>:350)
==3201==    by 0x402454: main (<stdin>:572)
==3201== 
==3201== Conditional jump or move depends on uninitialised value(s)
==3201==    at 0x400F75: destroyStringArray_sol (<stdin>:137)
==3201==    by 0x401BA0: test_explode_XX (<stdin>:378)
==3201==    by 0x402454: main (<stdin>:572)
==3201== 
==3201== 
==3201== HEAP SUMMARY:
==3201==     in use at exit: 0 bytes in 0 blocks
==3201==   total heap usage: 8 allocs, 8 frees, 82 bytes allocated
==3201== 
==3201== All heap blocks were freed -- no leaks are possible
==3201== 
==3201== Use --track-origins=yes to see where uninitialised values come from
==3201== ERROR SUMMARY: 13 errors from 4 contexts (suppressed: 6 from 6)
==3201== 
==3201== 1 errors in context 1 of 4:
==3201== Conditional jump or move depends on uninitialised value(s)
==3201==    at 0x401941: test_explode_XX (<stdin>:340)
==3201==    by 0x402454: main (<stdin>:572)
==3201== 
==3201== 
==3201== 4 errors in context 2 of 4:
==3201== Conditional jump or move depends on uninitialised value(s)
==3201==    at 0x400F75: destroyStringArray_sol (<stdin>:137)
==3201==    by 0x401BA0: test_explode_XX (<stdin>:378)
==3201==    by 0x402454: main (<stdin>:572)
==3201== 
==3201== 
==3201== 4 errors in context 3 of 4:
==3201== Conditional jump or move depends on uninitialised value(s)
==3201==    at 0x401A07: test_explode_XX (<stdin>:350)
==3201==    by 0x402454: main (<stdin>:572)
==3201== 
==3201== 
==3201== 4 errors in context 4 of 4:
==3201== Conditional jump or move depends on uninitialised value(s)
==3201==    at 0x4019AE: test_explode_XX (<stdin>:344)
==3201==    by 0x402454: main (<stdin>:572)
==3201== 
--3201-- 
--3201-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--3201-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==3201== 
==3201== ERROR SUMMARY: 13 errors from 4 contexts (suppressed: 6 from 6)

test 7 :: explode(...)

   const char * str = "The\nTuring test";
   const char * delims = "";
   int n;
   char * * strArr = explode(std, delims, &n);
   // strArr[0] is "The\nTuring test"
   (pass.)
Memory errors detected, testcase failed.
==9922== Memcheck, a memory error detector
==9922== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==9922== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==9922== Command: /tmp/.ptVh3K/a.out 6
==9922== Parent PID: 9920
==9922== 
--9922-- 
--9922-- Valgrind options:
--9922--    --tool=memcheck
--9922--    --leak-check=full
--9922--    --verbose
--9922--    --log-file=memcheck.log
--9922-- Contents of /proc/version:
--9922--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--9922-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--9922-- Page sizes: currently 4096, max supported 4096
--9922-- Valgrind library directory: /usr/lib64/valgrind
--9922-- Reading syms from /tmp/.ptVh3K/a.out
--9922-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--9922--    object doesn't have a dynamic symbol table
--9922-- Reading syms from /lib64/ld-2.12.so
--9922--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--9922--   .. build-id is valid
--9922-- Scheduler: using generic scheduler lock implementation.
--9922-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==9922== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-9922-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==9922== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-9922-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==9922== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-9922-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==9922== 
==9922== TO CONTROL THIS PROCESS USING vgdb (which you probably
==9922== don't want to do, unless you know exactly what you're doing,
==9922== or are doing some strange experiment):
==9922==   /usr/lib64/valgrind/../../bin/vgdb --pid=9922 ...command...
==9922== 
==9922== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==9922==   /path/to/gdb /tmp/.ptVh3K/a.out
==9922== and then give GDB the following command
==9922==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=9922
==9922== --pid is optional if only one valgrind process is running
==9922== 
--9922-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--9922-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--9922-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--9922-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--9922-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--9922-- Reading syms from /lib64/libc-2.12.so
--9922--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--9922--   .. build-id is valid
--9922-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--9922-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--9922-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--9922-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--9922-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--9922-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--9922-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--9922-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--9922-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
--9922-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--9922-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
==9922== Conditional jump or move depends on uninitialised value(s)
==9922==    at 0x401941: test_explode_XX (<stdin>:340)
==9922==    by 0x40246D: main (<stdin>:573)
==9922== 
==9922== Conditional jump or move depends on uninitialised value(s)
==9922==    at 0x4019AE: test_explode_XX (<stdin>:344)
==9922==    by 0x40246D: main (<stdin>:573)
==9922== 
--9922-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--9922-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
==9922== Conditional jump or move depends on uninitialised value(s)
==9922==    at 0x401A07: test_explode_XX (<stdin>:350)
==9922==    by 0x40246D: main (<stdin>:573)
==9922== 
==9922== Conditional jump or move depends on uninitialised value(s)
==9922==    at 0x400F75: destroyStringArray_sol (<stdin>:137)
==9922==    by 0x401BA0: test_explode_XX (<stdin>:378)
==9922==    by 0x40246D: main (<stdin>:573)
==9922== 
==9922== 
==9922== HEAP SUMMARY:
==9922==     in use at exit: 0 bytes in 0 blocks
==9922==   total heap usage: 4 allocs, 4 frees, 48 bytes allocated
==9922== 
==9922== All heap blocks were freed -- no leaks are possible
==9922== 
==9922== Use --track-origins=yes to see where uninitialised values come from
==9922== ERROR SUMMARY: 7 errors from 4 contexts (suppressed: 6 from 6)
==9922== 
==9922== 1 errors in context 1 of 4:
==9922== Conditional jump or move depends on uninitialised value(s)
==9922==    at 0x401941: test_explode_XX (<stdin>:340)
==9922==    by 0x40246D: main (<stdin>:573)
==9922== 
==9922== 
==9922== 2 errors in context 2 of 4:
==9922== Conditional jump or move depends on uninitialised value(s)
==9922==    at 0x400F75: destroyStringArray_sol (<stdin>:137)
==9922==    by 0x401BA0: test_explode_XX (<stdin>:378)
==9922==    by 0x40246D: main (<stdin>:573)
==9922== 
==9922== 
==9922== 2 errors in context 3 of 4:
==9922== Conditional jump or move depends on uninitialised value(s)
==9922==    at 0x401A07: test_explode_XX (<stdin>:350)
==9922==    by 0x40246D: main (<stdin>:573)
==9922== 
==9922== 
==9922== 2 errors in context 4 of 4:
==9922== Conditional jump or move depends on uninitialised value(s)
==9922==    at 0x4019AE: test_explode_XX (<stdin>:344)
==9922==    by 0x40246D: main (<stdin>:573)
==9922== 
--9922-- 
--9922-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--9922-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==9922== 
==9922== ERROR SUMMARY: 7 errors from 4 contexts (suppressed: 6 from 6)

test 8 :: explode(...)

   const char * str = "The\nTuring test";
   const char * delims = "\n";
   int n;
   char * * strArr = explode(std, delims, &n);
   // strArr[0] is "The"
   // strArr[1] is "Turing test"
   (pass.)
Memory errors detected, testcase failed.
==16113== Memcheck, a memory error detector
==16113== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==16113== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==16113== Command: /tmp/.ptVh3K/a.out 7
==16113== Parent PID: 16109
==16113== 
--16113-- 
--16113-- Valgrind options:
--16113--    --tool=memcheck
--16113--    --leak-check=full
--16113--    --verbose
--16113--    --log-file=memcheck.log
--16113-- Contents of /proc/version:
--16113--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--16113-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--16113-- Page sizes: currently 4096, max supported 4096
--16113-- Valgrind library directory: /usr/lib64/valgrind
--16113-- Reading syms from /tmp/.ptVh3K/a.out
--16113-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--16113--    object doesn't have a dynamic symbol table
--16113-- Reading syms from /lib64/ld-2.12.so
--16113--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--16113--   .. build-id is valid
--16113-- Scheduler: using generic scheduler lock implementation.
--16113-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==16113== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-16113-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==16113== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-16113-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==16113== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-16113-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==16113== 
==16113== TO CONTROL THIS PROCESS USING vgdb (which you probably
==16113== don't want to do, unless you know exactly what you're doing,
==16113== or are doing some strange experiment):
==16113==   /usr/lib64/valgrind/../../bin/vgdb --pid=16113 ...command...
==16113== 
==16113== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==16113==   /path/to/gdb /tmp/.ptVh3K/a.out
==16113== and then give GDB the following command
==16113==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=16113
==16113== --pid is optional if only one valgrind process is running
==16113== 
--16113-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--16113-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--16113-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--16113-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--16113-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--16113-- Reading syms from /lib64/libc-2.12.so
--16113--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--16113--   .. build-id is valid
--16113-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--16113-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--16113-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--16113-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--16113-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--16113-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--16113-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--16113-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--16113-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
--16113-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--16113-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
==16113== Conditional jump or move depends on uninitialised value(s)
==16113==    at 0x401941: test_explode_XX (<stdin>:340)
==16113==    by 0x402486: main (<stdin>:574)
==16113== 
==16113== Conditional jump or move depends on uninitialised value(s)
==16113==    at 0x4019AE: test_explode_XX (<stdin>:344)
==16113==    by 0x402486: main (<stdin>:574)
==16113== 
--16113-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--16113-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
==16113== Conditional jump or move depends on uninitialised value(s)
==16113==    at 0x401A07: test_explode_XX (<stdin>:350)
==16113==    by 0x402486: main (<stdin>:574)
==16113== 
==16113== Conditional jump or move depends on uninitialised value(s)
==16113==    at 0x400F75: destroyStringArray_sol (<stdin>:137)
==16113==    by 0x401BA0: test_explode_XX (<stdin>:378)
==16113==    by 0x402486: main (<stdin>:574)
==16113== 
==16113== 
==16113== HEAP SUMMARY:
==16113==     in use at exit: 0 bytes in 0 blocks
==16113==   total heap usage: 6 allocs, 6 frees, 64 bytes allocated
==16113== 
==16113== All heap blocks were freed -- no leaks are possible
==16113== 
==16113== Use --track-origins=yes to see where uninitialised values come from
==16113== ERROR SUMMARY: 10 errors from 4 contexts (suppressed: 6 from 6)
==16113== 
==16113== 1 errors in context 1 of 4:
==16113== Conditional jump or move depends on uninitialised value(s)
==16113==    at 0x401941: test_explode_XX (<stdin>:340)
==16113==    by 0x402486: main (<stdin>:574)
==16113== 
==16113== 
==16113== 3 errors in context 2 of 4:
==16113== Conditional jump or move depends on uninitialised value(s)
==16113==    at 0x400F75: destroyStringArray_sol (<stdin>:137)
==16113==    by 0x401BA0: test_explode_XX (<stdin>:378)
==16113==    by 0x402486: main (<stdin>:574)
==16113== 
==16113== 
==16113== 3 errors in context 3 of 4:
==16113== Conditional jump or move depends on uninitialised value(s)
==16113==    at 0x401A07: test_explode_XX (<stdin>:350)
==16113==    by 0x402486: main (<stdin>:574)
==16113== 
==16113== 
==16113== 3 errors in context 4 of 4:
==16113== Conditional jump or move depends on uninitialised value(s)
==16113==    at 0x4019AE: test_explode_XX (<stdin>:344)
==16113==    by 0x402486: main (<stdin>:574)
==16113== 
--16113-- 
--16113-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--16113-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==16113== 
==16113== ERROR SUMMARY: 10 errors from 4 contexts (suppressed: 6 from 6)

test 9 :: explode(...)

   const char * str = "The\nTuring test";
   const char * delims = "Tt";
   int n;
   char * * strArr = explode(std, delims, &n);
   // strArr[0] is ""
   // strArr[1] is "he\n"
   // strArr[2] is "uring "
   // strArr[3] is "es"
   // strArr[4] is ""
   (pass.)
Memory errors detected, testcase failed.
==22737== Memcheck, a memory error detector
==22737== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==22737== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==22737== Command: /tmp/.ptVh3K/a.out 8
==22737== Parent PID: 22734
==22737== 
--22737-- 
--22737-- Valgrind options:
--22737--    --tool=memcheck
--22737--    --leak-check=full
--22737--    --verbose
--22737--    --log-file=memcheck.log
--22737-- Contents of /proc/version:
--22737--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--22737-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--22737-- Page sizes: currently 4096, max supported 4096
--22737-- Valgrind library directory: /usr/lib64/valgrind
--22737-- Reading syms from /tmp/.ptVh3K/a.out
--22737-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--22737--    object doesn't have a dynamic symbol table
--22737-- Reading syms from /lib64/ld-2.12.so
--22737--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--22737--   .. build-id is valid
--22737-- Scheduler: using generic scheduler lock implementation.
--22737-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==22737== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-22737-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==22737== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-22737-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==22737== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-22737-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==22737== 
==22737== TO CONTROL THIS PROCESS USING vgdb (which you probably
==22737== don't want to do, unless you know exactly what you're doing,
==22737== or are doing some strange experiment):
==22737==   /usr/lib64/valgrind/../../bin/vgdb --pid=22737 ...command...
==22737== 
==22737== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==22737==   /path/to/gdb /tmp/.ptVh3K/a.out
==22737== and then give GDB the following command
==22737==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=22737
==22737== --pid is optional if only one valgrind process is running
==22737== 
--22737-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--22737-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--22737-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--22737-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--22737-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--22737-- Reading syms from /lib64/libc-2.12.so
--22737--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--22737--   .. build-id is valid
--22737-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--22737-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--22737-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--22737-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--22737-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--22737-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--22737-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--22737-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--22737-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
--22737-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--22737-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
==22737== Conditional jump or move depends on uninitialised value(s)
==22737==    at 0x401941: test_explode_XX (<stdin>:340)
==22737==    by 0x40249F: main (<stdin>:575)
==22737== 
==22737== Conditional jump or move depends on uninitialised value(s)
==22737==    at 0x4019AE: test_explode_XX (<stdin>:344)
==22737==    by 0x40249F: main (<stdin>:575)
==22737== 
--22737-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--22737-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
==22737== Conditional jump or move depends on uninitialised value(s)
==22737==    at 0x401A07: test_explode_XX (<stdin>:350)
==22737==    by 0x40249F: main (<stdin>:575)
==22737== 
==22737== Conditional jump or move depends on uninitialised value(s)
==22737==    at 0x400F75: destroyStringArray_sol (<stdin>:137)
==22737==    by 0x401BA0: test_explode_XX (<stdin>:378)
==22737==    by 0x40249F: main (<stdin>:575)
==22737== 
==22737== 
==22737== HEAP SUMMARY:
==22737==     in use at exit: 0 bytes in 0 blocks
==22737==   total heap usage: 12 allocs, 12 frees, 112 bytes allocated
==22737== 
==22737== All heap blocks were freed -- no leaks are possible
==22737== 
==22737== Use --track-origins=yes to see where uninitialised values come from
==22737== ERROR SUMMARY: 19 errors from 4 contexts (suppressed: 6 from 6)
==22737== 
==22737== 1 errors in context 1 of 4:
==22737== Conditional jump or move depends on uninitialised value(s)
==22737==    at 0x401941: test_explode_XX (<stdin>:340)
==22737==    by 0x40249F: main (<stdin>:575)
==22737== 
==22737== 
==22737== 6 errors in context 2 of 4:
==22737== Conditional jump or move depends on uninitialised value(s)
==22737==    at 0x400F75: destroyStringArray_sol (<stdin>:137)
==22737==    by 0x401BA0: test_explode_XX (<stdin>:378)
==22737==    by 0x40249F: main (<stdin>:575)
==22737== 
==22737== 
==22737== 6 errors in context 3 of 4:
==22737== Conditional jump or move depends on uninitialised value(s)
==22737==    at 0x401A07: test_explode_XX (<stdin>:350)
==22737==    by 0x40249F: main (<stdin>:575)
==22737== 
==22737== 
==22737== 6 errors in context 4 of 4:
==22737== Conditional jump or move depends on uninitialised value(s)
==22737==    at 0x4019AE: test_explode_XX (<stdin>:344)
==22737==    by 0x40249F: main (<stdin>:575)
==22737== 
--22737-- 
--22737-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--22737-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==22737== 
==22737== ERROR SUMMARY: 19 errors from 4 contexts (suppressed: 6 from 6)

test 10 :: explode(...)

   const char * str = "";
   const char * delims = "Tt";
   int n;
   char * * strArr = explode(std, delims, &n);
   // strArr[0] is ""
   (pass.)
Memory errors detected, testcase failed.
==28699== Memcheck, a memory error detector
==28699== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==28699== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==28699== Command: /tmp/.ptVh3K/a.out 9
==28699== Parent PID: 28698
==28699== 
--28699-- 
--28699-- Valgrind options:
--28699--    --tool=memcheck
--28699--    --leak-check=full
--28699--    --verbose
--28699--    --log-file=memcheck.log
--28699-- Contents of /proc/version:
--28699--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--28699-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--28699-- Page sizes: currently 4096, max supported 4096
--28699-- Valgrind library directory: /usr/lib64/valgrind
--28699-- Reading syms from /tmp/.ptVh3K/a.out
--28699-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--28699--    object doesn't have a dynamic symbol table
--28699-- Reading syms from /lib64/ld-2.12.so
--28699--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--28699--   .. build-id is valid
--28699-- Scheduler: using generic scheduler lock implementation.
--28699-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==28699== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-28699-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==28699== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-28699-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==28699== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-28699-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==28699== 
==28699== TO CONTROL THIS PROCESS USING vgdb (which you probably
==28699== don't want to do, unless you know exactly what you're doing,
==28699== or are doing some strange experiment):
==28699==   /usr/lib64/valgrind/../../bin/vgdb --pid=28699 ...command...
==28699== 
==28699== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==28699==   /path/to/gdb /tmp/.ptVh3K/a.out
==28699== and then give GDB the following command
==28699==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=28699
==28699== --pid is optional if only one valgrind process is running
==28699== 
--28699-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--28699-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--28699-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--28699-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--28699-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--28699-- Reading syms from /lib64/libc-2.12.so
--28699--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--28699--   .. build-id is valid
--28699-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--28699-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--28699-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--28699-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--28699-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--28699-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--28699-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--28699-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--28699-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
==28699== Conditional jump or move depends on uninitialised value(s)
==28699==    at 0x401941: test_explode_XX (<stdin>:340)
==28699==    by 0x4024B8: main (<stdin>:576)
==28699== 
==28699== Conditional jump or move depends on uninitialised value(s)
==28699==    at 0x4019AE: test_explode_XX (<stdin>:344)
==28699==    by 0x4024B8: main (<stdin>:576)
==28699== 
--28699-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--28699-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
==28699== Conditional jump or move depends on uninitialised value(s)
==28699==    at 0x401A07: test_explode_XX (<stdin>:350)
==28699==    by 0x4024B8: main (<stdin>:576)
==28699== 
==28699== Conditional jump or move depends on uninitialised value(s)
==28699==    at 0x400F75: destroyStringArray_sol (<stdin>:137)
==28699==    by 0x401BA0: test_explode_XX (<stdin>:378)
==28699==    by 0x4024B8: main (<stdin>:576)
==28699== 
==28699== 
==28699== HEAP SUMMARY:
==28699==     in use at exit: 0 bytes in 0 blocks
==28699==   total heap usage: 4 allocs, 4 frees, 18 bytes allocated
==28699== 
==28699== All heap blocks were freed -- no leaks are possible
==28699== 
==28699== Use --track-origins=yes to see where uninitialised values come from
==28699== ERROR SUMMARY: 7 errors from 4 contexts (suppressed: 6 from 6)
==28699== 
==28699== 1 errors in context 1 of 4:
==28699== Conditional jump or move depends on uninitialised value(s)
==28699==    at 0x401941: test_explode_XX (<stdin>:340)
==28699==    by 0x4024B8: main (<stdin>:576)
==28699== 
==28699== 
==28699== 2 errors in context 2 of 4:
==28699== Conditional jump or move depends on uninitialised value(s)
==28699==    at 0x400F75: destroyStringArray_sol (<stdin>:137)
==28699==    by 0x401BA0: test_explode_XX (<stdin>:378)
==28699==    by 0x4024B8: main (<stdin>:576)
==28699== 
==28699== 
==28699== 2 errors in context 3 of 4:
==28699== Conditional jump or move depends on uninitialised value(s)
==28699==    at 0x401A07: test_explode_XX (<stdin>:350)
==28699==    by 0x4024B8: main (<stdin>:576)
==28699== 
==28699== 
==28699== 2 errors in context 4 of 4:
==28699== Conditional jump or move depends on uninitialised value(s)
==28699==    at 0x4019AE: test_explode_XX (<stdin>:344)
==28699==    by 0x4024B8: main (<stdin>:576)
==28699== 
--28699-- 
--28699-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--28699-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==28699== 
==28699== ERROR SUMMARY: 7 errors from 4 contexts (suppressed: 6 from 6)

test 11 :: explode(...)

   const char * str = "";
   const char * delims = "";
   int n;
   char * * strArr = explode(std, delims, &n);
   // strArr[0] is ""
   (pass.)
Memory errors detected, testcase failed.
==2201== Memcheck, a memory error detector
==2201== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==2201== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==2201== Command: /tmp/.ptVh3K/a.out 10
==2201== Parent PID: 2199
==2201== 
--2201-- 
--2201-- Valgrind options:
--2201--    --tool=memcheck
--2201--    --leak-check=full
--2201--    --verbose
--2201--    --log-file=memcheck.log
--2201-- Contents of /proc/version:
--2201--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--2201-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--2201-- Page sizes: currently 4096, max supported 4096
--2201-- Valgrind library directory: /usr/lib64/valgrind
--2201-- Reading syms from /tmp/.ptVh3K/a.out
--2201-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--2201--    object doesn't have a dynamic symbol table
--2201-- Reading syms from /lib64/ld-2.12.so
--2201--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--2201--   .. build-id is valid
--2201-- Scheduler: using generic scheduler lock implementation.
--2201-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==2201== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-2201-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==2201== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-2201-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==2201== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-2201-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==2201== 
==2201== TO CONTROL THIS PROCESS USING vgdb (which you probably
==2201== don't want to do, unless you know exactly what you're doing,
==2201== or are doing some strange experiment):
==2201==   /usr/lib64/valgrind/../../bin/vgdb --pid=2201 ...command...
==2201== 
==2201== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==2201==   /path/to/gdb /tmp/.ptVh3K/a.out
==2201== and then give GDB the following command
==2201==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=2201
==2201== --pid is optional if only one valgrind process is running
==2201== 
--2201-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--2201-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--2201-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--2201-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--2201-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--2201-- Reading syms from /lib64/libc-2.12.so
--2201--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--2201--   .. build-id is valid
--2201-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--2201-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--2201-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--2201-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--2201-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--2201-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--2201-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--2201-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--2201-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
==2201== Conditional jump or move depends on uninitialised value(s)
==2201==    at 0x401941: test_explode_XX (<stdin>:340)
==2201==    by 0x4024D1: main (<stdin>:577)
==2201== 
==2201== Conditional jump or move depends on uninitialised value(s)
==2201==    at 0x4019AE: test_explode_XX (<stdin>:344)
==2201==    by 0x4024D1: main (<stdin>:577)
==2201== 
--2201-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--2201-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
==2201== Conditional jump or move depends on uninitialised value(s)
==2201==    at 0x401A07: test_explode_XX (<stdin>:350)
==2201==    by 0x4024D1: main (<stdin>:577)
==2201== 
==2201== Conditional jump or move depends on uninitialised value(s)
==2201==    at 0x400F75: destroyStringArray_sol (<stdin>:137)
==2201==    by 0x401BA0: test_explode_XX (<stdin>:378)
==2201==    by 0x4024D1: main (<stdin>:577)
==2201== 
==2201== 
==2201== HEAP SUMMARY:
==2201==     in use at exit: 0 bytes in 0 blocks
==2201==   total heap usage: 4 allocs, 4 frees, 18 bytes allocated
==2201== 
==2201== All heap blocks were freed -- no leaks are possible
==2201== 
==2201== Use --track-origins=yes to see where uninitialised values come from
==2201== ERROR SUMMARY: 7 errors from 4 contexts (suppressed: 6 from 6)
==2201== 
==2201== 1 errors in context 1 of 4:
==2201== Conditional jump or move depends on uninitialised value(s)
==2201==    at 0x401941: test_explode_XX (<stdin>:340)
==2201==    by 0x4024D1: main (<stdin>:577)
==2201== 
==2201== 
==2201== 2 errors in context 2 of 4:
==2201== Conditional jump or move depends on uninitialised value(s)
==2201==    at 0x400F75: destroyStringArray_sol (<stdin>:137)
==2201==    by 0x401BA0: test_explode_XX (<stdin>:378)
==2201==    by 0x4024D1: main (<stdin>:577)
==2201== 
==2201== 
==2201== 2 errors in context 3 of 4:
==2201== Conditional jump or move depends on uninitialised value(s)
==2201==    at 0x401A07: test_explode_XX (<stdin>:350)
==2201==    by 0x4024D1: main (<stdin>:577)
==2201== 
==2201== 
==2201== 2 errors in context 4 of 4:
==2201== Conditional jump or move depends on uninitialised value(s)
==2201==    at 0x4019AE: test_explode_XX (<stdin>:344)
==2201==    by 0x4024D1: main (<stdin>:577)
==2201== 
--2201-- 
--2201-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--2201-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==2201== 
==2201== ERROR SUMMARY: 7 errors from 4 contexts (suppressed: 6 from 6)

test 12 :: explode(...)

   const char * str = "The more that you read, the more things you will know. The more that you learn, the more places you\'ll go.";
   const char * delims = " ,;.";
   int n;
   char * * strArr = explode(std, delims, &n);
   // strArr[0] is "The"
   // strArr[1] is "more"
   // strArr[2] is "that"
   // strArr[3] is "you"
   // strArr[4] is "read"
   // strArr[5] is ""
   // strArr[6] is "the"
   // strArr[7] is "more"
   // strArr[8] is "things"
   // strArr[9] is "you"
   // strArr[10] is "will"
   // strArr[11] is "know"
   // strArr[12] is ""
   // strArr[13] is "The"
   // strArr[14] is "more"
   // strArr[15] is "that"
   // strArr[16] is "you"
   // strArr[17] is "learn"
   // strArr[18] is ""
   // strArr[19] is "the"
   // strArr[20] is "more"
   // strArr[21] is "places"
   // strArr[22] is "you\'ll"
   // strArr[23] is "go"
   // strArr[24] is ""
   (pass.)
Memory errors detected, testcase failed.
==9194== Memcheck, a memory error detector
==9194== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==9194== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==9194== Command: /tmp/.ptVh3K/a.out 11
==9194== Parent PID: 9192
==9194== 
--9194-- 
--9194-- Valgrind options:
--9194--    --tool=memcheck
--9194--    --leak-check=full
--9194--    --verbose
--9194--    --log-file=memcheck.log
--9194-- Contents of /proc/version:
--9194--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--9194-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--9194-- Page sizes: currently 4096, max supported 4096
--9194-- Valgrind library directory: /usr/lib64/valgrind
--9194-- Reading syms from /tmp/.ptVh3K/a.out
--9194-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--9194--    object doesn't have a dynamic symbol table
--9194-- Reading syms from /lib64/ld-2.12.so
--9194--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--9194--   .. build-id is valid
--9194-- Scheduler: using generic scheduler lock implementation.
--9194-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==9194== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-9194-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==9194== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-9194-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==9194== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-9194-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==9194== 
==9194== TO CONTROL THIS PROCESS USING vgdb (which you probably
==9194== don't want to do, unless you know exactly what you're doing,
==9194== or are doing some strange experiment):
==9194==   /usr/lib64/valgrind/../../bin/vgdb --pid=9194 ...command...
==9194== 
==9194== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==9194==   /path/to/gdb /tmp/.ptVh3K/a.out
==9194== and then give GDB the following command
==9194==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=9194
==9194== --pid is optional if only one valgrind process is running
==9194== 
--9194-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--9194-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--9194-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--9194-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--9194-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--9194-- Reading syms from /lib64/libc-2.12.so
--9194--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--9194--   .. build-id is valid
--9194-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--9194-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--9194-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--9194-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--9194-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--9194-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--9194-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--9194-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--9194-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
--9194-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--9194-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
==9194== Conditional jump or move depends on uninitialised value(s)
==9194==    at 0x401941: test_explode_XX (<stdin>:340)
==9194==    by 0x4024EF: main (<stdin>:578)
==9194== 
==9194== Conditional jump or move depends on uninitialised value(s)
==9194==    at 0x4019AE: test_explode_XX (<stdin>:344)
==9194==    by 0x4024EF: main (<stdin>:578)
==9194== 
--9194-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--9194-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
==9194== Conditional jump or move depends on uninitialised value(s)
==9194==    at 0x401A07: test_explode_XX (<stdin>:350)
==9194==    by 0x4024EF: main (<stdin>:578)
==9194== 
==9194== Conditional jump or move depends on uninitialised value(s)
==9194==    at 0x400F75: destroyStringArray_sol (<stdin>:137)
==9194==    by 0x401BA0: test_explode_XX (<stdin>:378)
==9194==    by 0x4024EF: main (<stdin>:578)
==9194== 
==9194== 
==9194== HEAP SUMMARY:
==9194==     in use at exit: 0 bytes in 0 blocks
==9194==   total heap usage: 52 allocs, 52 frees, 614 bytes allocated
==9194== 
==9194== All heap blocks were freed -- no leaks are possible
==9194== 
==9194== Use --track-origins=yes to see where uninitialised values come from
==9194== ERROR SUMMARY: 79 errors from 4 contexts (suppressed: 6 from 6)
==9194== 
==9194== 1 errors in context 1 of 4:
==9194== Conditional jump or move depends on uninitialised value(s)
==9194==    at 0x401941: test_explode_XX (<stdin>:340)
==9194==    by 0x4024EF: main (<stdin>:578)
==9194== 
==9194== 
==9194== 26 errors in context 2 of 4:
==9194== Conditional jump or move depends on uninitialised value(s)
==9194==    at 0x400F75: destroyStringArray_sol (<stdin>:137)
==9194==    by 0x401BA0: test_explode_XX (<stdin>:378)
==9194==    by 0x4024EF: main (<stdin>:578)
==9194== 
==9194== 
==9194== 26 errors in context 3 of 4:
==9194== Conditional jump or move depends on uninitialised value(s)
==9194==    at 0x401A07: test_explode_XX (<stdin>:350)
==9194==    by 0x4024EF: main (<stdin>:578)
==9194== 
==9194== 
==9194== 26 errors in context 4 of 4:
==9194== Conditional jump or move depends on uninitialised value(s)
==9194==    at 0x4019AE: test_explode_XX (<stdin>:344)
==9194==    by 0x4024EF: main (<stdin>:578)
==9194== 
--9194-- 
--9194-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--9194-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==9194== 
==9194== ERROR SUMMARY: 79 errors from 4 contexts (suppressed: 6 from 6)

test 13 :: explode(...)

   const char * str = "Twas brillig, and the slithy toves\nDid gyre and gimble in the wabe:\nAll mimsy were the borogoves,\nAnd the mome raths outgrabe.\n\nBeware the Jabberwock, my son!\nThe jaws that bite, the claws that catch!\nBeware the Jubjub bird, and shun\nThe frumious Bandersnatch!\n\nHe took his vorpal sword in hand:\nLong time the manxome foe he sought --\nSo rested he by the Tumtum tree,\nAnd stood awhile in thought.\n\nAnd, as in uffish thought he stood,\nThe Jabberwock, with eyes of flame,\nCame whiffling through the tulgey wood,\nAnd burbled as it came!\n\nOne, two! One, two! And through and through\nThe vorpal blade went snicker-snack!\nHe left it dead, and with its head\nHe went galumphing back.\n\nAnd, has thou slain the Jabberwock?\nCome to my arms, my beamish boy!\nO frabjous day! Callooh! Callay!\nHe chortled in his joy.\n\nTwas brillig, and the slithy toves\nDid gyre and gimble in the wabe;\nAll mimsy were the borogoves,\nAnd the mome raths outgrabe.\n";
   const char * delims = "\n";
   int n;
   char * * strArr = explode(std, delims, &n);
   // strArr[0] is "Twas brillig, and the slithy toves"
   // strArr[1] is "Did gyre and gimble in the wabe:"
   // strArr[2] is "All mimsy were the borogoves,"
   // strArr[3] is "And the mome raths outgrabe."
   // strArr[4] is ""
   // strArr[5] is "Beware the Jabberwock, my son!"
   // strArr[6] is "The jaws that bite, the claws that catch!"
   // strArr[7] is "Beware the Jubjub bird, and shun"
   // strArr[8] is "The frumious Bandersnatch!"
   // strArr[9] is ""
   // strArr[10] is "He took his vorpal sword in hand:"
   // strArr[11] is "Long time the manxome foe he sought --"
   // strArr[12] is "So rested he by the Tumtum tree,"
   // strArr[13] is "And stood awhile in thought."
   // strArr[14] is ""
   // strArr[15] is "And, as in uffish thought he stood,"
   // strArr[16] is "The Jabberwock, with eyes of flame,"
   // strArr[17] is "Came whiffling through the tulgey wood,"
   // strArr[18] is "And burbled as it came!"
   // strArr[19] is ""
   // strArr[20] is "One, two! One, two! And through and through"
   // strArr[21] is "The vorpal blade went snicker-snack!"
   // strArr[22] is "He left it dead, and with its head"
   // strArr[23] is "He went galumphing back."
   // strArr[24] is ""
   // strArr[25] is "And, has thou slain the Jabberwock?"
   // strArr[26] is "Come to my arms, my beamish boy!"
   // strArr[27] is "O frabjous day! Callooh! Callay!"
   // strArr[28] is "He chortled in his joy."
   // strArr[29] is ""
   // strArr[30] is "Twas brillig, and the slithy toves"
   // strArr[31] is "Did gyre and gimble in the wabe;"
   // strArr[32] is "All mimsy were the borogoves,"
   // strArr[33] is "And the mome raths outgrabe."
   // strArr[34] is ""
   (pass.)
Memory errors detected, testcase failed.
==15915== Memcheck, a memory error detector
==15915== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==15915== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==15915== Command: /tmp/.ptVh3K/a.out 12
==15915== Parent PID: 15914
==15915== 
--15915-- 
--15915-- Valgrind options:
--15915--    --tool=memcheck
--15915--    --leak-check=full
--15915--    --verbose
--15915--    --log-file=memcheck.log
--15915-- Contents of /proc/version:
--15915--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--15915-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--15915-- Page sizes: currently 4096, max supported 4096
--15915-- Valgrind library directory: /usr/lib64/valgrind
--15915-- Reading syms from /tmp/.ptVh3K/a.out
--15915-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--15915--    object doesn't have a dynamic symbol table
--15915-- Reading syms from /lib64/ld-2.12.so
--15915--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--15915--   .. build-id is valid
--15915-- Scheduler: using generic scheduler lock implementation.
--15915-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==15915== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-15915-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==15915== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-15915-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==15915== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-15915-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==15915== 
==15915== TO CONTROL THIS PROCESS USING vgdb (which you probably
==15915== don't want to do, unless you know exactly what you're doing,
==15915== or are doing some strange experiment):
==15915==   /usr/lib64/valgrind/../../bin/vgdb --pid=15915 ...command...
==15915== 
==15915== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==15915==   /path/to/gdb /tmp/.ptVh3K/a.out
==15915== and then give GDB the following command
==15915==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=15915
==15915== --pid is optional if only one valgrind process is running
==15915== 
--15915-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--15915-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--15915-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--15915-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--15915-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--15915-- Reading syms from /lib64/libc-2.12.so
--15915--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--15915--   .. build-id is valid
--15915-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--15915-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--15915-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--15915-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--15915-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--15915-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--15915-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--15915-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--15915-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
--15915-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--15915-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
==15915== Conditional jump or move depends on uninitialised value(s)
==15915==    at 0x401941: test_explode_XX (<stdin>:340)
==15915==    by 0x40250D: main (<stdin>:579)
==15915== 
==15915== Conditional jump or move depends on uninitialised value(s)
==15915==    at 0x4019AE: test_explode_XX (<stdin>:344)
==15915==    by 0x40250D: main (<stdin>:579)
==15915== 
--15915-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--15915-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
==15915== Conditional jump or move depends on uninitialised value(s)
==15915==    at 0x401A07: test_explode_XX (<stdin>:350)
==15915==    by 0x40250D: main (<stdin>:579)
==15915== 
==15915== Conditional jump or move depends on uninitialised value(s)
==15915==    at 0x400F75: destroyStringArray_sol (<stdin>:137)
==15915==    by 0x401BA0: test_explode_XX (<stdin>:378)
==15915==    by 0x40250D: main (<stdin>:579)
==15915== 
==15915== 
==15915== HEAP SUMMARY:
==15915==     in use at exit: 0 bytes in 0 blocks
==15915==   total heap usage: 72 allocs, 72 frees, 2,424 bytes allocated
==15915== 
==15915== All heap blocks were freed -- no leaks are possible
==15915== 
==15915== Use --track-origins=yes to see where uninitialised values come from
==15915== ERROR SUMMARY: 109 errors from 4 contexts (suppressed: 6 from 6)
==15915== 
==15915== 1 errors in context 1 of 4:
==15915== Conditional jump or move depends on uninitialised value(s)
==15915==    at 0x401941: test_explode_XX (<stdin>:340)
==15915==    by 0x40250D: main (<stdin>:579)
==15915== 
==15915== 
==15915== 36 errors in context 2 of 4:
==15915== Conditional jump or move depends on uninitialised value(s)
==15915==    at 0x400F75: destroyStringArray_sol (<stdin>:137)
==15915==    by 0x401BA0: test_explode_XX (<stdin>:378)
==15915==    by 0x40250D: main (<stdin>:579)
==15915== 
==15915== 
==15915== 36 errors in context 3 of 4:
==15915== Conditional jump or move depends on uninitialised value(s)
==15915==    at 0x401A07: test_explode_XX (<stdin>:350)
==15915==    by 0x40250D: main (<stdin>:579)
==15915== 
==15915== 
==15915== 36 errors in context 4 of 4:
==15915== Conditional jump or move depends on uninitialised value(s)
==15915==    at 0x4019AE: test_explode_XX (<stdin>:344)
==15915==    by 0x40250D: main (<stdin>:579)
==15915== 
--15915-- 
--15915-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--15915-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==15915== 
==15915== ERROR SUMMARY: 109 errors from 4 contexts (suppressed: 6 from 6)

test 14 :: explode(...)

   const char * str = "aaaaa";
   const char * delims = "a";
   int n;
   char * * strArr = explode(std, delims, &n);
   // strArr[0] is ""
   // strArr[1] is ""
   // strArr[2] is ""
   // strArr[3] is ""
   // strArr[4] is ""
   // strArr[5] is ""
   (pass.)
Memory errors detected, testcase failed.
==22152== Memcheck, a memory error detector
==22152== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==22152== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==22152== Command: /tmp/.ptVh3K/a.out 13
==22152== Parent PID: 22151
==22152== 
--22152-- 
--22152-- Valgrind options:
--22152--    --tool=memcheck
--22152--    --leak-check=full
--22152--    --verbose
--22152--    --log-file=memcheck.log
--22152-- Contents of /proc/version:
--22152--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--22152-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--22152-- Page sizes: currently 4096, max supported 4096
--22152-- Valgrind library directory: /usr/lib64/valgrind
--22152-- Reading syms from /tmp/.ptVh3K/a.out
--22152-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--22152--    object doesn't have a dynamic symbol table
--22152-- Reading syms from /lib64/ld-2.12.so
--22152--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--22152--   .. build-id is valid
--22152-- Scheduler: using generic scheduler lock implementation.
--22152-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==22152== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-22152-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==22152== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-22152-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==22152== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-22152-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==22152== 
==22152== TO CONTROL THIS PROCESS USING vgdb (which you probably
==22152== don't want to do, unless you know exactly what you're doing,
==22152== or are doing some strange experiment):
==22152==   /usr/lib64/valgrind/../../bin/vgdb --pid=22152 ...command...
==22152== 
==22152== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==22152==   /path/to/gdb /tmp/.ptVh3K/a.out
==22152== and then give GDB the following command
==22152==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=22152
==22152== --pid is optional if only one valgrind process is running
==22152== 
--22152-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--22152-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--22152-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--22152-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--22152-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--22152-- Reading syms from /lib64/libc-2.12.so
--22152--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--22152--   .. build-id is valid
--22152-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--22152-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--22152-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--22152-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--22152-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--22152-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--22152-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--22152-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--22152-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
--22152-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--22152-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
==22152== Conditional jump or move depends on uninitialised value(s)
==22152==    at 0x401941: test_explode_XX (<stdin>:340)
==22152==    by 0x402526: main (<stdin>:580)
==22152== 
==22152== Conditional jump or move depends on uninitialised value(s)
==22152==    at 0x4019AE: test_explode_XX (<stdin>:344)
==22152==    by 0x402526: main (<stdin>:580)
==22152== 
--22152-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--22152-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
==22152== Conditional jump or move depends on uninitialised value(s)
==22152==    at 0x401A07: test_explode_XX (<stdin>:350)
==22152==    by 0x402526: main (<stdin>:580)
==22152== 
==22152== Conditional jump or move depends on uninitialised value(s)
==22152==    at 0x400F75: destroyStringArray_sol (<stdin>:137)
==22152==    by 0x401BA0: test_explode_XX (<stdin>:378)
==22152==    by 0x402526: main (<stdin>:580)
==22152== 
==22152== 
==22152== HEAP SUMMARY:
==22152==     in use at exit: 0 bytes in 0 blocks
==22152==   total heap usage: 14 allocs, 14 frees, 108 bytes allocated
==22152== 
==22152== All heap blocks were freed -- no leaks are possible
==22152== 
==22152== Use --track-origins=yes to see where uninitialised values come from
==22152== ERROR SUMMARY: 22 errors from 4 contexts (suppressed: 6 from 6)
==22152== 
==22152== 1 errors in context 1 of 4:
==22152== Conditional jump or move depends on uninitialised value(s)
==22152==    at 0x401941: test_explode_XX (<stdin>:340)
==22152==    by 0x402526: main (<stdin>:580)
==22152== 
==22152== 
==22152== 7 errors in context 2 of 4:
==22152== Conditional jump or move depends on uninitialised value(s)
==22152==    at 0x400F75: destroyStringArray_sol (<stdin>:137)
==22152==    by 0x401BA0: test_explode_XX (<stdin>:378)
==22152==    by 0x402526: main (<stdin>:580)
==22152== 
==22152== 
==22152== 7 errors in context 3 of 4:
==22152== Conditional jump or move depends on uninitialised value(s)
==22152==    at 0x401A07: test_explode_XX (<stdin>:350)
==22152==    by 0x402526: main (<stdin>:580)
==22152== 
==22152== 
==22152== 7 errors in context 4 of 4:
==22152== Conditional jump or move depends on uninitialised value(s)
==22152==    at 0x4019AE: test_explode_XX (<stdin>:344)
==22152==    by 0x402526: main (<stdin>:580)
==22152== 
--22152-- 
--22152-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--22152-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==22152== 
==22152== ERROR SUMMARY: 22 errors from 4 contexts (suppressed: 6 from 6)

test 15 :: implode(...)

   int len = 3
   char * * strArr = malloc(len * sizeof(char*));
   strArr[0] = strdup("The");
   strArr[1] = strdup("Turing");
   strArr[2] = strdup("test");
   const char * glue = " ";
   char * s = implode(strArr, len, glue);
Memory errors detected, testcase failed.
==28366== Memcheck, a memory error detector
==28366== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==28366== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==28366== Command: /tmp/.ptVh3K/a.out 14
==28366== Parent PID: 28365
==28366== 
--28366-- 
--28366-- Valgrind options:
--28366--    --tool=memcheck
--28366--    --leak-check=full
--28366--    --verbose
--28366--    --log-file=memcheck.log
--28366-- Contents of /proc/version:
--28366--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--28366-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--28366-- Page sizes: currently 4096, max supported 4096
--28366-- Valgrind library directory: /usr/lib64/valgrind
--28366-- Reading syms from /tmp/.ptVh3K/a.out
--28366-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--28366--    object doesn't have a dynamic symbol table
--28366-- Reading syms from /lib64/ld-2.12.so
--28366--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--28366--   .. build-id is valid
--28366-- Scheduler: using generic scheduler lock implementation.
--28366-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==28366== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-28366-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==28366== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-28366-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==28366== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-28366-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==28366== 
==28366== TO CONTROL THIS PROCESS USING vgdb (which you probably
==28366== don't want to do, unless you know exactly what you're doing,
==28366== or are doing some strange experiment):
==28366==   /usr/lib64/valgrind/../../bin/vgdb --pid=28366 ...command...
==28366== 
==28366== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==28366==   /path/to/gdb /tmp/.ptVh3K/a.out
==28366== and then give GDB the following command
==28366==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=28366
==28366== --pid is optional if only one valgrind process is running
==28366== 
--28366-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--28366-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--28366-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--28366-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--28366-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--28366-- Reading syms from /lib64/libc-2.12.so
--28366--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--28366--   .. build-id is valid
--28366-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--28366-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--28366-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--28366-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--28366-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
--28366-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--28366-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
--28366-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--28366-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--28366-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--28366-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--28366-- REDIR: 0x3f79e81120 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--28366-- REDIR: 0x3f79f33560 (__strlen_sse42) redirected to 0x4a07f50 (strlen)
--28366-- REDIR: 0x3f79e7f470 (strcat) redirected to 0x4a07c20 (strcat)
--28366-- REDIR: 0x3f79e80b70 (strcpy) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--28366-- REDIR: 0x3f79f34000 (???) redirected to 0x4a07f90 (strcpy)
==28366== Conditional jump or move depends on uninitialised value(s)
==28366==    at 0x4A07F59: strlen (mc_replace_strmem.c:403)
==28366==    by 0x402780: strcat_ex (answer03.c:13)
==28366==    by 0x402B0B: implode (answer03.c:80)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366== 
==28366== Conditional jump or move depends on uninitialised value(s)
==28366==    at 0x4A07C2A: strcat (mc_replace_strmem.c:267)
==28366==    by 0x4028AA: strcat_ex (answer03.c:36)
==28366==    by 0x402B0B: implode (answer03.c:80)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366== 
==28366== Invalid write of size 1
==28366==    at 0x4A07C4C: strcat (mc_replace_strmem.c:267)
==28366==    by 0x4028AA: strcat_ex (answer03.c:36)
==28366==    by 0x402B0B: implode (answer03.c:80)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366==  Address 0x4c3c2a1 is 0 bytes after a block of size 1 alloc'd
==28366==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==28366==    by 0x402ADB: implode (answer03.c:77)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366== 
==28366== Invalid write of size 1
==28366==    at 0x4A07C5F: strcat (mc_replace_strmem.c:267)
==28366==    by 0x4028AA: strcat_ex (answer03.c:36)
==28366==    by 0x402B0B: implode (answer03.c:80)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366==  Address 0x4c3c2a3 is 2 bytes after a block of size 1 alloc'd
==28366==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==28366==    by 0x402ADB: implode (answer03.c:77)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366== 
==28366== Invalid read of size 1
==28366==    at 0x4A07F64: strlen (mc_replace_strmem.c:403)
==28366==    by 0x402780: strcat_ex (answer03.c:13)
==28366==    by 0x402B26: implode (answer03.c:81)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366==  Address 0x4c3c2a1 is 0 bytes after a block of size 1 alloc'd
==28366==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==28366==    by 0x402ADB: implode (answer03.c:77)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366== 
==28366== Invalid read of size 1
==28366==    at 0x4A07C34: strcat (mc_replace_strmem.c:267)
==28366==    by 0x4028AA: strcat_ex (answer03.c:36)
==28366==    by 0x402B26: implode (answer03.c:81)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366==  Address 0x4c3c2a1 is 0 bytes after a block of size 1 alloc'd
==28366==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==28366==    by 0x402ADB: implode (answer03.c:77)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366== 
==28366== Invalid write of size 1
==28366==    at 0x4A07C4C: strcat (mc_replace_strmem.c:267)
==28366==    by 0x4028AA: strcat_ex (answer03.c:36)
==28366==    by 0x402B26: implode (answer03.c:81)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366==  Address 0x4c3c2a3 is 2 bytes after a block of size 1 alloc'd
==28366==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==28366==    by 0x402ADB: implode (answer03.c:77)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366== 
==28366== Invalid write of size 1
==28366==    at 0x4A07C5F: strcat (mc_replace_strmem.c:267)
==28366==    by 0x4028AA: strcat_ex (answer03.c:36)
==28366==    by 0x402B26: implode (answer03.c:81)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366==  Address 0x4c3c2a4 is 3 bytes after a block of size 1 alloc'd
==28366==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==28366==    by 0x402ADB: implode (answer03.c:77)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366== 
==28366== Invalid read of size 1
==28366==    at 0x4A07F64: strlen (mc_replace_strmem.c:403)
==28366==    by 0x402780: strcat_ex (answer03.c:13)
==28366==    by 0x402B0B: implode (answer03.c:80)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366==  Address 0x4c3c2a1 is 0 bytes after a block of size 1 alloc'd
==28366==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==28366==    by 0x402ADB: implode (answer03.c:77)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366== 
==28366== Invalid read of size 1
==28366==    at 0x4A07C34: strcat (mc_replace_strmem.c:267)
==28366==    by 0x4028AA: strcat_ex (answer03.c:36)
==28366==    by 0x402B0B: implode (answer03.c:80)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366==  Address 0x4c3c2a1 is 0 bytes after a block of size 1 alloc'd
==28366==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==28366==    by 0x402ADB: implode (answer03.c:77)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366== 
==28366== Invalid read of size 8
==28366==    at 0x402B44: implode (answer03.c:83)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366==  Address 0x4c3c058 is 0 bytes after a block of size 24 alloc'd
==28366==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==28366==    by 0x400C93: explode_sol (<stdin>:72)
==28366==    by 0x401BF8: test_implode_XX (<stdin>:395)
==28366==    by 0x402544: main (<stdin>:581)
==28366== 
==28366== Invalid read of size 1
==28366==    at 0x4A07F52: strlen (mc_replace_strmem.c:403)
==28366==    by 0x40275C: strcat_ex (answer03.c:11)
==28366==    by 0x402B59: implode (answer03.c:83)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==28366== 
==28366== 
==28366== Process terminating with default action of signal 11 (SIGSEGV)
==28366==  Access not within mapped region at address 0x0
==28366==    at 0x4A07F52: strlen (mc_replace_strmem.c:403)
==28366==    by 0x40275C: strcat_ex (answer03.c:11)
==28366==    by 0x402B59: implode (answer03.c:83)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366==  If you believe this happened as a result of a stack
==28366==  overflow in your program's main thread (unlikely but
==28366==  possible), you can try to increase the size of the
==28366==  main thread stack using the --main-stacksize= flag.
==28366==  The main thread stack size used in this run was 10485760.
==28366== 
==28366== HEAP SUMMARY:
==28366==     in use at exit: 86 bytes in 7 blocks
==28366==   total heap usage: 8 allocs, 1 frees, 93 bytes allocated
==28366== 
==28366== Searching for pointers to 7 not-freed blocks
==28366== Checked 64,824 bytes
==28366== 
==28366== LEAK SUMMARY:
==28366==    definitely lost: 0 bytes in 0 blocks
==28366==    indirectly lost: 0 bytes in 0 blocks
==28366==      possibly lost: 0 bytes in 0 blocks
==28366==    still reachable: 86 bytes in 7 blocks
==28366==         suppressed: 0 bytes in 0 blocks
==28366== Reachable blocks (those to which a pointer was found) are not shown.
==28366== To see them, rerun with: --leak-check=full --show-reachable=yes
==28366== 
==28366== Use --track-origins=yes to see where uninitialised values come from
==28366== ERROR SUMMARY: 111 errors from 12 contexts (suppressed: 6 from 6)
==28366== 
==28366== 1 errors in context 1 of 12:
==28366== Invalid read of size 1
==28366==    at 0x4A07F52: strlen (mc_replace_strmem.c:403)
==28366==    by 0x40275C: strcat_ex (answer03.c:11)
==28366==    by 0x402B59: implode (answer03.c:83)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==28366== 
==28366== 
==28366== 1 errors in context 2 of 12:
==28366== Invalid read of size 8
==28366==    at 0x402B44: implode (answer03.c:83)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366==  Address 0x4c3c058 is 0 bytes after a block of size 24 alloc'd
==28366==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==28366==    by 0x400C93: explode_sol (<stdin>:72)
==28366==    by 0x401BF8: test_implode_XX (<stdin>:395)
==28366==    by 0x402544: main (<stdin>:581)
==28366== 
==28366== 
==28366== 1 errors in context 3 of 12:
==28366== Conditional jump or move depends on uninitialised value(s)
==28366==    at 0x4A07C2A: strcat (mc_replace_strmem.c:267)
==28366==    by 0x4028AA: strcat_ex (answer03.c:36)
==28366==    by 0x402B0B: implode (answer03.c:80)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366== 
==28366== 
==28366== 1 errors in context 4 of 12:
==28366== Conditional jump or move depends on uninitialised value(s)
==28366==    at 0x4A07F59: strlen (mc_replace_strmem.c:403)
==28366==    by 0x402780: strcat_ex (answer03.c:13)
==28366==    by 0x402B0B: implode (answer03.c:80)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366== 
==28366== 
==28366== 3 errors in context 5 of 12:
==28366== Invalid write of size 1
==28366==    at 0x4A07C5F: strcat (mc_replace_strmem.c:267)
==28366==    by 0x4028AA: strcat_ex (answer03.c:36)
==28366==    by 0x402B26: implode (answer03.c:81)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366==  Address 0x4c3c2a4 is 3 bytes after a block of size 1 alloc'd
==28366==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==28366==    by 0x402ADB: implode (answer03.c:77)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366== 
==28366== 
==28366== 3 errors in context 6 of 12:
==28366== Invalid write of size 1
==28366==    at 0x4A07C4C: strcat (mc_replace_strmem.c:267)
==28366==    by 0x4028AA: strcat_ex (answer03.c:36)
==28366==    by 0x402B26: implode (answer03.c:81)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366==  Address 0x4c3c2a3 is 2 bytes after a block of size 1 alloc'd
==28366==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==28366==    by 0x402ADB: implode (answer03.c:77)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366== 
==28366== 
==28366== 3 errors in context 7 of 12:
==28366== Invalid write of size 1
==28366==    at 0x4A07C5F: strcat (mc_replace_strmem.c:267)
==28366==    by 0x4028AA: strcat_ex (answer03.c:36)
==28366==    by 0x402B0B: implode (answer03.c:80)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366==  Address 0x4c3c2a3 is 2 bytes after a block of size 1 alloc'd
==28366==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==28366==    by 0x402ADB: implode (answer03.c:77)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366== 
==28366== 
==28366== 12 errors in context 8 of 12:
==28366== Invalid write of size 1
==28366==    at 0x4A07C4C: strcat (mc_replace_strmem.c:267)
==28366==    by 0x4028AA: strcat_ex (answer03.c:36)
==28366==    by 0x402B0B: implode (answer03.c:80)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366==  Address 0x4c3c2a1 is 0 bytes after a block of size 1 alloc'd
==28366==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==28366==    by 0x402ADB: implode (answer03.c:77)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366== 
==28366== 
==28366== 15 errors in context 9 of 12:
==28366== Invalid read of size 1
==28366==    at 0x4A07C34: strcat (mc_replace_strmem.c:267)
==28366==    by 0x4028AA: strcat_ex (answer03.c:36)
==28366==    by 0x402B0B: implode (answer03.c:80)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366==  Address 0x4c3c2a1 is 0 bytes after a block of size 1 alloc'd
==28366==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==28366==    by 0x402ADB: implode (answer03.c:77)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366== 
==28366== 
==28366== 15 errors in context 10 of 12:
==28366== Invalid read of size 1
==28366==    at 0x4A07F64: strlen (mc_replace_strmem.c:403)
==28366==    by 0x402780: strcat_ex (answer03.c:13)
==28366==    by 0x402B0B: implode (answer03.c:80)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366==  Address 0x4c3c2a1 is 0 bytes after a block of size 1 alloc'd
==28366==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==28366==    by 0x402ADB: implode (answer03.c:77)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366== 
==28366== 
==28366== 28 errors in context 11 of 12:
==28366== Invalid read of size 1
==28366==    at 0x4A07C34: strcat (mc_replace_strmem.c:267)
==28366==    by 0x4028AA: strcat_ex (answer03.c:36)
==28366==    by 0x402B26: implode (answer03.c:81)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366==  Address 0x4c3c2a1 is 0 bytes after a block of size 1 alloc'd
==28366==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==28366==    by 0x402ADB: implode (answer03.c:77)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366== 
==28366== 
==28366== 28 errors in context 12 of 12:
==28366== Invalid read of size 1
==28366==    at 0x4A07F64: strlen (mc_replace_strmem.c:403)
==28366==    by 0x402780: strcat_ex (answer03.c:13)
==28366==    by 0x402B26: implode (answer03.c:81)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366==  Address 0x4c3c2a1 is 0 bytes after a block of size 1 alloc'd
==28366==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==28366==    by 0x402ADB: implode (answer03.c:77)
==28366==    by 0x401D46: test_implode_XX (<stdin>:413)
==28366==    by 0x402544: main (<stdin>:581)
==28366== 
--28366-- 
--28366-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--28366-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==28366== 
==28366== ERROR SUMMARY: 111 errors from 12 contexts (suppressed: 6 from 6)

test 16 :: implode(...)

   int len = 2
   char * * strArr = malloc(len * sizeof(char*));
   strArr[0] = strdup("The");
   strArr[1] = strdup("Turing test");
   const char * glue = "{newline}";
   char * s = implode(strArr, len, glue);
Memory errors detected, testcase failed.
==1913== Memcheck, a memory error detector
==1913== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==1913== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==1913== Command: /tmp/.ptVh3K/a.out 15
==1913== Parent PID: 1912
==1913== 
--1913-- 
--1913-- Valgrind options:
--1913--    --tool=memcheck
--1913--    --leak-check=full
--1913--    --verbose
--1913--    --log-file=memcheck.log
--1913-- Contents of /proc/version:
--1913--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--1913-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--1913-- Page sizes: currently 4096, max supported 4096
--1913-- Valgrind library directory: /usr/lib64/valgrind
--1913-- Reading syms from /tmp/.ptVh3K/a.out
--1913-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--1913--    object doesn't have a dynamic symbol table
--1913-- Reading syms from /lib64/ld-2.12.so
--1913--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--1913--   .. build-id is valid
--1913-- Scheduler: using generic scheduler lock implementation.
--1913-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==1913== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1913-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==1913== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1913-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==1913== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1913-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==1913== 
==1913== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1913== don't want to do, unless you know exactly what you're doing,
==1913== or are doing some strange experiment):
==1913==   /usr/lib64/valgrind/../../bin/vgdb --pid=1913 ...command...
==1913== 
==1913== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1913==   /path/to/gdb /tmp/.ptVh3K/a.out
==1913== and then give GDB the following command
==1913==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=1913
==1913== --pid is optional if only one valgrind process is running
==1913== 
--1913-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--1913-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--1913-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--1913-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--1913-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--1913-- Reading syms from /lib64/libc-2.12.so
--1913--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--1913--   .. build-id is valid
--1913-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--1913-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--1913-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--1913-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--1913-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
--1913-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--1913-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
--1913-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--1913-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--1913-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--1913-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--1913-- REDIR: 0x3f79e81120 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--1913-- REDIR: 0x3f79f33560 (__strlen_sse42) redirected to 0x4a07f50 (strlen)
--1913-- REDIR: 0x3f79e7f470 (strcat) redirected to 0x4a07c20 (strcat)
--1913-- REDIR: 0x3f79e80b70 (strcpy) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--1913-- REDIR: 0x3f79f34000 (???) redirected to 0x4a07f90 (strcpy)
==1913== Conditional jump or move depends on uninitialised value(s)
==1913==    at 0x4A07F59: strlen (mc_replace_strmem.c:403)
==1913==    by 0x402780: strcat_ex (answer03.c:13)
==1913==    by 0x402B0B: implode (answer03.c:80)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913== 
==1913== Conditional jump or move depends on uninitialised value(s)
==1913==    at 0x4A07C2A: strcat (mc_replace_strmem.c:267)
==1913==    by 0x4028AA: strcat_ex (answer03.c:36)
==1913==    by 0x402B0B: implode (answer03.c:80)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913== 
==1913== Invalid write of size 1
==1913==    at 0x4A07C4C: strcat (mc_replace_strmem.c:267)
==1913==    by 0x4028AA: strcat_ex (answer03.c:36)
==1913==    by 0x402B0B: implode (answer03.c:80)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913==  Address 0x4c3c231 is 0 bytes after a block of size 1 alloc'd
==1913==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==1913==    by 0x402ADB: implode (answer03.c:77)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913== 
==1913== Invalid write of size 1
==1913==    at 0x4A07C5F: strcat (mc_replace_strmem.c:267)
==1913==    by 0x4028AA: strcat_ex (answer03.c:36)
==1913==    by 0x402B0B: implode (answer03.c:80)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913==  Address 0x4c3c233 is 2 bytes after a block of size 1 alloc'd
==1913==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==1913==    by 0x402ADB: implode (answer03.c:77)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913== 
==1913== Invalid read of size 1
==1913==    at 0x4A07F64: strlen (mc_replace_strmem.c:403)
==1913==    by 0x402780: strcat_ex (answer03.c:13)
==1913==    by 0x402B26: implode (answer03.c:81)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913==  Address 0x4c3c231 is 0 bytes after a block of size 1 alloc'd
==1913==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==1913==    by 0x402ADB: implode (answer03.c:77)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913== 
==1913== Invalid read of size 1
==1913==    at 0x4A07C34: strcat (mc_replace_strmem.c:267)
==1913==    by 0x4028AA: strcat_ex (answer03.c:36)
==1913==    by 0x402B26: implode (answer03.c:81)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913==  Address 0x4c3c231 is 0 bytes after a block of size 1 alloc'd
==1913==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==1913==    by 0x402ADB: implode (answer03.c:77)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913== 
==1913== Invalid write of size 1
==1913==    at 0x4A07C4C: strcat (mc_replace_strmem.c:267)
==1913==    by 0x4028AA: strcat_ex (answer03.c:36)
==1913==    by 0x402B26: implode (answer03.c:81)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913==  Address 0x4c3c233 is 2 bytes after a block of size 1 alloc'd
==1913==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==1913==    by 0x402ADB: implode (answer03.c:77)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913== 
==1913== Invalid write of size 1
==1913==    at 0x4A07C5F: strcat (mc_replace_strmem.c:267)
==1913==    by 0x4028AA: strcat_ex (answer03.c:36)
==1913==    by 0x402B26: implode (answer03.c:81)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913==  Address 0x4c3c23c is 11 bytes after a block of size 1 alloc'd
==1913==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==1913==    by 0x402ADB: implode (answer03.c:77)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913== 
==1913== Invalid read of size 1
==1913==    at 0x4A07F64: strlen (mc_replace_strmem.c:403)
==1913==    by 0x402780: strcat_ex (answer03.c:13)
==1913==    by 0x402B0B: implode (answer03.c:80)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913==  Address 0x4c3c231 is 0 bytes after a block of size 1 alloc'd
==1913==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==1913==    by 0x402ADB: implode (answer03.c:77)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913== 
==1913== Invalid read of size 1
==1913==    at 0x4A07C34: strcat (mc_replace_strmem.c:267)
==1913==    by 0x4028AA: strcat_ex (answer03.c:36)
==1913==    by 0x402B0B: implode (answer03.c:80)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913==  Address 0x4c3c231 is 0 bytes after a block of size 1 alloc'd
==1913==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==1913==    by 0x402ADB: implode (answer03.c:77)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913== 
==1913== Invalid read of size 8
==1913==    at 0x402B44: implode (answer03.c:83)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913==  Address 0x4c3c050 is 0 bytes after a block of size 16 alloc'd
==1913==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==1913==    by 0x400C93: explode_sol (<stdin>:72)
==1913==    by 0x401BF8: test_implode_XX (<stdin>:395)
==1913==    by 0x402562: main (<stdin>:582)
==1913== 
==1913== Invalid read of size 1
==1913==    at 0x4A07F52: strlen (mc_replace_strmem.c:403)
==1913==    by 0x40275C: strcat_ex (answer03.c:11)
==1913==    by 0x402B59: implode (answer03.c:83)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1913== 
==1913== 
==1913== Process terminating with default action of signal 11 (SIGSEGV)
==1913==  Access not within mapped region at address 0x0
==1913==    at 0x4A07F52: strlen (mc_replace_strmem.c:403)
==1913==    by 0x40275C: strcat_ex (answer03.c:11)
==1913==    by 0x402B59: implode (answer03.c:83)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913==  If you believe this happened as a result of a stack
==1913==  overflow in your program's main thread (unlikely but
==1913==  possible), you can try to increase the size of the
==1913==  main thread stack using the --main-stacksize= flag.
==1913==  The main thread stack size used in this run was 10485760.
==1913== 
==1913== HEAP SUMMARY:
==1913==     in use at exit: 74 bytes in 6 blocks
==1913==   total heap usage: 7 allocs, 1 frees, 81 bytes allocated
==1913== 
==1913== Searching for pointers to 6 not-freed blocks
==1913== Checked 64,824 bytes
==1913== 
==1913== LEAK SUMMARY:
==1913==    definitely lost: 0 bytes in 0 blocks
==1913==    indirectly lost: 0 bytes in 0 blocks
==1913==      possibly lost: 0 bytes in 0 blocks
==1913==    still reachable: 74 bytes in 6 blocks
==1913==         suppressed: 0 bytes in 0 blocks
==1913== Reachable blocks (those to which a pointer was found) are not shown.
==1913== To see them, rerun with: --leak-check=full --show-reachable=yes
==1913== 
==1913== Use --track-origins=yes to see where uninitialised values come from
==1913== ERROR SUMMARY: 115 errors from 12 contexts (suppressed: 6 from 6)
==1913== 
==1913== 1 errors in context 1 of 12:
==1913== Invalid read of size 1
==1913==    at 0x4A07F52: strlen (mc_replace_strmem.c:403)
==1913==    by 0x40275C: strcat_ex (answer03.c:11)
==1913==    by 0x402B59: implode (answer03.c:83)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1913== 
==1913== 
==1913== 1 errors in context 2 of 12:
==1913== Invalid read of size 8
==1913==    at 0x402B44: implode (answer03.c:83)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913==  Address 0x4c3c050 is 0 bytes after a block of size 16 alloc'd
==1913==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==1913==    by 0x400C93: explode_sol (<stdin>:72)
==1913==    by 0x401BF8: test_implode_XX (<stdin>:395)
==1913==    by 0x402562: main (<stdin>:582)
==1913== 
==1913== 
==1913== 1 errors in context 3 of 12:
==1913== Conditional jump or move depends on uninitialised value(s)
==1913==    at 0x4A07C2A: strcat (mc_replace_strmem.c:267)
==1913==    by 0x4028AA: strcat_ex (answer03.c:36)
==1913==    by 0x402B0B: implode (answer03.c:80)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913== 
==1913== 
==1913== 1 errors in context 4 of 12:
==1913== Conditional jump or move depends on uninitialised value(s)
==1913==    at 0x4A07F59: strlen (mc_replace_strmem.c:403)
==1913==    by 0x402780: strcat_ex (answer03.c:13)
==1913==    by 0x402B0B: implode (answer03.c:80)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913== 
==1913== 
==1913== 2 errors in context 5 of 12:
==1913== Invalid write of size 1
==1913==    at 0x4A07C5F: strcat (mc_replace_strmem.c:267)
==1913==    by 0x4028AA: strcat_ex (answer03.c:36)
==1913==    by 0x402B26: implode (answer03.c:81)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913==  Address 0x4c3c23c is 11 bytes after a block of size 1 alloc'd
==1913==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==1913==    by 0x402ADB: implode (answer03.c:77)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913== 
==1913== 
==1913== 2 errors in context 6 of 12:
==1913== Invalid write of size 1
==1913==    at 0x4A07C5F: strcat (mc_replace_strmem.c:267)
==1913==    by 0x4028AA: strcat_ex (answer03.c:36)
==1913==    by 0x402B0B: implode (answer03.c:80)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913==  Address 0x4c3c233 is 2 bytes after a block of size 1 alloc'd
==1913==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==1913==    by 0x402ADB: implode (answer03.c:77)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913== 
==1913== 
==1913== 12 errors in context 7 of 12:
==1913== Invalid read of size 1
==1913==    at 0x4A07C34: strcat (mc_replace_strmem.c:267)
==1913==    by 0x4028AA: strcat_ex (answer03.c:36)
==1913==    by 0x402B0B: implode (answer03.c:80)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913==  Address 0x4c3c231 is 0 bytes after a block of size 1 alloc'd
==1913==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==1913==    by 0x402ADB: implode (answer03.c:77)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913== 
==1913== 
==1913== 12 errors in context 8 of 12:
==1913== Invalid read of size 1
==1913==    at 0x4A07F64: strlen (mc_replace_strmem.c:403)
==1913==    by 0x402780: strcat_ex (answer03.c:13)
==1913==    by 0x402B0B: implode (answer03.c:80)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913==  Address 0x4c3c231 is 0 bytes after a block of size 1 alloc'd
==1913==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==1913==    by 0x402ADB: implode (answer03.c:77)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913== 
==1913== 
==1913== 13 errors in context 9 of 12:
==1913== Invalid write of size 1
==1913==    at 0x4A07C4C: strcat (mc_replace_strmem.c:267)
==1913==    by 0x4028AA: strcat_ex (answer03.c:36)
==1913==    by 0x402B0B: implode (answer03.c:80)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913==  Address 0x4c3c231 is 0 bytes after a block of size 1 alloc'd
==1913==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==1913==    by 0x402ADB: implode (answer03.c:77)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913== 
==1913== 
==1913== 18 errors in context 10 of 12:
==1913== Invalid write of size 1
==1913==    at 0x4A07C4C: strcat (mc_replace_strmem.c:267)
==1913==    by 0x4028AA: strcat_ex (answer03.c:36)
==1913==    by 0x402B26: implode (answer03.c:81)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913==  Address 0x4c3c233 is 2 bytes after a block of size 1 alloc'd
==1913==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==1913==    by 0x402ADB: implode (answer03.c:77)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913== 
==1913== 
==1913== 26 errors in context 11 of 12:
==1913== Invalid read of size 1
==1913==    at 0x4A07C34: strcat (mc_replace_strmem.c:267)
==1913==    by 0x4028AA: strcat_ex (answer03.c:36)
==1913==    by 0x402B26: implode (answer03.c:81)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913==  Address 0x4c3c231 is 0 bytes after a block of size 1 alloc'd
==1913==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==1913==    by 0x402ADB: implode (answer03.c:77)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913== 
==1913== 
==1913== 26 errors in context 12 of 12:
==1913== Invalid read of size 1
==1913==    at 0x4A07F64: strlen (mc_replace_strmem.c:403)
==1913==    by 0x402780: strcat_ex (answer03.c:13)
==1913==    by 0x402B26: implode (answer03.c:81)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913==  Address 0x4c3c231 is 0 bytes after a block of size 1 alloc'd
==1913==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==1913==    by 0x402ADB: implode (answer03.c:77)
==1913==    by 0x401D46: test_implode_XX (<stdin>:413)
==1913==    by 0x402562: main (<stdin>:582)
==1913== 
--1913-- 
--1913-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--1913-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==1913== 
==1913== ERROR SUMMARY: 115 errors from 12 contexts (suppressed: 6 from 6)

test 17 :: implode(...)

   int len = 5
   char * * strArr = malloc(len * sizeof(char*));
   strArr[0] = strdup("");
   strArr[1] = strdup("he\n");
   strArr[2] = strdup("uring ");
   strArr[3] = strdup("es");
   strArr[4] = strdup("");
   const char * glue = "";
   char * s = implode(strArr, len, glue);
Memory errors detected, testcase failed.
==7826== Memcheck, a memory error detector
==7826== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==7826== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==7826== Command: /tmp/.ptVh3K/a.out 16
==7826== Parent PID: 7823
==7826== 
--7826-- 
--7826-- Valgrind options:
--7826--    --tool=memcheck
--7826--    --leak-check=full
--7826--    --verbose
--7826--    --log-file=memcheck.log
--7826-- Contents of /proc/version:
--7826--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--7826-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--7826-- Page sizes: currently 4096, max supported 4096
--7826-- Valgrind library directory: /usr/lib64/valgrind
--7826-- Reading syms from /tmp/.ptVh3K/a.out
--7826-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--7826--    object doesn't have a dynamic symbol table
--7826-- Reading syms from /lib64/ld-2.12.so
--7826--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--7826--   .. build-id is valid
--7826-- Scheduler: using generic scheduler lock implementation.
--7826-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==7826== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-7826-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==7826== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-7826-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==7826== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-7826-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==7826== 
==7826== TO CONTROL THIS PROCESS USING vgdb (which you probably
==7826== don't want to do, unless you know exactly what you're doing,
==7826== or are doing some strange experiment):
==7826==   /usr/lib64/valgrind/../../bin/vgdb --pid=7826 ...command...
==7826== 
==7826== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==7826==   /path/to/gdb /tmp/.ptVh3K/a.out
==7826== and then give GDB the following command
==7826==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=7826
==7826== --pid is optional if only one valgrind process is running
==7826== 
--7826-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--7826-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--7826-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--7826-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--7826-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--7826-- Reading syms from /lib64/libc-2.12.so
--7826--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--7826--   .. build-id is valid
--7826-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--7826-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--7826-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--7826-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--7826-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
--7826-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--7826-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
--7826-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--7826-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--7826-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--7826-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--7826-- REDIR: 0x3f79e81120 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--7826-- REDIR: 0x3f79f33560 (__strlen_sse42) redirected to 0x4a07f50 (strlen)
--7826-- REDIR: 0x3f79e7f470 (strcat) redirected to 0x4a07c20 (strcat)
--7826-- REDIR: 0x3f79e80b70 (strcpy) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--7826-- REDIR: 0x3f79f34000 (???) redirected to 0x4a07f90 (strcpy)
==7826== Conditional jump or move depends on uninitialised value(s)
==7826==    at 0x4A07F59: strlen (mc_replace_strmem.c:403)
==7826==    by 0x402780: strcat_ex (answer03.c:13)
==7826==    by 0x402B0B: implode (answer03.c:80)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826== 
==7826== Conditional jump or move depends on uninitialised value(s)
==7826==    at 0x4A07F59: strlen (mc_replace_strmem.c:403)
==7826==    by 0x4027FA: strcat_ex (answer03.c:25)
==7826==    by 0x402B0B: implode (answer03.c:80)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826== 
==7826== Conditional jump or move depends on uninitialised value(s)
==7826==    at 0x4A07F9F: strcpy (mc_replace_strmem.c:442)
==7826==    by 0x402840: strcat_ex (answer03.c:27)
==7826==    by 0x402B0B: implode (answer03.c:80)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826== 
==7826== Invalid write of size 1
==7826==    at 0x4A07C4C: strcat (mc_replace_strmem.c:267)
==7826==    by 0x4028AA: strcat_ex (answer03.c:36)
==7826==    by 0x402B0B: implode (answer03.c:80)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826==  Address 0x4c3c4a7 is 0 bytes after a block of size 7 alloc'd
==7826==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==7826==    by 0x40281C: strcat_ex (answer03.c:25)
==7826==    by 0x402B0B: implode (answer03.c:80)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826== 
==7826== Invalid write of size 1
==7826==    at 0x4A07C5F: strcat (mc_replace_strmem.c:267)
==7826==    by 0x4028AA: strcat_ex (answer03.c:36)
==7826==    by 0x402B0B: implode (answer03.c:80)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826==  Address 0x4c3c4ac is 5 bytes after a block of size 7 alloc'd
==7826==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==7826==    by 0x40281C: strcat_ex (answer03.c:25)
==7826==    by 0x402B0B: implode (answer03.c:80)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826== 
==7826== Invalid read of size 1
==7826==    at 0x4A07F64: strlen (mc_replace_strmem.c:403)
==7826==    by 0x402780: strcat_ex (answer03.c:13)
==7826==    by 0x402B26: implode (answer03.c:81)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826==  Address 0x4c3c4a7 is 0 bytes after a block of size 7 alloc'd
==7826==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==7826==    by 0x40281C: strcat_ex (answer03.c:25)
==7826==    by 0x402B0B: implode (answer03.c:80)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826== 
==7826== Invalid read of size 1
==7826==    at 0x4A07C34: strcat (mc_replace_strmem.c:267)
==7826==    by 0x4028AA: strcat_ex (answer03.c:36)
==7826==    by 0x402B26: implode (answer03.c:81)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826==  Address 0x4c3c4a7 is 0 bytes after a block of size 7 alloc'd
==7826==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==7826==    by 0x40281C: strcat_ex (answer03.c:25)
==7826==    by 0x402B0B: implode (answer03.c:80)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826== 
==7826== Invalid write of size 1
==7826==    at 0x4A07C5F: strcat (mc_replace_strmem.c:267)
==7826==    by 0x4028AA: strcat_ex (answer03.c:36)
==7826==    by 0x402B26: implode (answer03.c:81)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826==  Address 0x4c3c4ac is 5 bytes after a block of size 7 alloc'd
==7826==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==7826==    by 0x40281C: strcat_ex (answer03.c:25)
==7826==    by 0x402B0B: implode (answer03.c:80)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826== 
==7826== Invalid read of size 1
==7826==    at 0x4A07F64: strlen (mc_replace_strmem.c:403)
==7826==    by 0x402780: strcat_ex (answer03.c:13)
==7826==    by 0x402B0B: implode (answer03.c:80)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826==  Address 0x4c3c4a7 is 0 bytes after a block of size 7 alloc'd
==7826==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==7826==    by 0x40281C: strcat_ex (answer03.c:25)
==7826==    by 0x402B0B: implode (answer03.c:80)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826== 
==7826== Invalid read of size 1
==7826==    at 0x4A07C34: strcat (mc_replace_strmem.c:267)
==7826==    by 0x4028AA: strcat_ex (answer03.c:36)
==7826==    by 0x402B0B: implode (answer03.c:80)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826==  Address 0x4c3c4a7 is 0 bytes after a block of size 7 alloc'd
==7826==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==7826==    by 0x40281C: strcat_ex (answer03.c:25)
==7826==    by 0x402B0B: implode (answer03.c:80)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826== 
==7826== Invalid read of size 8
==7826==    at 0x402B44: implode (answer03.c:83)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826==  Address 0x4c3c068 is 0 bytes after a block of size 40 alloc'd
==7826==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==7826==    by 0x400C93: explode_sol (<stdin>:72)
==7826==    by 0x401BF8: test_implode_XX (<stdin>:395)
==7826==    by 0x402580: main (<stdin>:583)
==7826== 
==7826== Invalid read of size 1
==7826==    at 0x4A07F52: strlen (mc_replace_strmem.c:403)
==7826==    by 0x40275C: strcat_ex (answer03.c:11)
==7826==    by 0x402B59: implode (answer03.c:83)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==7826== 
==7826== 
==7826== Process terminating with default action of signal 11 (SIGSEGV)
==7826==  Access not within mapped region at address 0x0
==7826==    at 0x4A07F52: strlen (mc_replace_strmem.c:403)
==7826==    by 0x40275C: strcat_ex (answer03.c:11)
==7826==    by 0x402B59: implode (answer03.c:83)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826==  If you believe this happened as a result of a stack
==7826==  overflow in your program's main thread (unlikely but
==7826==  possible), you can try to increase the size of the
==7826==  main thread stack using the --main-stacksize= flag.
==7826==  The main thread stack size used in this run was 10485760.
==7826== 
==7826== HEAP SUMMARY:
==7826==     in use at exit: 122 bytes in 9 blocks
==7826==   total heap usage: 14 allocs, 5 frees, 133 bytes allocated
==7826== 
==7826== Searching for pointers to 9 not-freed blocks
==7826== Checked 64,848 bytes
==7826== 
==7826== LEAK SUMMARY:
==7826==    definitely lost: 0 bytes in 0 blocks
==7826==    indirectly lost: 0 bytes in 0 blocks
==7826==      possibly lost: 0 bytes in 0 blocks
==7826==    still reachable: 122 bytes in 9 blocks
==7826==         suppressed: 0 bytes in 0 blocks
==7826== Reachable blocks (those to which a pointer was found) are not shown.
==7826== To see them, rerun with: --leak-check=full --show-reachable=yes
==7826== 
==7826== Use --track-origins=yes to see where uninitialised values come from
==7826== ERROR SUMMARY: 90 errors from 12 contexts (suppressed: 6 from 6)
==7826== 
==7826== 1 errors in context 1 of 12:
==7826== Invalid read of size 1
==7826==    at 0x4A07F52: strlen (mc_replace_strmem.c:403)
==7826==    by 0x40275C: strcat_ex (answer03.c:11)
==7826==    by 0x402B59: implode (answer03.c:83)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==7826== 
==7826== 
==7826== 1 errors in context 2 of 12:
==7826== Invalid read of size 8
==7826==    at 0x402B44: implode (answer03.c:83)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826==  Address 0x4c3c068 is 0 bytes after a block of size 40 alloc'd
==7826==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==7826==    by 0x400C93: explode_sol (<stdin>:72)
==7826==    by 0x401BF8: test_implode_XX (<stdin>:395)
==7826==    by 0x402580: main (<stdin>:583)
==7826== 
==7826== 
==7826== 1 errors in context 3 of 12:
==7826== Conditional jump or move depends on uninitialised value(s)
==7826==    at 0x4A07F9F: strcpy (mc_replace_strmem.c:442)
==7826==    by 0x402840: strcat_ex (answer03.c:27)
==7826==    by 0x402B0B: implode (answer03.c:80)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826== 
==7826== 
==7826== 1 errors in context 4 of 12:
==7826== Conditional jump or move depends on uninitialised value(s)
==7826==    at 0x4A07F59: strlen (mc_replace_strmem.c:403)
==7826==    by 0x4027FA: strcat_ex (answer03.c:25)
==7826==    by 0x402B0B: implode (answer03.c:80)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826== 
==7826== 
==7826== 1 errors in context 5 of 12:
==7826== Conditional jump or move depends on uninitialised value(s)
==7826==    at 0x4A07F59: strlen (mc_replace_strmem.c:403)
==7826==    by 0x402780: strcat_ex (answer03.c:13)
==7826==    by 0x402B0B: implode (answer03.c:80)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826== 
==7826== 
==7826== 3 errors in context 6 of 12:
==7826== Invalid write of size 1
==7826==    at 0x4A07C5F: strcat (mc_replace_strmem.c:267)
==7826==    by 0x4028AA: strcat_ex (answer03.c:36)
==7826==    by 0x402B26: implode (answer03.c:81)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826==  Address 0x4c3c4ac is 5 bytes after a block of size 7 alloc'd
==7826==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==7826==    by 0x40281C: strcat_ex (answer03.c:25)
==7826==    by 0x402B0B: implode (answer03.c:80)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826== 
==7826== 
==7826== 3 errors in context 7 of 12:
==7826== Invalid write of size 1
==7826==    at 0x4A07C5F: strcat (mc_replace_strmem.c:267)
==7826==    by 0x4028AA: strcat_ex (answer03.c:36)
==7826==    by 0x402B0B: implode (answer03.c:80)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826==  Address 0x4c3c4ac is 5 bytes after a block of size 7 alloc'd
==7826==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==7826==    by 0x40281C: strcat_ex (answer03.c:25)
==7826==    by 0x402B0B: implode (answer03.c:80)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826== 
==7826== 
==7826== 7 errors in context 8 of 12:
==7826== Invalid write of size 1
==7826==    at 0x4A07C4C: strcat (mc_replace_strmem.c:267)
==7826==    by 0x4028AA: strcat_ex (answer03.c:36)
==7826==    by 0x402B0B: implode (answer03.c:80)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826==  Address 0x4c3c4a7 is 0 bytes after a block of size 7 alloc'd
==7826==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==7826==    by 0x40281C: strcat_ex (answer03.c:25)
==7826==    by 0x402B0B: implode (answer03.c:80)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826== 
==7826== 
==7826== 14 errors in context 9 of 12:
==7826== Invalid read of size 1
==7826==    at 0x4A07C34: strcat (mc_replace_strmem.c:267)
==7826==    by 0x4028AA: strcat_ex (answer03.c:36)
==7826==    by 0x402B0B: implode (answer03.c:80)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826==  Address 0x4c3c4a7 is 0 bytes after a block of size 7 alloc'd
==7826==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==7826==    by 0x40281C: strcat_ex (answer03.c:25)
==7826==    by 0x402B0B: implode (answer03.c:80)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826== 
==7826== 
==7826== 14 errors in context 10 of 12:
==7826== Invalid read of size 1
==7826==    at 0x4A07F64: strlen (mc_replace_strmem.c:403)
==7826==    by 0x402780: strcat_ex (answer03.c:13)
==7826==    by 0x402B0B: implode (answer03.c:80)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826==  Address 0x4c3c4a7 is 0 bytes after a block of size 7 alloc'd
==7826==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==7826==    by 0x40281C: strcat_ex (answer03.c:25)
==7826==    by 0x402B0B: implode (answer03.c:80)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826== 
==7826== 
==7826== 22 errors in context 11 of 12:
==7826== Invalid read of size 1
==7826==    at 0x4A07C34: strcat (mc_replace_strmem.c:267)
==7826==    by 0x4028AA: strcat_ex (answer03.c:36)
==7826==    by 0x402B26: implode (answer03.c:81)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826==  Address 0x4c3c4a7 is 0 bytes after a block of size 7 alloc'd
==7826==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==7826==    by 0x40281C: strcat_ex (answer03.c:25)
==7826==    by 0x402B0B: implode (answer03.c:80)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826== 
==7826== 
==7826== 22 errors in context 12 of 12:
==7826== Invalid read of size 1
==7826==    at 0x4A07F64: strlen (mc_replace_strmem.c:403)
==7826==    by 0x402780: strcat_ex (answer03.c:13)
==7826==    by 0x402B26: implode (answer03.c:81)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826==  Address 0x4c3c4a7 is 0 bytes after a block of size 7 alloc'd
==7826==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==7826==    by 0x40281C: strcat_ex (answer03.c:25)
==7826==    by 0x402B0B: implode (answer03.c:80)
==7826==    by 0x401D46: test_implode_XX (<stdin>:413)
==7826==    by 0x402580: main (<stdin>:583)
==7826== 
--7826-- 
--7826-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--7826-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==7826== 
==7826== ERROR SUMMARY: 90 errors from 12 contexts (suppressed: 6 from 6)

test 18 :: implode(...)

   int len = 1
   char * * strArr = malloc(len * sizeof(char*));
   strArr[0] = strdup("");
   const char * glue = "Z";
   char * s = implode(strArr, len, glue);
Memory errors detected, testcase failed.
==13439== Memcheck, a memory error detector
==13439== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==13439== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==13439== Command: /tmp/.ptVh3K/a.out 17
==13439== Parent PID: 13436
==13439== 
--13439-- 
--13439-- Valgrind options:
--13439--    --tool=memcheck
--13439--    --leak-check=full
--13439--    --verbose
--13439--    --log-file=memcheck.log
--13439-- Contents of /proc/version:
--13439--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--13439-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--13439-- Page sizes: currently 4096, max supported 4096
--13439-- Valgrind library directory: /usr/lib64/valgrind
--13439-- Reading syms from /tmp/.ptVh3K/a.out
--13439-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--13439--    object doesn't have a dynamic symbol table
--13439-- Reading syms from /lib64/ld-2.12.so
--13439--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--13439--   .. build-id is valid
--13439-- Scheduler: using generic scheduler lock implementation.
--13439-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==13439== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-13439-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==13439== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-13439-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==13439== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-13439-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==13439== 
==13439== TO CONTROL THIS PROCESS USING vgdb (which you probably
==13439== don't want to do, unless you know exactly what you're doing,
==13439== or are doing some strange experiment):
==13439==   /usr/lib64/valgrind/../../bin/vgdb --pid=13439 ...command...
==13439== 
==13439== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==13439==   /path/to/gdb /tmp/.ptVh3K/a.out
==13439== and then give GDB the following command
==13439==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=13439
==13439== --pid is optional if only one valgrind process is running
==13439== 
--13439-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--13439-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--13439-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--13439-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--13439-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--13439-- Reading syms from /lib64/libc-2.12.so
--13439--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--13439--   .. build-id is valid
--13439-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--13439-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--13439-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--13439-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--13439-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
--13439-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--13439-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--13439-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--13439-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--13439-- REDIR: 0x3f79e81120 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--13439-- REDIR: 0x3f79f33560 (__strlen_sse42) redirected to 0x4a07f50 (strlen)
--13439-- REDIR: 0x3f79e7f470 (strcat) redirected to 0x4a07c20 (strcat)
==13439== Conditional jump or move depends on uninitialised value(s)
==13439==    at 0x4A07F59: strlen (mc_replace_strmem.c:403)
==13439==    by 0x402780: strcat_ex (answer03.c:13)
==13439==    by 0x402B0B: implode (answer03.c:80)
==13439==    by 0x401D46: test_implode_XX (<stdin>:413)
==13439==    by 0x40259E: main (<stdin>:584)
==13439== 
==13439== Conditional jump or move depends on uninitialised value(s)
==13439==    at 0x4A07C2A: strcat (mc_replace_strmem.c:267)
==13439==    by 0x4028AA: strcat_ex (answer03.c:36)
==13439==    by 0x402B0B: implode (answer03.c:80)
==13439==    by 0x401D46: test_implode_XX (<stdin>:413)
==13439==    by 0x40259E: main (<stdin>:584)
==13439== 
==13439== Invalid write of size 1
==13439==    at 0x4A07C5F: strcat (mc_replace_strmem.c:267)
==13439==    by 0x4028AA: strcat_ex (answer03.c:36)
==13439==    by 0x402B26: implode (answer03.c:81)
==13439==    by 0x401D46: test_implode_XX (<stdin>:413)
==13439==    by 0x40259E: main (<stdin>:584)
==13439==  Address 0x4c3c181 is 0 bytes after a block of size 1 alloc'd
==13439==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==13439==    by 0x402ADB: implode (answer03.c:77)
==13439==    by 0x401D46: test_implode_XX (<stdin>:413)
==13439==    by 0x40259E: main (<stdin>:584)
==13439== 
==13439== Invalid read of size 8
==13439==    at 0x402B44: implode (answer03.c:83)
==13439==    by 0x401D46: test_implode_XX (<stdin>:413)
==13439==    by 0x40259E: main (<stdin>:584)
==13439==  Address 0x4c3c048 is 0 bytes after a block of size 8 alloc'd
==13439==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==13439==    by 0x400C93: explode_sol (<stdin>:72)
==13439==    by 0x401BF8: test_implode_XX (<stdin>:395)
==13439==    by 0x40259E: main (<stdin>:584)
==13439== 
==13439== Invalid read of size 1
==13439==    at 0x4A07F52: strlen (mc_replace_strmem.c:403)
==13439==    by 0x40275C: strcat_ex (answer03.c:11)
==13439==    by 0x402B59: implode (answer03.c:83)
==13439==    by 0x401D46: test_implode_XX (<stdin>:413)
==13439==    by 0x40259E: main (<stdin>:584)
==13439==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==13439== 
==13439== 
==13439== Process terminating with default action of signal 11 (SIGSEGV)
==13439==  Access not within mapped region at address 0x0
==13439==    at 0x4A07F52: strlen (mc_replace_strmem.c:403)
==13439==    by 0x40275C: strcat_ex (answer03.c:11)
==13439==    by 0x402B59: implode (answer03.c:83)
==13439==    by 0x401D46: test_implode_XX (<stdin>:413)
==13439==    by 0x40259E: main (<stdin>:584)
==13439==  If you believe this happened as a result of a stack
==13439==  overflow in your program's main thread (unlikely but
==13439==  possible), you can try to increase the size of the
==13439==  main thread stack using the --main-stacksize= flag.
==13439==  The main thread stack size used in this run was 10485760.
==13439== 
==13439== HEAP SUMMARY:
==13439==     in use at exit: 19 bytes in 5 blocks
==13439==   total heap usage: 5 allocs, 0 frees, 19 bytes allocated
==13439== 
==13439== Searching for pointers to 5 not-freed blocks
==13439== Checked 64,776 bytes
==13439== 
==13439== LEAK SUMMARY:
==13439==    definitely lost: 0 bytes in 0 blocks
==13439==    indirectly lost: 0 bytes in 0 blocks
==13439==      possibly lost: 0 bytes in 0 blocks
==13439==    still reachable: 19 bytes in 5 blocks
==13439==         suppressed: 0 bytes in 0 blocks
==13439== Reachable blocks (those to which a pointer was found) are not shown.
==13439== To see them, rerun with: --leak-check=full --show-reachable=yes
==13439== 
==13439== Use --track-origins=yes to see where uninitialised values come from
==13439== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 6 from 6)
==13439== 
==13439== 1 errors in context 1 of 5:
==13439== Invalid read of size 1
==13439==    at 0x4A07F52: strlen (mc_replace_strmem.c:403)
==13439==    by 0x40275C: strcat_ex (answer03.c:11)
==13439==    by 0x402B59: implode (answer03.c:83)
==13439==    by 0x401D46: test_implode_XX (<stdin>:413)
==13439==    by 0x40259E: main (<stdin>:584)
==13439==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==13439== 
==13439== 
==13439== 1 errors in context 2 of 5:
==13439== Invalid read of size 8
==13439==    at 0x402B44: implode (answer03.c:83)
==13439==    by 0x401D46: test_implode_XX (<stdin>:413)
==13439==    by 0x40259E: main (<stdin>:584)
==13439==  Address 0x4c3c048 is 0 bytes after a block of size 8 alloc'd
==13439==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==13439==    by 0x400C93: explode_sol (<stdin>:72)
==13439==    by 0x401BF8: test_implode_XX (<stdin>:395)
==13439==    by 0x40259E: main (<stdin>:584)
==13439== 
==13439== 
==13439== 1 errors in context 3 of 5:
==13439== Invalid write of size 1
==13439==    at 0x4A07C5F: strcat (mc_replace_strmem.c:267)
==13439==    by 0x4028AA: strcat_ex (answer03.c:36)
==13439==    by 0x402B26: implode (answer03.c:81)
==13439==    by 0x401D46: test_implode_XX (<stdin>:413)
==13439==    by 0x40259E: main (<stdin>:584)
==13439==  Address 0x4c3c181 is 0 bytes after a block of size 1 alloc'd
==13439==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==13439==    by 0x402ADB: implode (answer03.c:77)
==13439==    by 0x401D46: test_implode_XX (<stdin>:413)
==13439==    by 0x40259E: main (<stdin>:584)
==13439== 
==13439== 
==13439== 1 errors in context 4 of 5:
==13439== Conditional jump or move depends on uninitialised value(s)
==13439==    at 0x4A07C2A: strcat (mc_replace_strmem.c:267)
==13439==    by 0x4028AA: strcat_ex (answer03.c:36)
==13439==    by 0x402B0B: implode (answer03.c:80)
==13439==    by 0x401D46: test_implode_XX (<stdin>:413)
==13439==    by 0x40259E: main (<stdin>:584)
==13439== 
==13439== 
==13439== 1 errors in context 5 of 5:
==13439== Conditional jump or move depends on uninitialised value(s)
==13439==    at 0x4A07F59: strlen (mc_replace_strmem.c:403)
==13439==    by 0x402780: strcat_ex (answer03.c:13)
==13439==    by 0x402B0B: implode (answer03.c:80)
==13439==    by 0x401D46: test_implode_XX (<stdin>:413)
==13439==    by 0x40259E: main (<stdin>:584)
==13439== 
--13439-- 
--13439-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--13439-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==13439== 
==13439== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 6 from 6)

test 19 :: implode(...)

   int len = 1
   char * * strArr = malloc(len * sizeof(char*));
   strArr[0] = strdup("");
   const char * glue = "";
   char * s = implode(strArr, len, glue);
Memory errors detected, testcase failed.
==18867== Memcheck, a memory error detector
==18867== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==18867== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==18867== Command: /tmp/.ptVh3K/a.out 18
==18867== Parent PID: 18864
==18867== 
--18867-- 
--18867-- Valgrind options:
--18867--    --tool=memcheck
--18867--    --leak-check=full
--18867--    --verbose
--18867--    --log-file=memcheck.log
--18867-- Contents of /proc/version:
--18867--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--18867-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--18867-- Page sizes: currently 4096, max supported 4096
--18867-- Valgrind library directory: /usr/lib64/valgrind
--18867-- Reading syms from /tmp/.ptVh3K/a.out
--18867-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--18867--    object doesn't have a dynamic symbol table
--18867-- Reading syms from /lib64/ld-2.12.so
--18867--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--18867--   .. build-id is valid
--18867-- Scheduler: using generic scheduler lock implementation.
--18867-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==18867== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-18867-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==18867== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-18867-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==18867== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-18867-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==18867== 
==18867== TO CONTROL THIS PROCESS USING vgdb (which you probably
==18867== don't want to do, unless you know exactly what you're doing,
==18867== or are doing some strange experiment):
==18867==   /usr/lib64/valgrind/../../bin/vgdb --pid=18867 ...command...
==18867== 
==18867== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==18867==   /path/to/gdb /tmp/.ptVh3K/a.out
==18867== and then give GDB the following command
==18867==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=18867
==18867== --pid is optional if only one valgrind process is running
==18867== 
--18867-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--18867-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--18867-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--18867-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--18867-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--18867-- Reading syms from /lib64/libc-2.12.so
--18867--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--18867--   .. build-id is valid
--18867-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--18867-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--18867-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--18867-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--18867-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
--18867-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--18867-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--18867-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--18867-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--18867-- REDIR: 0x3f79e81120 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--18867-- REDIR: 0x3f79f33560 (__strlen_sse42) redirected to 0x4a07f50 (strlen)
--18867-- REDIR: 0x3f79e7f470 (strcat) redirected to 0x4a07c20 (strcat)
==18867== Conditional jump or move depends on uninitialised value(s)
==18867==    at 0x4A07F59: strlen (mc_replace_strmem.c:403)
==18867==    by 0x402780: strcat_ex (answer03.c:13)
==18867==    by 0x402B0B: implode (answer03.c:80)
==18867==    by 0x401D46: test_implode_XX (<stdin>:413)
==18867==    by 0x4025BC: main (<stdin>:585)
==18867== 
==18867== Conditional jump or move depends on uninitialised value(s)
==18867==    at 0x4A07C2A: strcat (mc_replace_strmem.c:267)
==18867==    by 0x4028AA: strcat_ex (answer03.c:36)
==18867==    by 0x402B0B: implode (answer03.c:80)
==18867==    by 0x401D46: test_implode_XX (<stdin>:413)
==18867==    by 0x4025BC: main (<stdin>:585)
==18867== 
==18867== Invalid read of size 8
==18867==    at 0x402B44: implode (answer03.c:83)
==18867==    by 0x401D46: test_implode_XX (<stdin>:413)
==18867==    by 0x4025BC: main (<stdin>:585)
==18867==  Address 0x4c3c048 is 0 bytes after a block of size 8 alloc'd
==18867==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==18867==    by 0x400C93: explode_sol (<stdin>:72)
==18867==    by 0x401BF8: test_implode_XX (<stdin>:395)
==18867==    by 0x4025BC: main (<stdin>:585)
==18867== 
==18867== Invalid read of size 1
==18867==    at 0x4A07F52: strlen (mc_replace_strmem.c:403)
==18867==    by 0x40275C: strcat_ex (answer03.c:11)
==18867==    by 0x402B59: implode (answer03.c:83)
==18867==    by 0x401D46: test_implode_XX (<stdin>:413)
==18867==    by 0x4025BC: main (<stdin>:585)
==18867==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==18867== 
==18867== 
==18867== Process terminating with default action of signal 11 (SIGSEGV)
==18867==  Access not within mapped region at address 0x0
==18867==    at 0x4A07F52: strlen (mc_replace_strmem.c:403)
==18867==    by 0x40275C: strcat_ex (answer03.c:11)
==18867==    by 0x402B59: implode (answer03.c:83)
==18867==    by 0x401D46: test_implode_XX (<stdin>:413)
==18867==    by 0x4025BC: main (<stdin>:585)
==18867==  If you believe this happened as a result of a stack
==18867==  overflow in your program's main thread (unlikely but
==18867==  possible), you can try to increase the size of the
==18867==  main thread stack using the --main-stacksize= flag.
==18867==  The main thread stack size used in this run was 10485760.
==18867== 
==18867== HEAP SUMMARY:
==18867==     in use at exit: 19 bytes in 5 blocks
==18867==   total heap usage: 5 allocs, 0 frees, 19 bytes allocated
==18867== 
==18867== Searching for pointers to 5 not-freed blocks
==18867== Checked 64,776 bytes
==18867== 
==18867== LEAK SUMMARY:
==18867==    definitely lost: 0 bytes in 0 blocks
==18867==    indirectly lost: 0 bytes in 0 blocks
==18867==      possibly lost: 0 bytes in 0 blocks
==18867==    still reachable: 19 bytes in 5 blocks
==18867==         suppressed: 0 bytes in 0 blocks
==18867== Reachable blocks (those to which a pointer was found) are not shown.
==18867== To see them, rerun with: --leak-check=full --show-reachable=yes
==18867== 
==18867== Use --track-origins=yes to see where uninitialised values come from
==18867== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 6 from 6)
==18867== 
==18867== 1 errors in context 1 of 4:
==18867== Invalid read of size 1
==18867==    at 0x4A07F52: strlen (mc_replace_strmem.c:403)
==18867==    by 0x40275C: strcat_ex (answer03.c:11)
==18867==    by 0x402B59: implode (answer03.c:83)
==18867==    by 0x401D46: test_implode_XX (<stdin>:413)
==18867==    by 0x4025BC: main (<stdin>:585)
==18867==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==18867== 
==18867== 
==18867== 1 errors in context 2 of 4:
==18867== Invalid read of size 8
==18867==    at 0x402B44: implode (answer03.c:83)
==18867==    by 0x401D46: test_implode_XX (<stdin>:413)
==18867==    by 0x4025BC: main (<stdin>:585)
==18867==  Address 0x4c3c048 is 0 bytes after a block of size 8 alloc'd
==18867==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==18867==    by 0x400C93: explode_sol (<stdin>:72)
==18867==    by 0x401BF8: test_implode_XX (<stdin>:395)
==18867==    by 0x4025BC: main (<stdin>:585)
==18867== 
==18867== 
==18867== 1 errors in context 3 of 4:
==18867== Conditional jump or move depends on uninitialised value(s)
==18867==    at 0x4A07C2A: strcat (mc_replace_strmem.c:267)
==18867==    by 0x4028AA: strcat_ex (answer03.c:36)
==18867==    by 0x402B0B: implode (answer03.c:80)
==18867==    by 0x401D46: test_implode_XX (<stdin>:413)
==18867==    by 0x4025BC: main (<stdin>:585)
==18867== 
==18867== 
==18867== 1 errors in context 4 of 4:
==18867== Conditional jump or move depends on uninitialised value(s)
==18867==    at 0x4A07F59: strlen (mc_replace_strmem.c:403)
==18867==    by 0x402780: strcat_ex (answer03.c:13)
==18867==    by 0x402B0B: implode (answer03.c:80)
==18867==    by 0x401D46: test_implode_XX (<stdin>:413)
==18867==    by 0x4025BC: main (<stdin>:585)
==18867== 
--18867-- 
--18867-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--18867-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==18867== 
==18867== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 6 from 6)

test 20 :: implode(...)

   int len = 25
   char * * strArr = malloc(len * sizeof(char*));
   strArr[0] = strdup("The");
   strArr[1] = strdup("more");
   strArr[2] = strdup("that");
   strArr[3] = strdup("you");
   strArr[4] = strdup("read");
   strArr[5] = strdup("");
   strArr[6] = strdup("the");
   strArr[7] = strdup("more");
   strArr[8] = strdup("things");
   strArr[9] = strdup("you");
   strArr[10] = strdup("will");
   strArr[11] = strdup("know");
   strArr[12] = strdup("");
   strArr[13] = strdup("The");
   strArr[14] = strdup("more");
   strArr[15] = strdup("that");
   strArr[16] = strdup("you");
   strArr[17] = strdup("learn");
   strArr[18] = strdup("");
   strArr[19] = strdup("the");
   strArr[20] = strdup("more");
   strArr[21] = strdup("places");
   strArr[22] = strdup("you\'ll");
   strArr[23] = strdup("go");
   strArr[24] = strdup("");
   const char * glue = " -- ";
   char * s = implode(strArr, len, glue);
Memory errors detected, testcase failed.
==24009== Memcheck, a memory error detector
==24009== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==24009== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==24009== Command: /tmp/.ptVh3K/a.out 19
==24009== Parent PID: 24008
==24009== 
--24009-- 
--24009-- Valgrind options:
--24009--    --tool=memcheck
--24009--    --leak-check=full
--24009--    --verbose
--24009--    --log-file=memcheck.log
--24009-- Contents of /proc/version:
--24009--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--24009-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--24009-- Page sizes: currently 4096, max supported 4096
--24009-- Valgrind library directory: /usr/lib64/valgrind
--24009-- Reading syms from /tmp/.ptVh3K/a.out
--24009-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--24009--    object doesn't have a dynamic symbol table
--24009-- Reading syms from /lib64/ld-2.12.so
--24009--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--24009--   .. build-id is valid
--24009-- Scheduler: using generic scheduler lock implementation.
--24009-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==24009== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-24009-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==24009== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-24009-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==24009== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-24009-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==24009== 
==24009== TO CONTROL THIS PROCESS USING vgdb (which you probably
==24009== don't want to do, unless you know exactly what you're doing,
==24009== or are doing some strange experiment):
==24009==   /usr/lib64/valgrind/../../bin/vgdb --pid=24009 ...command...
==24009== 
==24009== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==24009==   /path/to/gdb /tmp/.ptVh3K/a.out
==24009== and then give GDB the following command
==24009==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=24009
==24009== --pid is optional if only one valgrind process is running
==24009== 
--24009-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--24009-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--24009-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--24009-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--24009-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--24009-- Reading syms from /lib64/libc-2.12.so
--24009--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--24009--   .. build-id is valid
--24009-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--24009-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--24009-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--24009-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--24009-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
--24009-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--24009-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
--24009-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--24009-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--24009-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--24009-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--24009-- REDIR: 0x3f79e81120 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--24009-- REDIR: 0x3f79f33560 (__strlen_sse42) redirected to 0x4a07f50 (strlen)
--24009-- REDIR: 0x3f79e7f470 (strcat) redirected to 0x4a07c20 (strcat)
--24009-- REDIR: 0x3f79e80b70 (strcpy) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--24009-- REDIR: 0x3f79f34000 (???) redirected to 0x4a07f90 (strcpy)
==24009== Conditional jump or move depends on uninitialised value(s)
==24009==    at 0x4A07F59: strlen (mc_replace_strmem.c:403)
==24009==    by 0x402780: strcat_ex (answer03.c:13)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009== 
==24009== Conditional jump or move depends on uninitialised value(s)
==24009==    at 0x4A07F59: strlen (mc_replace_strmem.c:403)
==24009==    by 0x4027FA: strcat_ex (answer03.c:25)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009== 
==24009== Conditional jump or move depends on uninitialised value(s)
==24009==    at 0x4A07F9F: strcpy (mc_replace_strmem.c:442)
==24009==    by 0x402840: strcat_ex (answer03.c:27)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009== 
==24009== Invalid write of size 1
==24009==    at 0x4A07C5F: strcat (mc_replace_strmem.c:267)
==24009==    by 0x4028AA: strcat_ex (answer03.c:36)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009==  Address 0x4c3cf25 is 0 bytes after a block of size 37 alloc'd
==24009==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==24009==    by 0x40281C: strcat_ex (answer03.c:25)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009== 
==24009== Invalid read of size 1
==24009==    at 0x4A07F64: strlen (mc_replace_strmem.c:403)
==24009==    by 0x402780: strcat_ex (answer03.c:13)
==24009==    by 0x402B26: implode (answer03.c:81)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009==  Address 0x4c3cf25 is 0 bytes after a block of size 37 alloc'd
==24009==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==24009==    by 0x40281C: strcat_ex (answer03.c:25)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009== 
==24009== Invalid read of size 1
==24009==    at 0x4A07C34: strcat (mc_replace_strmem.c:267)
==24009==    by 0x4028AA: strcat_ex (answer03.c:36)
==24009==    by 0x402B26: implode (answer03.c:81)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009==  Address 0x4c3cf25 is 0 bytes after a block of size 37 alloc'd
==24009==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==24009==    by 0x40281C: strcat_ex (answer03.c:25)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009== 
==24009== Invalid write of size 1
==24009==    at 0x4A07C4C: strcat (mc_replace_strmem.c:267)
==24009==    by 0x4028AA: strcat_ex (answer03.c:36)
==24009==    by 0x402B26: implode (answer03.c:81)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009==  Address 0x4c3cf25 is 0 bytes after a block of size 37 alloc'd
==24009==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==24009==    by 0x40281C: strcat_ex (answer03.c:25)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009== 
==24009== Invalid write of size 1
==24009==    at 0x4A07C5F: strcat (mc_replace_strmem.c:267)
==24009==    by 0x4028AA: strcat_ex (answer03.c:36)
==24009==    by 0x402B26: implode (answer03.c:81)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009==  Address 0x4c3cf29 is 4 bytes after a block of size 37 alloc'd
==24009==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==24009==    by 0x40281C: strcat_ex (answer03.c:25)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009== 
==24009== Invalid read of size 1
==24009==    at 0x4A07F64: strlen (mc_replace_strmem.c:403)
==24009==    by 0x402780: strcat_ex (answer03.c:13)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009==  Address 0x4c3cf25 is 0 bytes after a block of size 37 alloc'd
==24009==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==24009==    by 0x40281C: strcat_ex (answer03.c:25)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009== 
==24009== Invalid read of size 1
==24009==    at 0x4A07C34: strcat (mc_replace_strmem.c:267)
==24009==    by 0x4028AA: strcat_ex (answer03.c:36)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009==  Address 0x4c3cf25 is 0 bytes after a block of size 37 alloc'd
==24009==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==24009==    by 0x40281C: strcat_ex (answer03.c:25)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009== 
==24009== Invalid write of size 1
==24009==    at 0x4A07C4C: strcat (mc_replace_strmem.c:267)
==24009==    by 0x4028AA: strcat_ex (answer03.c:36)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009==  Address 0x4c3cf29 is 4 bytes after a block of size 37 alloc'd
==24009==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==24009==    by 0x40281C: strcat_ex (answer03.c:25)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009== 
==24009== Invalid read of size 8
==24009==    at 0x402B44: implode (answer03.c:83)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009==  Address 0x4c3c108 is 0 bytes after a block of size 200 alloc'd
==24009==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==24009==    by 0x400C93: explode_sol (<stdin>:72)
==24009==    by 0x401BF8: test_implode_XX (<stdin>:395)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009== 
==24009== Invalid read of size 1
==24009==    at 0x4A07F52: strlen (mc_replace_strmem.c:403)
==24009==    by 0x40275C: strcat_ex (answer03.c:11)
==24009==    by 0x402B59: implode (answer03.c:83)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==24009== 
==24009== 
==24009== Process terminating with default action of signal 11 (SIGSEGV)
==24009==  Access not within mapped region at address 0x0
==24009==    at 0x4A07F52: strlen (mc_replace_strmem.c:403)
==24009==    by 0x40275C: strcat_ex (answer03.c:11)
==24009==    by 0x402B59: implode (answer03.c:83)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009==  If you believe this happened as a result of a stack
==24009==  overflow in your program's main thread (unlikely but
==24009==  possible), you can try to increase the size of the
==24009==  main thread stack using the --main-stacksize= flag.
==24009==  The main thread stack size used in this run was 10485760.
==24009== 
==24009== HEAP SUMMARY:
==24009==     in use at exit: 833 bytes in 29 blocks
==24009==   total heap usage: 37 allocs, 8 frees, 1,125 bytes allocated
==24009== 
==24009== Searching for pointers to 29 not-freed blocks
==24009== Checked 65,368 bytes
==24009== 
==24009== LEAK SUMMARY:
==24009==    definitely lost: 0 bytes in 0 blocks
==24009==    indirectly lost: 0 bytes in 0 blocks
==24009==      possibly lost: 0 bytes in 0 blocks
==24009==    still reachable: 833 bytes in 29 blocks
==24009==         suppressed: 0 bytes in 0 blocks
==24009== Reachable blocks (those to which a pointer was found) are not shown.
==24009== To see them, rerun with: --leak-check=full --show-reachable=yes
==24009== 
==24009== Use --track-origins=yes to see where uninitialised values come from
==24009== ERROR SUMMARY: 6851 errors from 13 contexts (suppressed: 6 from 6)
==24009== 
==24009== 1 errors in context 1 of 13:
==24009== Invalid read of size 1
==24009==    at 0x4A07F52: strlen (mc_replace_strmem.c:403)
==24009==    by 0x40275C: strcat_ex (answer03.c:11)
==24009==    by 0x402B59: implode (answer03.c:83)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==24009== 
==24009== 
==24009== 1 errors in context 2 of 13:
==24009== Invalid read of size 8
==24009==    at 0x402B44: implode (answer03.c:83)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009==  Address 0x4c3c108 is 0 bytes after a block of size 200 alloc'd
==24009==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==24009==    by 0x400C93: explode_sol (<stdin>:72)
==24009==    by 0x401BF8: test_implode_XX (<stdin>:395)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009== 
==24009== 
==24009== 1 errors in context 3 of 13:
==24009== Conditional jump or move depends on uninitialised value(s)
==24009==    at 0x4A07F9F: strcpy (mc_replace_strmem.c:442)
==24009==    by 0x402840: strcat_ex (answer03.c:27)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009== 
==24009== 
==24009== 1 errors in context 4 of 13:
==24009== Conditional jump or move depends on uninitialised value(s)
==24009==    at 0x4A07F59: strlen (mc_replace_strmem.c:403)
==24009==    by 0x4027FA: strcat_ex (answer03.c:25)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009== 
==24009== 
==24009== 1 errors in context 5 of 13:
==24009== Conditional jump or move depends on uninitialised value(s)
==24009==    at 0x4A07F59: strlen (mc_replace_strmem.c:403)
==24009==    by 0x402780: strcat_ex (answer03.c:13)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009== 
==24009== 
==24009== 22 errors in context 6 of 13:
==24009== Invalid write of size 1
==24009==    at 0x4A07C5F: strcat (mc_replace_strmem.c:267)
==24009==    by 0x4028AA: strcat_ex (answer03.c:36)
==24009==    by 0x402B26: implode (answer03.c:81)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009==  Address 0x4c3cf29 is 4 bytes after a block of size 37 alloc'd
==24009==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==24009==    by 0x40281C: strcat_ex (answer03.c:25)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009== 
==24009== 
==24009== 22 errors in context 7 of 13:
==24009== Invalid write of size 1
==24009==    at 0x4A07C5F: strcat (mc_replace_strmem.c:267)
==24009==    by 0x4028AA: strcat_ex (answer03.c:36)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009==  Address 0x4c3cf25 is 0 bytes after a block of size 37 alloc'd
==24009==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==24009==    by 0x40281C: strcat_ex (answer03.c:25)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009== 
==24009== 
==24009== 68 errors in context 8 of 13:
==24009== Invalid write of size 1
==24009==    at 0x4A07C4C: strcat (mc_replace_strmem.c:267)
==24009==    by 0x4028AA: strcat_ex (answer03.c:36)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009==  Address 0x4c3cf29 is 4 bytes after a block of size 37 alloc'd
==24009==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==24009==    by 0x40281C: strcat_ex (answer03.c:25)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009== 
==24009== 
==24009== 88 errors in context 9 of 13:
==24009== Invalid write of size 1
==24009==    at 0x4A07C4C: strcat (mc_replace_strmem.c:267)
==24009==    by 0x4028AA: strcat_ex (answer03.c:36)
==24009==    by 0x402B26: implode (answer03.c:81)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009==  Address 0x4c3cf25 is 0 bytes after a block of size 37 alloc'd
==24009==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==24009==    by 0x40281C: strcat_ex (answer03.c:25)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009== 
==24009== 
==24009== 1627 errors in context 10 of 13:
==24009== Invalid read of size 1
==24009==    at 0x4A07C34: strcat (mc_replace_strmem.c:267)
==24009==    by 0x4028AA: strcat_ex (answer03.c:36)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009==  Address 0x4c3cf25 is 0 bytes after a block of size 37 alloc'd
==24009==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==24009==    by 0x40281C: strcat_ex (answer03.c:25)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009== 
==24009== 
==24009== 1627 errors in context 11 of 13:
==24009== Invalid read of size 1
==24009==    at 0x4A07F64: strlen (mc_replace_strmem.c:403)
==24009==    by 0x402780: strcat_ex (answer03.c:13)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009==  Address 0x4c3cf25 is 0 bytes after a block of size 37 alloc'd
==24009==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==24009==    by 0x40281C: strcat_ex (answer03.c:25)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009== 
==24009== 
==24009== 1696 errors in context 12 of 13:
==24009== Invalid read of size 1
==24009==    at 0x4A07C34: strcat (mc_replace_strmem.c:267)
==24009==    by 0x4028AA: strcat_ex (answer03.c:36)
==24009==    by 0x402B26: implode (answer03.c:81)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009==  Address 0x4c3cf25 is 0 bytes after a block of size 37 alloc'd
==24009==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==24009==    by 0x40281C: strcat_ex (answer03.c:25)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009== 
==24009== 
==24009== 1696 errors in context 13 of 13:
==24009== Invalid read of size 1
==24009==    at 0x4A07F64: strlen (mc_replace_strmem.c:403)
==24009==    by 0x402780: strcat_ex (answer03.c:13)
==24009==    by 0x402B26: implode (answer03.c:81)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009==  Address 0x4c3cf25 is 0 bytes after a block of size 37 alloc'd
==24009==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==24009==    by 0x40281C: strcat_ex (answer03.c:25)
==24009==    by 0x402B0B: implode (answer03.c:80)
==24009==    by 0x401D46: test_implode_XX (<stdin>:413)
==24009==    by 0x4025DF: main (<stdin>:586)
==24009== 
--24009-- 
--24009-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--24009-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==24009== 
==24009== ERROR SUMMARY: 6851 errors from 13 contexts (suppressed: 6 from 6)

test 21 :: implode(...)

   int len = 35
   char * * strArr = malloc(len * sizeof(char*));
   strArr[0] = strdup("Twas brillig, and the slithy toves");
   strArr[1] = strdup("Did gyre and gimble in the wabe:");
   strArr[2] = strdup("All mimsy were the borogoves,");
   strArr[3] = strdup("And the mome raths outgrabe.");
   strArr[4] = strdup("");
   strArr[5] = strdup("Beware the Jabberwock, my son!");
   strArr[6] = strdup("The jaws that bite, the claws that catch!");
   strArr[7] = strdup("Beware the Jubjub bird, and shun");
   strArr[8] = strdup("The frumious Bandersnatch!");
   strArr[9] = strdup("");
   strArr[10] = strdup("He took his vorpal sword in hand:");
   strArr[11] = strdup("Long time the manxome foe he sought --");
   strArr[12] = strdup("So rested he by the Tumtum tree,");
   strArr[13] = strdup("And stood awhile in thought.");
   strArr[14] = strdup("");
   strArr[15] = strdup("And, as in uffish thought he stood,");
   strArr[16] = strdup("The Jabberwock, with eyes of flame,");
   strArr[17] = strdup("Came whiffling through the tulgey wood,");
   strArr[18] = strdup("And burbled as it came!");
   strArr[19] = strdup("");
   strArr[20] = strdup("One, two! One, two! And through and through");
   strArr[21] = strdup("The vorpal blade went snicker-snack!");
   strArr[22] = strdup("He left it dead, and with its head");
   strArr[23] = strdup("He went galumphing back.");
   strArr[24] = strdup("");
   strArr[25] = strdup("And, has thou slain the Jabberwock?");
   strArr[26] = strdup("Come to my arms, my beamish boy!");
   strArr[27] = strdup("O frabjous day! Callooh! Callay!");
   strArr[28] = strdup("He chortled in his joy.");
   strArr[29] = strdup("");
   strArr[30] = strdup("Twas brillig, and the slithy toves");
   strArr[31] = strdup("Did gyre and gimble in the wabe;");
   strArr[32] = strdup("All mimsy were the borogoves,");
   strArr[33] = strdup("And the mome raths outgrabe.");
   strArr[34] = strdup("");
   const char * glue = ";\n";
   char * s = implode(strArr, len, glue);
Memory errors detected, testcase failed.
==29956== Memcheck, a memory error detector
==29956== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==29956== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==29956== Command: /tmp/.ptVh3K/a.out 20
==29956== Parent PID: 29954
==29956== 
--29956-- 
--29956-- Valgrind options:
--29956--    --tool=memcheck
--29956--    --leak-check=full
--29956--    --verbose
--29956--    --log-file=memcheck.log
--29956-- Contents of /proc/version:
--29956--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--29956-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--29956-- Page sizes: currently 4096, max supported 4096
--29956-- Valgrind library directory: /usr/lib64/valgrind
--29956-- Reading syms from /tmp/.ptVh3K/a.out
--29956-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--29956--    object doesn't have a dynamic symbol table
--29956-- Reading syms from /lib64/ld-2.12.so
--29956--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--29956--   .. build-id is valid
--29956-- Scheduler: using generic scheduler lock implementation.
--29956-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==29956== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-29956-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==29956== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-29956-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==29956== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-29956-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==29956== 
==29956== TO CONTROL THIS PROCESS USING vgdb (which you probably
==29956== don't want to do, unless you know exactly what you're doing,
==29956== or are doing some strange experiment):
==29956==   /usr/lib64/valgrind/../../bin/vgdb --pid=29956 ...command...
==29956== 
==29956== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==29956==   /path/to/gdb /tmp/.ptVh3K/a.out
==29956== and then give GDB the following command
==29956==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=29956
==29956== --pid is optional if only one valgrind process is running
==29956== 
--29956-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--29956-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--29956-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--29956-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--29956-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--29956-- Reading syms from /lib64/libc-2.12.so
--29956--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--29956--   .. build-id is valid
--29956-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--29956-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--29956-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--29956-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--29956-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
--29956-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--29956-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
--29956-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--29956-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--29956-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--29956-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--29956-- REDIR: 0x3f79e81120 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--29956-- REDIR: 0x3f79f33560 (__strlen_sse42) redirected to 0x4a07f50 (strlen)
--29956-- REDIR: 0x3f79e7f470 (strcat) redirected to 0x4a07c20 (strcat)
--29956-- REDIR: 0x3f79e80b70 (strcpy) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--29956-- REDIR: 0x3f79f34000 (???) redirected to 0x4a07f90 (strcpy)
==29956== Conditional jump or move depends on uninitialised value(s)
==29956==    at 0x4A07F59: strlen (mc_replace_strmem.c:403)
==29956==    by 0x402780: strcat_ex (answer03.c:13)
==29956==    by 0x402B0B: implode (answer03.c:80)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956== 
==29956== Conditional jump or move depends on uninitialised value(s)
==29956==    at 0x4A07C2A: strcat (mc_replace_strmem.c:267)
==29956==    by 0x4028AA: strcat_ex (answer03.c:36)
==29956==    by 0x402B0B: implode (answer03.c:80)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956== 
==29956== Invalid write of size 1
==29956==    at 0x4A07C4C: strcat (mc_replace_strmem.c:267)
==29956==    by 0x4028AA: strcat_ex (answer03.c:36)
==29956==    by 0x402B0B: implode (answer03.c:80)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956==  Address 0x4c3dc81 is 0 bytes after a block of size 1 alloc'd
==29956==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==29956==    by 0x402ADB: implode (answer03.c:77)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956== 
==29956== Invalid write of size 1
==29956==    at 0x4A07C5F: strcat (mc_replace_strmem.c:267)
==29956==    by 0x4028AA: strcat_ex (answer03.c:36)
==29956==    by 0x402B0B: implode (answer03.c:80)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956==  Address 0x4c3dca2 is not stack'd, malloc'd or (recently) free'd
==29956== 
==29956== Invalid read of size 1
==29956==    at 0x4A07F64: strlen (mc_replace_strmem.c:403)
==29956==    by 0x402780: strcat_ex (answer03.c:13)
==29956==    by 0x402B26: implode (answer03.c:81)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956==  Address 0x4c3dc81 is 0 bytes after a block of size 1 alloc'd
==29956==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==29956==    by 0x402ADB: implode (answer03.c:77)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956== 
==29956== Invalid read of size 1
==29956==    at 0x4A07C34: strcat (mc_replace_strmem.c:267)
==29956==    by 0x4028AA: strcat_ex (answer03.c:36)
==29956==    by 0x402B26: implode (answer03.c:81)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956==  Address 0x4c3dc81 is 0 bytes after a block of size 1 alloc'd
==29956==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==29956==    by 0x402ADB: implode (answer03.c:77)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956== 
==29956== Invalid write of size 1
==29956==    at 0x4A07C4C: strcat (mc_replace_strmem.c:267)
==29956==    by 0x4028AA: strcat_ex (answer03.c:36)
==29956==    by 0x402B26: implode (answer03.c:81)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956==  Address 0x4c3dca2 is not stack'd, malloc'd or (recently) free'd
==29956== 
==29956== Invalid write of size 1
==29956==    at 0x4A07C5F: strcat (mc_replace_strmem.c:267)
==29956==    by 0x4028AA: strcat_ex (answer03.c:36)
==29956==    by 0x402B26: implode (answer03.c:81)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956==  Address 0x4c3dca4 is not stack'd, malloc'd or (recently) free'd
==29956== 
==29956== Invalid read of size 1
==29956==    at 0x4A07F64: strlen (mc_replace_strmem.c:403)
==29956==    by 0x402780: strcat_ex (answer03.c:13)
==29956==    by 0x402B0B: implode (answer03.c:80)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956==  Address 0x4c3dc81 is 0 bytes after a block of size 1 alloc'd
==29956==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==29956==    by 0x402ADB: implode (answer03.c:77)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956== 
==29956== Invalid read of size 1
==29956==    at 0x4A07C34: strcat (mc_replace_strmem.c:267)
==29956==    by 0x4028AA: strcat_ex (answer03.c:36)
==29956==    by 0x402B0B: implode (answer03.c:80)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956==  Address 0x4c3dc81 is 0 bytes after a block of size 1 alloc'd
==29956==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==29956==    by 0x402ADB: implode (answer03.c:77)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956== 
==29956== Invalid read of size 8
==29956==    at 0x402B44: implode (answer03.c:83)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956==  Address 0x4c3c158 is 0 bytes after a block of size 280 alloc'd
==29956==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==29956==    by 0x400C93: explode_sol (<stdin>:72)
==29956==    by 0x401BF8: test_implode_XX (<stdin>:395)
==29956==    by 0x402602: main (<stdin>:587)
==29956== 
==29956== Invalid read of size 1
==29956==    at 0x4A07F52: strlen (mc_replace_strmem.c:403)
==29956==    by 0x40275C: strcat_ex (answer03.c:11)
==29956==    by 0x402B59: implode (answer03.c:83)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==29956== 
==29956== 
==29956== Process terminating with default action of signal 11 (SIGSEGV)
==29956==  Access not within mapped region at address 0x0
==29956==    at 0x4A07F52: strlen (mc_replace_strmem.c:403)
==29956==    by 0x40275C: strcat_ex (answer03.c:11)
==29956==    by 0x402B59: implode (answer03.c:83)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956==  If you believe this happened as a result of a stack
==29956==  overflow in your program's main thread (unlikely but
==29956==  possible), you can try to increase the size of the
==29956==  main thread stack using the --main-stacksize= flag.
==29956==  The main thread stack size used in this run was 10485760.
==29956== 
==29956== HEAP SUMMARY:
==29956==     in use at exit: 2,890 bytes in 39 blocks
==29956==   total heap usage: 43 allocs, 4 frees, 4,118 bytes allocated
==29956== 
==29956== Searching for pointers to 39 not-freed blocks
==29956== Checked 67,120 bytes
==29956== 
==29956== LEAK SUMMARY:
==29956==    definitely lost: 0 bytes in 0 blocks
==29956==    indirectly lost: 0 bytes in 0 blocks
==29956==      possibly lost: 0 bytes in 0 blocks
==29956==    still reachable: 2,890 bytes in 39 blocks
==29956==         suppressed: 0 bytes in 0 blocks
==29956== Reachable blocks (those to which a pointer was found) are not shown.
==29956== To see them, rerun with: --leak-check=full --show-reachable=yes
==29956== 
==29956== Use --track-origins=yes to see where uninitialised values come from
==29956== ERROR SUMMARY: 70966 errors from 12 contexts (suppressed: 6 from 6)
==29956== 
==29956== 1 errors in context 1 of 12:
==29956== Invalid read of size 1
==29956==    at 0x4A07F52: strlen (mc_replace_strmem.c:403)
==29956==    by 0x40275C: strcat_ex (answer03.c:11)
==29956==    by 0x402B59: implode (answer03.c:83)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==29956== 
==29956== 
==29956== 1 errors in context 2 of 12:
==29956== Invalid read of size 8
==29956==    at 0x402B44: implode (answer03.c:83)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956==  Address 0x4c3c158 is 0 bytes after a block of size 280 alloc'd
==29956==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==29956==    by 0x400C93: explode_sol (<stdin>:72)
==29956==    by 0x401BF8: test_implode_XX (<stdin>:395)
==29956==    by 0x402602: main (<stdin>:587)
==29956== 
==29956== 
==29956== 1 errors in context 3 of 12:
==29956== Conditional jump or move depends on uninitialised value(s)
==29956==    at 0x4A07C2A: strcat (mc_replace_strmem.c:267)
==29956==    by 0x4028AA: strcat_ex (answer03.c:36)
==29956==    by 0x402B0B: implode (answer03.c:80)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956== 
==29956== 
==29956== 1 errors in context 4 of 12:
==29956== Conditional jump or move depends on uninitialised value(s)
==29956==    at 0x4A07F59: strlen (mc_replace_strmem.c:403)
==29956==    by 0x402780: strcat_ex (answer03.c:13)
==29956==    by 0x402B0B: implode (answer03.c:80)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956== 
==29956== 
==29956== 35 errors in context 5 of 12:
==29956== Invalid write of size 1
==29956==    at 0x4A07C5F: strcat (mc_replace_strmem.c:267)
==29956==    by 0x4028AA: strcat_ex (answer03.c:36)
==29956==    by 0x402B26: implode (answer03.c:81)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956==  Address 0x4c3dca4 is not stack'd, malloc'd or (recently) free'd
==29956== 
==29956== 
==29956== 35 errors in context 6 of 12:
==29956== Invalid write of size 1
==29956==    at 0x4A07C5F: strcat (mc_replace_strmem.c:267)
==29956==    by 0x4028AA: strcat_ex (answer03.c:36)
==29956==    by 0x402B0B: implode (answer03.c:80)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956==  Address 0x4c3dca2 is not stack'd, malloc'd or (recently) free'd
==29956== 
==29956== 
==29956== 70 errors in context 7 of 12:
==29956== Invalid write of size 1
==29956==    at 0x4A07C4C: strcat (mc_replace_strmem.c:267)
==29956==    by 0x4028AA: strcat_ex (answer03.c:36)
==29956==    by 0x402B26: implode (answer03.c:81)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956==  Address 0x4c3dca2 is not stack'd, malloc'd or (recently) free'd
==29956== 
==29956== 
==29956== 896 errors in context 8 of 12:
==29956== Invalid write of size 1
==29956==    at 0x4A07C4C: strcat (mc_replace_strmem.c:267)
==29956==    by 0x4028AA: strcat_ex (answer03.c:36)
==29956==    by 0x402B0B: implode (answer03.c:80)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956==  Address 0x4c3dc81 is 0 bytes after a block of size 1 alloc'd
==29956==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==29956==    by 0x402ADB: implode (answer03.c:77)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956== 
==29956== 
==29956== 17033 errors in context 9 of 12:
==29956== Invalid read of size 1
==29956==    at 0x4A07C34: strcat (mc_replace_strmem.c:267)
==29956==    by 0x4028AA: strcat_ex (answer03.c:36)
==29956==    by 0x402B0B: implode (answer03.c:80)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956==  Address 0x4c3dc81 is 0 bytes after a block of size 1 alloc'd
==29956==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==29956==    by 0x402ADB: implode (answer03.c:77)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956== 
==29956== 
==29956== 17033 errors in context 10 of 12:
==29956== Invalid read of size 1
==29956==    at 0x4A07F64: strlen (mc_replace_strmem.c:403)
==29956==    by 0x402780: strcat_ex (answer03.c:13)
==29956==    by 0x402B0B: implode (answer03.c:80)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956==  Address 0x4c3dc81 is 0 bytes after a block of size 1 alloc'd
==29956==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==29956==    by 0x402ADB: implode (answer03.c:77)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956== 
==29956== 
==29956== 17930 errors in context 11 of 12:
==29956== Invalid read of size 1
==29956==    at 0x4A07C34: strcat (mc_replace_strmem.c:267)
==29956==    by 0x4028AA: strcat_ex (answer03.c:36)
==29956==    by 0x402B26: implode (answer03.c:81)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956==  Address 0x4c3dc81 is 0 bytes after a block of size 1 alloc'd
==29956==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==29956==    by 0x402ADB: implode (answer03.c:77)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956== 
==29956== 
==29956== 17930 errors in context 12 of 12:
==29956== Invalid read of size 1
==29956==    at 0x4A07F64: strlen (mc_replace_strmem.c:403)
==29956==    by 0x402780: strcat_ex (answer03.c:13)
==29956==    by 0x402B26: implode (answer03.c:81)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956==  Address 0x4c3dc81 is 0 bytes after a block of size 1 alloc'd
==29956==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==29956==    by 0x402ADB: implode (answer03.c:77)
==29956==    by 0x401D46: test_implode_XX (<stdin>:413)
==29956==    by 0x402602: main (<stdin>:587)
==29956== 
--29956-- 
--29956-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--29956-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==29956== 
==29956== ERROR SUMMARY: 70966 errors from 12 contexts (suppressed: 6 from 6)

test 22 :: implode(...)

   int len = 6
   char * * strArr = malloc(len * sizeof(char*));
   strArr[0] = strdup("1");
   strArr[1] = strdup("2");
   strArr[2] = strdup("3");
   strArr[3] = strdup("4");
   strArr[4] = strdup("5");
   strArr[5] = strdup("6");
   const char * glue = ", ";
   char * s = implode(strArr, len, glue);
Memory errors detected, testcase failed.
==3829== Memcheck, a memory error detector
==3829== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==3829== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==3829== Command: /tmp/.ptVh3K/a.out 21
==3829== Parent PID: 3828
==3829== 
--3829-- 
--3829-- Valgrind options:
--3829--    --tool=memcheck
--3829--    --leak-check=full
--3829--    --verbose
--3829--    --log-file=memcheck.log
--3829-- Contents of /proc/version:
--3829--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--3829-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--3829-- Page sizes: currently 4096, max supported 4096
--3829-- Valgrind library directory: /usr/lib64/valgrind
--3829-- Reading syms from /tmp/.ptVh3K/a.out
--3829-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--3829--    object doesn't have a dynamic symbol table
--3829-- Reading syms from /lib64/ld-2.12.so
--3829--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--3829--   .. build-id is valid
--3829-- Scheduler: using generic scheduler lock implementation.
--3829-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==3829== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-3829-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==3829== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-3829-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==3829== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-3829-by-qiu58-on-ecegrid-thin1.ecn.purdue.edu
==3829== 
==3829== TO CONTROL THIS PROCESS USING vgdb (which you probably
==3829== don't want to do, unless you know exactly what you're doing,
==3829== or are doing some strange experiment):
==3829==   /usr/lib64/valgrind/../../bin/vgdb --pid=3829 ...command...
==3829== 
==3829== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==3829==   /path/to/gdb /tmp/.ptVh3K/a.out
==3829== and then give GDB the following command
==3829==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=3829
==3829== --pid is optional if only one valgrind process is running
==3829== 
--3829-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--3829-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--3829-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--3829-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--3829-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--3829-- Reading syms from /lib64/libc-2.12.so
--3829--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--3829--   .. build-id is valid
--3829-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--3829-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--3829-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--3829-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--3829-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
--3829-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--3829-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
--3829-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--3829-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--3829-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--3829-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--3829-- REDIR: 0x3f79e81120 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--3829-- REDIR: 0x3f79f33560 (__strlen_sse42) redirected to 0x4a07f50 (strlen)
--3829-- REDIR: 0x3f79e7f470 (strcat) redirected to 0x4a07c20 (strcat)
--3829-- REDIR: 0x3f79e80b70 (strcpy) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--3829-- REDIR: 0x3f79f34000 (???) redirected to 0x4a07f90 (strcpy)
==3829== Conditional jump or move depends on uninitialised value(s)
==3829==    at 0x4A07F59: strlen (mc_replace_strmem.c:403)
==3829==    by 0x402780: strcat_ex (answer03.c:13)
==3829==    by 0x402B0B: implode (answer03.c:80)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829== 
==3829== Conditional jump or move depends on uninitialised value(s)
==3829==    at 0x4A07F59: strlen (mc_replace_strmem.c:403)
==3829==    by 0x4027FA: strcat_ex (answer03.c:25)
==3829==    by 0x402B0B: implode (answer03.c:80)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829== 
==3829== Conditional jump or move depends on uninitialised value(s)
==3829==    at 0x4A07F9F: strcpy (mc_replace_strmem.c:442)
==3829==    by 0x402840: strcat_ex (answer03.c:27)
==3829==    by 0x402B0B: implode (answer03.c:80)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829== 
==3829== Invalid write of size 1
==3829==    at 0x4A07C5F: strcat (mc_replace_strmem.c:267)
==3829==    by 0x4028AA: strcat_ex (answer03.c:36)
==3829==    by 0x402B26: implode (answer03.c:81)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829==  Address 0x4c3c4f9 is 0 bytes after a block of size 9 alloc'd
==3829==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==3829==    by 0x40281C: strcat_ex (answer03.c:25)
==3829==    by 0x402B26: implode (answer03.c:81)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829== 
==3829== Invalid read of size 1
==3829==    at 0x4A07F64: strlen (mc_replace_strmem.c:403)
==3829==    by 0x402780: strcat_ex (answer03.c:13)
==3829==    by 0x402B0B: implode (answer03.c:80)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829==  Address 0x4c3c4f9 is 0 bytes after a block of size 9 alloc'd
==3829==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==3829==    by 0x40281C: strcat_ex (answer03.c:25)
==3829==    by 0x402B26: implode (answer03.c:81)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829== 
==3829== Invalid read of size 1
==3829==    at 0x4A07C34: strcat (mc_replace_strmem.c:267)
==3829==    by 0x4028AA: strcat_ex (answer03.c:36)
==3829==    by 0x402B0B: implode (answer03.c:80)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829==  Address 0x4c3c4f9 is 0 bytes after a block of size 9 alloc'd
==3829==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==3829==    by 0x40281C: strcat_ex (answer03.c:25)
==3829==    by 0x402B26: implode (answer03.c:81)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829== 
==3829== Invalid write of size 1
==3829==    at 0x4A07C4C: strcat (mc_replace_strmem.c:267)
==3829==    by 0x4028AA: strcat_ex (answer03.c:36)
==3829==    by 0x402B0B: implode (answer03.c:80)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829==  Address 0x4c3c4f9 is 0 bytes after a block of size 9 alloc'd
==3829==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==3829==    by 0x40281C: strcat_ex (answer03.c:25)
==3829==    by 0x402B26: implode (answer03.c:81)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829== 
==3829== Invalid write of size 1
==3829==    at 0x4A07C5F: strcat (mc_replace_strmem.c:267)
==3829==    by 0x4028AA: strcat_ex (answer03.c:36)
==3829==    by 0x402B0B: implode (answer03.c:80)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829==  Address 0x4c3c4fa is 1 bytes after a block of size 9 alloc'd
==3829==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==3829==    by 0x40281C: strcat_ex (answer03.c:25)
==3829==    by 0x402B26: implode (answer03.c:81)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829== 
==3829== Invalid read of size 1
==3829==    at 0x4A07F64: strlen (mc_replace_strmem.c:403)
==3829==    by 0x402780: strcat_ex (answer03.c:13)
==3829==    by 0x402B26: implode (answer03.c:81)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829==  Address 0x4c3c4f9 is 0 bytes after a block of size 9 alloc'd
==3829==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==3829==    by 0x40281C: strcat_ex (answer03.c:25)
==3829==    by 0x402B26: implode (answer03.c:81)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829== 
==3829== Invalid read of size 1
==3829==    at 0x4A07C34: strcat (mc_replace_strmem.c:267)
==3829==    by 0x4028AA: strcat_ex (answer03.c:36)
==3829==    by 0x402B26: implode (answer03.c:81)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829==  Address 0x4c3c4f9 is 0 bytes after a block of size 9 alloc'd
==3829==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==3829==    by 0x40281C: strcat_ex (answer03.c:25)
==3829==    by 0x402B26: implode (answer03.c:81)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829== 
==3829== Invalid write of size 1
==3829==    at 0x4A07C4C: strcat (mc_replace_strmem.c:267)
==3829==    by 0x4028AA: strcat_ex (answer03.c:36)
==3829==    by 0x402B26: implode (answer03.c:81)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829==  Address 0x4c3c4fa is 1 bytes after a block of size 9 alloc'd
==3829==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==3829==    by 0x40281C: strcat_ex (answer03.c:25)
==3829==    by 0x402B26: implode (answer03.c:81)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829== 
==3829== Invalid read of size 8
==3829==    at 0x402B44: implode (answer03.c:83)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829==  Address 0x4c3c070 is 0 bytes after a block of size 48 alloc'd
==3829==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==3829==    by 0x400C93: explode_sol (<stdin>:72)
==3829==    by 0x401BF8: test_implode_XX (<stdin>:395)
==3829==    by 0x402620: main (<stdin>:588)
==3829== 
==3829== Invalid read of size 1
==3829==    at 0x4A07F52: strlen (mc_replace_strmem.c:403)
==3829==    by 0x40275C: strcat_ex (answer03.c:11)
==3829==    by 0x402B59: implode (answer03.c:83)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3829== 
==3829== 
==3829== Process terminating with default action of signal 11 (SIGSEGV)
==3829==  Access not within mapped region at address 0x0
==3829==    at 0x4A07F52: strlen (mc_replace_strmem.c:403)
==3829==    by 0x40275C: strcat_ex (answer03.c:11)
==3829==    by 0x402B59: implode (answer03.c:83)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829==  If you believe this happened as a result of a stack
==3829==  overflow in your program's main thread (unlikely but
==3829==  possible), you can try to increase the size of the
==3829==  main thread stack using the --main-stacksize= flag.
==3829==  The main thread stack size used in this run was 10485760.
==3829== 
==3829== HEAP SUMMARY:
==3829==     in use at exit: 148 bytes in 10 blocks
==3829==   total heap usage: 15 allocs, 5 frees, 177 bytes allocated
==3829== 
==3829== Searching for pointers to 10 not-freed blocks
==3829== Checked 64,880 bytes
==3829== 
==3829== LEAK SUMMARY:
==3829==    definitely lost: 0 bytes in 0 blocks
==3829==    indirectly lost: 0 bytes in 0 blocks
==3829==      possibly lost: 0 bytes in 0 blocks
==3829==    still reachable: 148 bytes in 10 blocks
==3829==         suppressed: 0 bytes in 0 blocks
==3829== Reachable blocks (those to which a pointer was found) are not shown.
==3829== To see them, rerun with: --leak-check=full --show-reachable=yes
==3829== 
==3829== Use --track-origins=yes to see where uninitialised values come from
==3829== ERROR SUMMARY: 122 errors from 13 contexts (suppressed: 6 from 6)
==3829== 
==3829== 1 errors in context 1 of 13:
==3829== Invalid read of size 1
==3829==    at 0x4A07F52: strlen (mc_replace_strmem.c:403)
==3829==    by 0x40275C: strcat_ex (answer03.c:11)
==3829==    by 0x402B59: implode (answer03.c:83)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3829== 
==3829== 
==3829== 1 errors in context 2 of 13:
==3829== Invalid read of size 8
==3829==    at 0x402B44: implode (answer03.c:83)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829==  Address 0x4c3c070 is 0 bytes after a block of size 48 alloc'd
==3829==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==3829==    by 0x400C93: explode_sol (<stdin>:72)
==3829==    by 0x401BF8: test_implode_XX (<stdin>:395)
==3829==    by 0x402620: main (<stdin>:588)
==3829== 
==3829== 
==3829== 1 errors in context 3 of 13:
==3829== Conditional jump or move depends on uninitialised value(s)
==3829==    at 0x4A07F9F: strcpy (mc_replace_strmem.c:442)
==3829==    by 0x402840: strcat_ex (answer03.c:27)
==3829==    by 0x402B0B: implode (answer03.c:80)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829== 
==3829== 
==3829== 1 errors in context 4 of 13:
==3829== Conditional jump or move depends on uninitialised value(s)
==3829==    at 0x4A07F59: strlen (mc_replace_strmem.c:403)
==3829==    by 0x4027FA: strcat_ex (answer03.c:25)
==3829==    by 0x402B0B: implode (answer03.c:80)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829== 
==3829== 
==3829== 1 errors in context 5 of 13:
==3829== Conditional jump or move depends on uninitialised value(s)
==3829==    at 0x4A07F59: strlen (mc_replace_strmem.c:403)
==3829==    by 0x402780: strcat_ex (answer03.c:13)
==3829==    by 0x402B0B: implode (answer03.c:80)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829== 
==3829== 
==3829== 4 errors in context 6 of 13:
==3829== Invalid write of size 1
==3829==    at 0x4A07C5F: strcat (mc_replace_strmem.c:267)
==3829==    by 0x4028AA: strcat_ex (answer03.c:36)
==3829==    by 0x402B0B: implode (answer03.c:80)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829==  Address 0x4c3c4fa is 1 bytes after a block of size 9 alloc'd
==3829==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==3829==    by 0x40281C: strcat_ex (answer03.c:25)
==3829==    by 0x402B26: implode (answer03.c:81)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829== 
==3829== 
==3829== 4 errors in context 7 of 13:
==3829== Invalid write of size 1
==3829==    at 0x4A07C4C: strcat (mc_replace_strmem.c:267)
==3829==    by 0x4028AA: strcat_ex (answer03.c:36)
==3829==    by 0x402B0B: implode (answer03.c:80)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829==  Address 0x4c3c4f9 is 0 bytes after a block of size 9 alloc'd
==3829==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==3829==    by 0x40281C: strcat_ex (answer03.c:25)
==3829==    by 0x402B26: implode (answer03.c:81)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829== 
==3829== 
==3829== 5 errors in context 8 of 13:
==3829== Invalid write of size 1
==3829==    at 0x4A07C5F: strcat (mc_replace_strmem.c:267)
==3829==    by 0x4028AA: strcat_ex (answer03.c:36)
==3829==    by 0x402B26: implode (answer03.c:81)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829==  Address 0x4c3c4f9 is 0 bytes after a block of size 9 alloc'd
==3829==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==3829==    by 0x40281C: strcat_ex (answer03.c:25)
==3829==    by 0x402B26: implode (answer03.c:81)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829== 
==3829== 
==3829== 8 errors in context 9 of 13:
==3829== Invalid write of size 1
==3829==    at 0x4A07C4C: strcat (mc_replace_strmem.c:267)
==3829==    by 0x4028AA: strcat_ex (answer03.c:36)
==3829==    by 0x402B26: implode (answer03.c:81)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829==  Address 0x4c3c4fa is 1 bytes after a block of size 9 alloc'd
==3829==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==3829==    by 0x40281C: strcat_ex (answer03.c:25)
==3829==    by 0x402B26: implode (answer03.c:81)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829== 
==3829== 
==3829== 22 errors in context 10 of 13:
==3829== Invalid read of size 1
==3829==    at 0x4A07C34: strcat (mc_replace_strmem.c:267)
==3829==    by 0x4028AA: strcat_ex (answer03.c:36)
==3829==    by 0x402B0B: implode (answer03.c:80)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829==  Address 0x4c3c4f9 is 0 bytes after a block of size 9 alloc'd
==3829==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==3829==    by 0x40281C: strcat_ex (answer03.c:25)
==3829==    by 0x402B26: implode (answer03.c:81)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829== 
==3829== 
==3829== 22 errors in context 11 of 13:
==3829== Invalid read of size 1
==3829==    at 0x4A07F64: strlen (mc_replace_strmem.c:403)
==3829==    by 0x402780: strcat_ex (answer03.c:13)
==3829==    by 0x402B0B: implode (answer03.c:80)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829==  Address 0x4c3c4f9 is 0 bytes after a block of size 9 alloc'd
==3829==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==3829==    by 0x40281C: strcat_ex (answer03.c:25)
==3829==    by 0x402B26: implode (answer03.c:81)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829== 
==3829== 
==3829== 26 errors in context 12 of 13:
==3829== Invalid read of size 1
==3829==    at 0x4A07C34: strcat (mc_replace_strmem.c:267)
==3829==    by 0x4028AA: strcat_ex (answer03.c:36)
==3829==    by 0x402B26: implode (answer03.c:81)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829==  Address 0x4c3c4f9 is 0 bytes after a block of size 9 alloc'd
==3829==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==3829==    by 0x40281C: strcat_ex (answer03.c:25)
==3829==    by 0x402B26: implode (answer03.c:81)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829== 
==3829== 
==3829== 26 errors in context 13 of 13:
==3829== Invalid read of size 1
==3829==    at 0x4A07F64: strlen (mc_replace_strmem.c:403)
==3829==    by 0x402780: strcat_ex (answer03.c:13)
==3829==    by 0x402B26: implode (answer03.c:81)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829==  Address 0x4c3c4f9 is 0 bytes after a block of size 9 alloc'd
==3829==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==3829==    by 0x40281C: strcat_ex (answer03.c:25)
==3829==    by 0x402B26: implode (answer03.c:81)
==3829==    by 0x401D46: test_implode_XX (<stdin>:413)
==3829==    by 0x402620: main (<stdin>:588)
==3829== 
--3829-- 
--3829-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--3829-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==3829== 
==3829== ERROR SUMMARY: 122 errors from 13 contexts (suppressed: 6 from 6)

test 23 :: sortStringArray(...)

   int len = 3
   char * * strArr = malloc(len * sizeof(char*));
   strArr[0] = strdup("lady");
   strArr[1] = strdup("beatle");
   strArr[2] = strdup("brew");
   sortStringArray(strArr, len);
   // strArr[0] is "beatle"
   // strArr[1] is "brew"
   // strArr[2] is "lady"
   (pass.)

test 24 :: sortStringArray(...)

   int len = 1
   char * * strArr = malloc(len * sizeof(char*));
   strArr[0] = strdup("");
   sortStringArray(strArr, len);
   // strArr[0] is ""
   (pass.)

test 25 :: sortStringArray(...)

   int len = 35
   char * * strArr = malloc(len * sizeof(char*));
   strArr[0] = strdup("Twas brillig, and the slithy toves");
   strArr[1] = strdup("Did gyre and gimble in the wabe:");
   strArr[2] = strdup("All mimsy were the borogoves,");
   strArr[3] = strdup("And the mome raths outgrabe.");
   strArr[4] = strdup("");
   strArr[5] = strdup("Beware the Jabberwock, my son!");
   strArr[6] = strdup("The jaws that bite, the claws that catch!");
   strArr[7] = strdup("Beware the Jubjub bird, and shun");
   strArr[8] = strdup("The frumious Bandersnatch!");
   strArr[9] = strdup("");
   strArr[10] = strdup("He took his vorpal sword in hand:");
   strArr[11] = strdup("Long time the manxome foe he sought --");
   strArr[12] = strdup("So rested he by the Tumtum tree,");
   strArr[13] = strdup("And stood awhile in thought.");
   strArr[14] = strdup("");
   strArr[15] = strdup("And, as in uffish thought he stood,");
   strArr[16] = strdup("The Jabberwock, with eyes of flame,");
   strArr[17] = strdup("Came whiffling through the tulgey wood,");
   strArr[18] = strdup("And burbled as it came!");
   strArr[19] = strdup("");
   strArr[20] = strdup("One, two! One, two! And through and through");
   strArr[21] = strdup("The vorpal blade went snicker-snack!");
   strArr[22] = strdup("He left it dead, and with its head");
   strArr[23] = strdup("He went galumphing back.");
   strArr[24] = strdup("");
   strArr[25] = strdup("And, has thou slain the Jabberwock?");
   strArr[26] = strdup("Come to my arms, my beamish boy!");
   strArr[27] = strdup("O frabjous day! Callooh! Callay!");
   strArr[28] = strdup("He chortled in his joy.");
   strArr[29] = strdup("");
   strArr[30] = strdup("Twas brillig, and the slithy toves");
   strArr[31] = strdup("Did gyre and gimble in the wabe;");
   strArr[32] = strdup("All mimsy were the borogoves,");
   strArr[33] = strdup("And the mome raths outgrabe.");
   strArr[34] = strdup("");
   sortStringArray(strArr, len);
   // strArr[0] is ""
   // strArr[1] is ""
   // strArr[2] is ""
   // strArr[3] is ""
   // strArr[4] is ""
   // strArr[5] is ""
   // strArr[6] is ""
   // strArr[7] is "All mimsy were the borogoves,"
   // strArr[8] is "All mimsy were the borogoves,"
   // strArr[9] is "And burbled as it came!"
   // strArr[10] is "And stood awhile in thought."
   // strArr[11] is "And the mome raths outgrabe."
   // strArr[12] is "And the mome raths outgrabe."
   // strArr[13] is "And, as in uffish thought he stood,"
   // strArr[14] is "And, has thou slain the Jabberwock?"
   // strArr[15] is "Beware the Jabberwock, my son!"
   // strArr[16] is "Beware the Jubjub bird, and shun"
   // strArr[17] is "Came whiffling through the tulgey wood,"
   // strArr[18] is "Come to my arms, my beamish boy!"
   // strArr[19] is "Did gyre and gimble in the wabe:"
   // strArr[20] is "Did gyre and gimble in the wabe;"
   // strArr[21] is "He chortled in his joy."
   // strArr[22] is "He left it dead, and with its head"
   // strArr[23] is "He took his vorpal sword in hand:"
   // strArr[24] is "He went galumphing back."
   // strArr[25] is "Long time the manxome foe he sought --"
   // strArr[26] is "O frabjous day! Callooh! Callay!"
   // strArr[27] is "One, two! One, two! And through and through"
   // strArr[28] is "So rested he by the Tumtum tree,"
   // strArr[29] is "The Jabberwock, with eyes of flame,"
   // strArr[30] is "The frumious Bandersnatch!"
   // strArr[31] is "The jaws that bite, the claws that catch!"
   // strArr[32] is "The vorpal blade went snicker-snack!"
   // strArr[33] is "Twas brillig, and the slithy toves"
   // strArr[34] is "Twas brillig, and the slithy toves"
   (pass.)

test 26 :: sortStringCharacters(...)

   char * s1 = strdup("The more that you read, the more things you will know. The more that you learn, the more places you\'ll go.");
   sortStringCharacters(s1)
   // s1 is now "                    \',,..TTaaaaacdeeeeeeeeeeegghhhhhhhiikllllllmmmmnnnooooooooooprrrrrrsstttttttuuuuwwyyyy"

test 27 :: sortStringCharacters(...)

   char * s1 = strdup("How did it get so late so soon?");
   sortStringCharacters(s1)
   // s1 is now "       ?Haddeegiilnooooossstttw"

test 28 :: sortStringCharacters(...)

   char * s1 = strdup("Twas brillig, and the slithy toves\nDid gyre and gimble in the wabe:\nAll mimsy were the borogoves,\nAnd the mome raths outgrabe.\n\nBeware the Jabberwock, my son!\nThe jaws that bite, the claws that catch!\nBeware the Jubjub bird, and shun\nThe frumious Bandersnatch!\n\nHe took his vorpal sword in hand:\nLong time the manxome foe he sought --\nSo rested he by the Tumtum tree,\nAnd stood awhile in thought.\n\nAnd, as in uffish thought he stood,\nThe Jabberwock, with eyes of flame,\nCame whiffling through the tulgey wood,\nAnd burbled as it came!\n\nOne, two! One, two! And through and through\nThe vorpal blade went snicker-snack!\nHe left it dead, and with its head\nHe went galumphing back.\n\nAnd, has thou slain the Jabberwock?\nCome to my arms, my beamish boy!\nO frabjous day! Callooh! Callay!\nHe chortled in his joy.\n\nTwas brillig, and the slithy toves\nDid gyre and gimble in the wabe;\nAll mimsy were the borogoves,\nAnd the mome raths outgrabe.\n");
   sortStringCharacters(s1)
   // s1 is now "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                                                                                                           !!!!!!!!!!!,,,,,,,,,,,,,,,,,,---.....::;?AAAAAAAAABBBCCCCDDHHHHJJJJLOOOSTTTTTTTaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbccccccccccccdddddddddddddddddddddddddddddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeffffffffffggggggggggggggggggggghhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiijjjjkkkkkkklllllllllllllllllllllllllllllmmmmmmmmmmmmmmmmmmmmmmmmmmnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnooooooooooooooooooooooooooooooooooooooooooooooooooppprrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrssssssssssssssssssssssssssssssssssssstttttttttttttttttttttttttttttttttttttttttttttttttttttttttttuuuuuuuuuuuuuuuuuuuuuvvvvvvwwwwwwwwwwwwwwwwwwwwwwwxyyyyyyyyyyyyyyyy"

test 29 :: sortStringCharacters(...)

   char * s1 = strdup("");
   sortStringCharacters(s1)
   // s1 is now ""

test 30 :: destroyStringArray(...)

   int len = 3
   char * * strArr = malloc(len * sizeof(char*));
   strArr[0] = strdup("lady");
   strArr[1] = strdup("beatle");
   strArr[2] = strdup("brew");
   destroyStringArray(strArr, len);
   // Pass conditional on no memory errors

test 31 :: destroyStringArray(...)

   int len = 1
   char * * strArr = malloc(len * sizeof(char*));
   strArr[0] = strdup("");
   destroyStringArray(strArr, len);
   // Pass conditional on no memory errors

test 32 :: destroyStringArray(...)

   destroyStringArray(NULL, 0);
   // Pass conditional on no memory errors


10/32 testcases passed.
Overall mark is a FAIL.
