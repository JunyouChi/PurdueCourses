set <- c(1, 2, 6, 10)
for(i in set) {
n <- i
data.vec <- rnorm(SRS*n,mean=0,sd=1)
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from Normal Distribution", freq = FALSE, main=sprintf("Histogram for Normal, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
# E
SRS <- 1000
set <- c(1, 5, 10, 20, 30, 40 ,50)
for(i in set) {
attach(mtcars)
par(mfrow=c(1,2))
n <- i
data.vec <- rexp(SRS*n,1/2) #creates the random data
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from exponential Distribution", freq = FALSE, main=sprintf("Histogram for exponential, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
# E
SRS <- 1000
set <- c(1, 5, 10, 20, 30, 40 ,50)
for(i in set) {
attach(mtcars)                  # two plots in line
par(mfrow=c(1,2))
n <- i
data.vec <- rexp(SRS*n,2) #creates the random data  # lambda
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from exponential Distribution", freq = FALSE, main=sprintf("Histogram for exponential, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
setwd("~/Desktop/Purdue/STAT350_R/STAT350/Labs/Lab7")
mpg=read.table(file="AirlineTaxi_In_Out",header=T)
attach (mpg)
# For the diagnoistics plots, you will need to create the one sample # data which is the difference between the two sets. You will need to # create the histogram, boxplot and QQPlot on this data set
# (code not included)
normaltest = avgTaxiOut - avgTaxiIn
#t.test (x,y,conf.level=C, mu = mu0, paired=TRUE, alternative="value") # is used for confidence intervals and hypothesis tests
# conf.level = C = 1 - alpha
setwd("~/Desktop/Purdue/STAT350_R/STAT350/Labs/Lab7")
mpg=read.table(file="AirlineTaxi_In_Out",header=T)
attach (mpg)
# For the diagnoistics plots, you will need to create the one sample # data which is the difference between the two sets. You will need to # create the histogram, boxplot and QQPlot on this data set
setwd("~/Desktop/Purdue/STAT350_R/STAT350/Labs/Lab7")
mpg=read.table(file="AirlineTaxi_In_Out",header=T)
setwd("~/Desktop/Purdue/STAT350_R/STAT350/Labs/Lab7")
mpg=read.table(file="AirlineTaxi_In_Out.txt",header=T)
attach (mpg)
# For the diagnoistics plots, you will need to create the one sample # data which is the difference between the two sets. You will need to # create the histogram, boxplot and QQPlot on this data set
# (code not included)
normaltest = avgTaxiOut - avgTaxiIn
#t.test (x,y,conf.level=C, mu = mu0, paired=TRUE, alternative="value") # is used for confidence intervals and hypothesis tests
# conf.level = C = 1 - alpha
# for the hypothesis test. mu is mu_0
#  paired = TRUE (2-sample paired)
# The pairing will be x ??? y
# alternative = "greater" or "less" or "two.sided" (this is the
#  for two-sample independent ONLY appropriate alternative hypothesis)
t.test(avgTaxiOut,avgTaxiIn, mu=0,conf.level=0.95,paired = TRUE, alternative = "two.sided")
# Information required for f
std = sd(normaltest)
size = length(avgTaxiOut)
se = std/sqrt(size)
CHICAGO=read.table(file="airline_cleaned.txt",header=T)
studynew <- subset(CHICAGO, Origin=="ORD" | Origin == "MDW")
attach(studynew)
# Note: it is required that you have two curves (red and blue) on the
# histogram and the line on the normal quantile plot as done by the
#   code below.
library(lattice)
histogram(~SSHA | Origin, layout=c(1,2),type="density", panel=function(x)
{
panel.histogram(x)
panel.mathdensity(dmath=dnorm,col="blue",lwd=2,args=list(mean=mean(x, na.rm=T), sd = sd(x,na.rm=T)))
panel.densityplot(x,col="red",lwd=2)
})
bwplot(~SSHA | Origin, layout = c(1, 2), pch = "|") #Boxplots side-by-side
})
bwplot(~SSHA | Origin, layout = c(1, 2), pch = "|") #Boxplots side-by-side
library(lattice)
histogram(~SSHA | Origin, layout=c(1,2),type="density", panel=function(x)
{
panel.histogram(x)
panel.mathdensity(dmath=dnorm,col="blue",lwd=2,args=list(mean=mean(x, na.rm=T), sd = sd(x,na.rm=T)))
panel.densityplot(x,col="red",lwd=2)
})
library(lattice)
histogram(~SSHA | Origin, layout=c(1,2),type="density", panel=function(x)
{panel.histogram(x)
panel.mathdensity(dmath=dnorm,col="blue",lwd=2,args=list(mean=mean(x, na.rm=T), sd = sd(x,na.rm=T)))
panel.densityplot(x,col="red",lwd=2)})
bwplot(~SSHA | Origin, layout = c(1, 2), pch = "|") #Boxplots side-by-side
library(lattice)
histogram(~SSHA | Origin, layout=c(1,2),type="density", panel=function(x)
{panel.histogram(x)
panel.mathdensity(dmath=dnorm,col="blue",lwd=2,args=list(mean=mean(x, na.rm=T), sd = sd(x,na.rm=T)))
panel.densityplot(x,col="red",lwd=2)
})
bwplot(~SSHA | Origin, layout = c(1, 2), pch = "|") #Boxplots side-by-side
qqmath(~SSHA| Origin, data = studynew, panel = function(x){
panel.qqmath(x)
panel.qqmathline(x)
})
# t test:
#t.test (qual ~ categories,conf.level=C, mu = mu0, paired=FALSE,
#alternative="value", var.equal = FALSE)
#is used for confidence intervals and hypothesis tests
#the qualitative variable is first, the variable with the groups in it is second.
#The difference is in first alphabetically â€“ second alphabetically
#  conf.level = C = 1 - alpha
#  for the hypothesis test. mu is mu_0
#  paired = FALSE (2 - sample independent)
#alternative = "greater" or "less" or "two.sided" (this is the appropriate alternative hypothesis)
#var.equal = FALSE (the variances are not equal, R calls
#                   the Satterthwaite approximation the Welch approximation)
t.test(SSHA ~ Origin, studynew, mu=0, conf.level=0.99,paired=FALSE, alternative = "less",var.equal=F)
# Information required for f
stdmen = sd(subset(studynew,Origin == "ORD")$SSHA)
sizemen = length(subset(studynew,Origin == "ORD")$SSHA)
stdwomen = sd(subset(studynew,Origin == "MDW")$SSHA)
sizewomen = length(subset(studynew,Origin == "MDW")$SSHA)
se = sqrt(stdmen^2/sizemen + stdwomen^2/sizewomen)
CHICAGO=read.table(file="airline_cleaned.txt",header=T)
studynew <- subset(CHICAGO, Origin=="ORD" | Origin == "MDW")
attach(studynew)
# Note: it is required that you have two curves (red and blue) on the
# histogram and the line on the normal quantile plot as done by the
#   code below.
library(lattice)
histogram(~SSHA | Origin, layout=c(1,2),type="density", panel=function(x)
})
bwplot(~SSHA | Origin, layout = c(1, 2), pch = "|") #Boxplots side-by-side
qqmath(~SSHA| Origin, data = studynew, panel = function(x){
panel.qqmath(x)
panel.qqmathline(x)
})
# t test:
#t.test (qual ~ categories,conf.level=C, mu = mu0, paired=FALSE,
#alternative="value", var.equal = FALSE)
#is used for confidence intervals and hypothesis tests
#the qualitative variable is first, the variable with the groups in it is second.
#The difference is in first alphabetically â€“ second alphabetically
#  conf.level = C = 1 - alpha
#  for the hypothesis test. mu is mu_0
#  paired = FALSE (2 - sample independent)
#alternative = "greater" or "less" or "two.sided" (this is the appropriate alternative hypothesis)
#var.equal = FALSE (the variances are not equal, R calls
#                   the Satterthwaite approximation the Welch approximation)
t.test(SSHA ~ Origin, studynew, mu=0, conf.level=0.99,paired=FALSE, alternative = "less",var.equal=F)
# Information required for f
stdmen = sd(subset(studynew,Origin == "ORD")$SSHA)
sizemen = length(subset(studynew,Origin == "ORD")$SSHA)
stdwomen = sd(subset(studynew,Origin == "MDW")$SSHA)
sizewomen = length(subset(studynew,Origin == "MDW")$SSHA)
se = sqrt(stdmen^2/sizemen + stdwomen^2/sizewomen)
study=read.table(file="studyhabits.txt",header=T)
studynew <- subset(study, Sex=="Men" | Sex == "Women")
attach(studynew)
# Note: it is required that you have two curves (red and blue) on the
# histogram and the line on the normal quantile plot as done by the
#   code below.
library(lattice)
histogram(~SSHA | Sex, layout=c(1,2),type="density", panel=function(x)
{
panel.histogram(x)
panel.mathdensity(dmath=dnorm,col="blue",lwd=2,args=list(mean=mean(x, na.rm=T), sd = sd(x,na.rm=T)))
panel.densityplot(x,col="red",lwd=2)
})
bwplot(~SSHA | Sex, layout = c(1, 2), pch = "|") #Boxplots side-by-side
qqmath(~SSHA| Sex, data = study, panel = function(x){
panel.qqmath(x)
panel.qqmathline(x)
})
t.test(SSHA ~ Sex, study, mu=0, conf.level=0.99,paired=FALSE, alternative = "less",var.equal=F)
# Information required for f
stdmen = sd(subset(study,Sex == "Men")$SSHA)
sizemen = length(subset(study,Sex == "Men")$SSHA)
stdwomen = sd(subset(study,Sex == "Women")$SSHA)
sizewomen = length(subset(study,Sex == "Women")$SSHA)
CHICAGO=read.table(file="airline_cleaned.txt",header=T)
studynew <- subset(CHICAGO, Origin=="ORD" | Origin == "MDW")
attach(studynew)
# Note: it is required that you have two curves (red and blue) on the
# histogram and the line on the normal quantile plot as done by the
#   code below.
library(lattice)
histogram(~DepDelay | Origin, layout=c(1,2),type="density", panel=function(x)
{panel.histogram(x)
panel.mathdensity(dmath=dnorm,col="blue",lwd=2,args=list(mean=mean(x, na.rm=T), sd = sd(x,na.rm=T)))
panel.densityplot(x,col="red",lwd=2)
})
bwplot(~DepDelay | Origin, layout = c(1, 2), pch = "|") #Boxplots side-by-side
qqmath(~DepDelay| Origin, data = studynew, panel = function(x){
panel.qqmath(x)
panel.qqmathline(x)
})
# t test:
#t.test (qual ~ categories,conf.level=C, mu = mu0, paired=FALSE,
#alternative="value", var.equal = FALSE)
#is used for confidence intervals and hypothesis tests
#the qualitative variable is first, the variable with the groups in it is second.
#The difference is in first alphabetically â€“ second alphabetically
#  conf.level = C = 1 - alpha
#  for the hypothesis test. mu is mu_0
#  paired = FALSE (2 - sample independent)
#alternative = "greater" or "less" or "two.sided" (this is the appropriate alternative hypothesis)
#var.equal = FALSE (the variances are not equal, R calls
#                   the Satterthwaite approximation the Welch approximation)
t.test(DepDelay ~ Origin, studynew, mu=0, conf.level=0.99,paired=FALSE, alternative = "less",var.equal=F)
# Information required for f
stdmen = sd(subset(studynew,Origin == "ORD")$DepDelay)
sizemen = length(subset(studynew,Origin == "ORD")$DepDelay)
stdwomen = sd(subset(studynew,Origin == "MDW")$DepDelay)
sizewomen = length(subset(studynew,Origin == "MDW")$DepDelay)
se = sqrt(stdmen^2/sizemen + stdwomen^2/sizewomen)
CHICAGO=read.table(file="airline_cleaned.txt",header=T)
studynew <- subset(CHICAGO, Origin=="ORD" | Origin == "MDW")
attach(studynew)
# Note: it is required that you have two curves (red and blue) on the
# histogram and the line on the normal quantile plot as done by the
#   code below.
library(lattice)
histogram(~DepDelay | Origin, layout=c(1,2),type="density", panel=function(x)
{panel.histogram(x)
panel.mathdensity(dmath=dnorm,col="blue",lwd=2,args=list(mean=mean(x, na.rm=T), sd = sd(x,na.rm=T)))
panel.densityplot(x,col="red",lwd=2)
})
bwplot(~DepDelay | Origin, layout = c(1, 2), pch = "|") #Boxplots side-by-side
qqmath(~DepDelay| Origin, data = studynew, panel = function(x){
panel.qqmath(x)
panel.qqmathline(x)
})
# Note: it is required that you have two curves (red and blue) on the
# histogram and the line on the normal quantile plot as done by the
#   code below.
library(lattice)
histogram(~DepDelay | Origin, layout=c(1,2),type="density", panel=function(x)
{panel.histogram(x)
panel.mathdensity(dmath=dnorm,col="blue",lwd=2,args=list(mean=mean(x, na.rm=T), sd = sd(x,na.rm=T)))
panel.densityplot(x,col="red",lwd=2)
})
bwplot(~DepDelay | Origin, layout = c(1, 2), pch = "|") #Boxplots side-by-side
#  conf.level = C = 1 - alpha
})
bwplot(~DepDelay | Origin, layout = c(1, 2), pch = "|") #Boxplots side-by-side
qqmath(~DepDelay| Origin, data = studynew, panel = function(x){
panel.qqmath(x)
panel.qqmathline(x)
})
#alternative="value", var.equal = FALSE)
#is used for confidence intervals and hypothesis tests
#the qualitative variable is first, the variable with the groups in it is second.
#The difference is in first alphabetically â€“ second alphabetically
#  conf.level = C = 1 - alpha
#  for the hypothesis test. mu is mu_0
#  paired = FALSE (2 - sample independent)
#alternative = "greater" or "less" or "two.sided" (this is the appropriate alternative hypothesis)
#var.equal = FALSE (the variances are not equal, R calls
#                   the Satterthwaite approximation the Welch approximation)
t.test(DepDelay ~ Origin, studynew, mu=0, conf.level=0.99,paired=FALSE, alternative = "less",var.equal=F)
# Information required for f
stdmen = sd(subset(studynew,Origin == "ORD")$DepDelay)
sizemen = length(subset(studynew,Origin == "ORD")$DepDelay)
stdwomen = sd(subset(studynew,Origin == "MDW")$DepDelay)
sizewomen = length(subset(studynew,Origin == "MDW")$DepDelay)
se = sqrt(stdmen^2/sizemen + stdwomen^2/sizewomen)
#   code below.
library(lattice)
Depdelay = log(DepDelay)
histogram(~DepDelay | Origin, layout=c(1,2),type="density", panel=function(x)
library(lattice)
Depdelay = log(abs(DepDelay)
library(lattice)
Depdelay = log(abs(DepDelay))
histogram(~DepDelay | Origin, layout=c(1,2),type="density", panel=function(x)
{panel.histogram(x)
panel.mathdensity(dmath=dnorm,col="blue",lwd=2,args=list(mean=mean(x, na.rm=T), sd = sd(x,na.rm=T)))
panel.densityplot(x,col="red",lwd=2)
})
bwplot(~DepDelay | Origin, layout = c(1, 2), pch = "|") #Boxplots side-by-side
qqmath(~DepDelay| Origin, data = studynew, panel = function(x){
panel.qqmath(x)
panel.qqmathline(x)
})
#   code below.
library(lattice)
Depdelay = log(abs(DepDelay))
histogram(~DepDelay | Origin, layout=c(1,2),type="density", panel=function(x)
{panel.histogram(x)
panel.mathdensity(dmath=dnorm,col="blue",lwd=2,args=list(mean=mean(x, na.rm=T), sd = sd(x,na.rm=T)))
panel.densityplot(x,col="red",lwd=2)
})
bwplot(~DepDelay | Origin, layout = c(1, 2), pch = "|") #Boxplots side-by-side
qqmath(~DepDelay| Origin, data = studynew, panel = function(x){
panel.qqmath(x)
panel.qqmathline(x)
})
# t test:
#t.test (qual ~ categories,conf.level=C, mu = mu0, paired=FALSE,
#alternative="value", var.equal = FALSE)
#is used for confidence intervals and hypothesis tests
#the qualitative variable is first, the variable with the groups in it is second.
#The difference is in first alphabetically â€“ second alphabetically
#  conf.level = C = 1 - alpha
#  for the hypothesis test. mu is mu_0
#  paired = FALSE (2 - sample independent)
#alternative = "greater" or "less" or "two.sided" (this is the appropriate alternative hypothesis)
#var.equal = FALSE (the variances are not equal, R calls
#                   the Satterthwaite approximation the Welch approximation)
t.test(DepDelay ~ Origin, studynew, mu=0, conf.level=0.99,paired=FALSE, alternative = "less",var.equal=F)
# Information required for f
stdmen = sd(subset(studynew,Origin == "ORD")$DepDelay)
sizemen = length(subset(studynew,Origin == "ORD")$DepDelay)
stdwomen = sd(subset(studynew,Origin == "MDW")$DepDelay)
sizewomen = length(subset(studynew,Origin == "MDW")$DepDelay)
se = sqrt(stdmen^2/sizemen + stdwomen^2/sizewomen)
CHICAGO=read.table(file="airline_cleaned.txt",header=T)
studynew <- subset(CHICAGO, Origin=="ORD" | Origin == "MDW")
attach(studynew)
# Note: it is required that you have two curves (red and blue) on the
# histogram and the line on the normal quantile plot as done by the
#   code below.
library(lattice)
Depdelay = log(abs(DepDelay))
histogram(~DepDelay | Origin, layout=c(1,2),type="density", panel=function(x)
{panel.histogram(x)
panel.mathdensity(dmath=dnorm,col="blue",lwd=2,args=list(mean=mean(x, na.rm=T), sd = sd(x,na.rm=T)))
panel.densityplot(x,col="red",lwd=2)
})
bwplot(~DepDelay | Origin, layout = c(1, 2), pch = "|") #Boxplots side-by-side
#   code below.
library(lattice)
Depdelay = log(abs(DepDelay))
attach(studynew)
# Note: it is required that you have two curves (red and blue) on the
# histogram and the line on the normal quantile plot as done by the
#   code below.
library(lattice)
studynew$Depdelay = log(abs(DepDelay))
histogram(~DepDelay | Origin, layout=c(1,2),type="density", panel=function(x)
{panel.histogram(x)
panel.mathdensity(dmath=dnorm,col="blue",lwd=2,args=list(mean=mean(x, na.rm=T), sd = sd(x,na.rm=T)))
panel.densityplot(x,col="red",lwd=2)
})
bwplot(~DepDelay | Origin, layout = c(1, 2), pch = "|") #Boxplots side-by-side
qqmath(~DepDelay| Origin, data = studynew, panel = function(x){
panel.qqmath(x)
panel.qqmathline(x)
})
studynew$Depdelay = log(abs(DepDelay))
histogram(~log(abs(DepDelay)) | Origin, layout=c(1,2),type="density", panel=function(x)
attach(studynew)
# Note: it is required that you have two curves (red and blue) on the
# histogram and the line on the normal quantile plot as done by the
#   code below.
library(lattice)
studynew$Depdelay = log(abs(DepDelay))
histogram(~log(abs(DepDelay)) | Origin, layout=c(1,2),type="density", panel=function(x)
{panel.histogram(x)
panel.mathdensity(dmath=dnorm,col="blue",lwd=2,args=list(mean=mean(x, na.rm=T), sd = sd(x,na.rm=T)))
panel.densityplot(x,col="red",lwd=2)
})
bwplot(~log(abs(DepDelay)) | Origin, layout = c(1, 2), pch = "|") #Boxplots side-by-side
qqmath(~log(abs(DepDelay))| Origin, data = studynew, panel = function(x){
panel.qqmath(x)
panel.qqmathline(x)
})
# t test:
#t.test (qual ~ categories,conf.level=C, mu = mu0, paired=FALSE,
#alternative="value", var.equal = FALSE)
#is used for confidence intervals and hypothesis tests
#the qualitative variable is first, the variable with the groups in it is second.
#The difference is in first alphabetically â€“ second alphabetically
#  conf.level = C = 1 - alpha
#  for the hypothesis test. mu is mu_0
#  paired = FALSE (2 - sample independent)
#alternative = "greater" or "less" or "two.sided" (this is the appropriate alternative hypothesis)
#var.equal = FALSE (the variances are not equal, R calls
#                   the Satterthwaite approximation the Welch approximation)
t.test(log(abs(DepDelay)) ~ Origin, studynew, mu=0, conf.level=0.99,paired=FALSE, alternative = "less",var.equal=F)
# Information required for f
t.test(log(abs(DepDelay)) ~ Origin, studynew, mu=0, conf.level=0.99,paired=FALSE, alternative = "less",var.equal=F)
#  paired = FALSE (2 - sample independent)
#alternative = "greater" or "less" or "two.sided" (this is the appropriate alternative hypothesis)
#var.equal = FALSE (the variances are not equal, R calls
#                   the Satterthwaite approximation the Welch approximation)
t.test(Depdelay ~ Origin, studynew, mu=0, conf.level=0.99,paired=FALSE, alternative = "less",var.equal=F)
# Information required for f
stdmen = sd(subset(studynew,Origin == "ORD")$log(abs(DepDelay)))
#                   the Satterthwaite approximation the Welch approximation)
t.test(Depdelay ~ Origin, studynew, mu=0, conf.level=0.99,paired=FALSE, alternative = "less",var.equal=F)
# t test:
#t.test (qual ~ categories,conf.level=C, mu = mu0, paired=FALSE,
#alternative="value", var.equal = FALSE)
#is used for confidence intervals and hypothesis tests
#the qualitative variable is first, the variable with the groups in it is second.
#The difference is in first alphabetically â€“ second alphabetically
#  conf.level = C = 1 - alpha
#  for the hypothesis test. mu is mu_0
#  paired = FALSE (2 - sample independent)
#alternative = "greater" or "less" or "two.sided" (this is the appropriate alternative hypothesis)
#var.equal = FALSE (the variances are not equal, R calls
#                   the Satterthwaite approximation the Welch approximation)
t.test(Depdelay ~ Origin, studynew, mu=0, conf.level=0.99,paired=FALSE, alternative = "less",var.equal=F)
# Information required for f
stdmen = sd(subset(studynew,Origin == "ORD")$log(abs(DepDelay)))
sizemen = length(subset(studynew,Origin == "ORD")$log(abs(DepDelay)))
stdwomen = sd(subset(studynew,Origin == "MDW")$log(abs(DepDelay)))
sizewomen = length(subset(studynew,Origin == "MDW")$log(abs(DepDelay)))
se = sqrt(stdmen^2/sizemen + stdwomen^2/sizewomen)
CHICAGO=read.table(file="airline_cleaned.txt",header=T)
studynew <- subset(CHICAGO, Origin=="ORD" | Origin == "MDW")
attach(studynew)
# Note: it is required that you have two curves (red and blue) on the
# histogram and the line on the normal quantile plot as done by the
#   code below.
library(lattice)
studynew$Depdelay = log(abs(DepDelay))
histogram(~log(abs(DepDelay)) | Origin, layout=c(1,2),type="density", panel=function(x)
{panel.histogram(x)
panel.mathdensity(dmath=dnorm,col="blue",lwd=2,args=list(mean=mean(x, na.rm=T), sd = sd(x,na.rm=T)))
panel.densityplot(x,col="red",lwd=2)
})
bwplot(~log(abs(DepDelay)) | Origin, layout = c(1, 2), pch = "|") #Boxplots side-by-side
qqmath(~log(abs(DepDelay))| Origin, data = studynew, panel = function(x){
panel.qqmath(x)
panel.qqmathline(x)
})
# t test:
#t.test (qual ~ categories,conf.level=C, mu = mu0, paired=FALSE,
#alternative="value", var.equal = FALSE)
#is used for confidence intervals and hypothesis tests
#the qualitative variable is first, the variable with the groups in it is second.
#The difference is in first alphabetically â€“ second alphabetically
#  conf.level = C = 1 - alpha
#  for the hypothesis test. mu is mu_0
#  paired = FALSE (2 - sample independent)
#alternative = "greater" or "less" or "two.sided" (this is the appropriate alternative hypothesis)
#var.equal = FALSE (the variances are not equal, R calls
#                   the Satterthwaite approximation the Welch approximation)
t.test(Depdelay ~ Origin, studynew, mu=0, conf.level=0.99,paired=FALSE, alternative = "less",var.equal=F)
#   code below.
library(lattice)
{panel.histogram(x)
histogram(~log(abs(DepDelay)) | Origin, layout=c(1,2),type="density", panel=function(x)
panel.mathdensity(dmath=dnorm,col="blue",lwd=2,args=list(mean=mean(x, na.rm=T), sd = sd(x,na.rm=T)))
panel.densityplot(x,col="red",lwd=2)
bwplot(~log(abs(DepDelay)) | Origin, layout = c(1, 2), pch = "|") #Boxplots side-by-side
qqmath(~log(abs(DepDelay))| Origin, data = studynew, panel = function(x){
})
panel.qqmath(x)
panel.qqmathline(x)
})
#alternative="value", var.equal = FALSE)
# t test:
#t.test (qual ~ categories,conf.level=C, mu = mu0, paired=FALSE,
#is used for confidence intervals and hypothesis tests
#the qualitative variable is first, the variable with the groups in it is second.
#  conf.level = C = 1 - alpha
#The difference is in first alphabetically â€“ second alphabetically
#  for the hypothesis test. mu is mu_0
#  paired = FALSE (2 - sample independent)
#alternative = "greater" or "less" or "two.sided" (this is the appropriate alternative hypothesis)
#var.equal = FALSE (the variances are not equal, R calls
sizemen = length(subset(studynew,Origin == "ORD")$log(abs(DepDelay)))
#                   the Satterthwaite approximation the Welch approximation)
stdmen = sd(subset(studynew,Origin == "ORD")$log(abs(DepDelay)))
# Information required for f
t.test(Depdelay ~ Origin, studynew, mu=0, conf.level=0.99,paired=FALSE, alternative = "less",var.equal=F)
stdwomen = sd(subset(studynew,Origin == "MDW")$log(abs(DepDelay)))
se = sqrt(stdmen^2/sizemen + stdwomen^2/sizewomen)
sizewomen = length(subset(studynew,Origin == "MDW")$log(abs(DepDelay)))
