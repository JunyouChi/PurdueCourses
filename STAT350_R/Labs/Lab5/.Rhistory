# A
SRS <- 1000
set <- c(1, 2, 6, 10)
for(i in set) {
attach(mtcars)
par(mfrow=c(1,2))
n <- i
data.vec <- rnorm(SRS*n,mean=0,sd=1)
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from Normal Distribution", freq = FALSE, main=sprintf("Histogram for Normal, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
# A
SRS <- 1000
set <- c(1, 2, 6, 10)
for(i in set) {
attach(mtcars)
par(mfrow=c(1,2))
n <- i
data.vec <- rnorm(SRS*n,mean=0,sd=1)
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from Normal Distribution", freq = FALSE, main=sprintf("Histogram for Normal, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
set <- c(1, 2, 6, 10)
for(i in set) {
attach(mtcars)
par(mfrow=c(1,2))
n <- i
data.vec <- rnorm(SRS*n,mean=0,sd=1)
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from Normal Distribution", freq = FALSE, main=sprintf("Histogram for Normal, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
SRS <- 1000
set <- c(1, 2, 6, 10)
for(i in set) {
attach(mtcars)
par(mfrow=c(1,2))
n <- i
data.vec <- rnorm(SRS*n,mean=0,sd=1)
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from Normal Distribution", freq = FALSE, main=sprintf("Histogram for Normal, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
SRS <- 1000
set <- c(1, 5, 10, 20, 30, 40 ,50)
for(i in set) {
attach(mtcars)
par(mfrow=c(1,2))
n <- i
data.vec <- rexp(SRS*n,2) #creates the random data
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from exponential Distribution", freq = FALSE, main=sprintf("Histogram for exponential, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
# E
SRS <- 1000
set <- c(1, 5, 10, 20, 30, 40 ,50)
for(i in set) {
attach(mtcars)
par(mfrow=c(1,2))
n <- i
data.vec <- rexp(SRS*n,1/2) #creates the random data
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from exponential Distribution", freq = FALSE, main=sprintf("Histogram for exponential, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
}
set <- c(1, 5, 10, 20, 30, 40 ,50)
for(i in set) {
attach(mtcars)
par(mfrow=c(1,2))
n <- i
data.vec <- rexp(SRS*n,1/2) #creates the random data
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from exponential Distribution", freq = FALSE, main=sprintf("Histogram for exponential, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
for(i in set) {
n <- i
data.vec <- rnorm(SRS*n,mean=0,sd=1)
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from Normal Distribution", freq = FALSE, main=sprintf("Histogram for Normal, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
# E
SRS <- 1000
set <- c(1, 2, 6, 10)
for(i in set) {
n <- i
data.vec <- rnorm(SRS*n,mean=0,sd=1)
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from Normal Distribution", freq = FALSE, main=sprintf("Histogram for Normal, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
set <- c(1, 2, 6, 10)
for(i in set) {
attach(mtcars)
par(mfrow=c(1,2))
n <- i
data.vec <- rnorm(SRS*n,mean=0,sd=1)
data.mat <- matrix(data.vec, ncol = n)
for(i in set) {
n <- i
data.vec <- rnorm(SRS*n,mean=0,sd=1)
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from Normal Distribution", freq = FALSE, main=sprintf("Histogram for Normal, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
# E
set <- c(1, 2, 6, 10)
for(i in set) {
attach(mtcars)
par(mfrow=c(1,2))
n <- i
data.vec <- rnorm(SRS*n,mean=0,sd=1)
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from Normal Distribution", freq = FALSE, main=sprintf("Histogram for Normal, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
# E
SRS <- 1000
set <- c(1, 5, 10, 20, 30, 40 ,50)
for(i in set) {
attach(mtcars)
par(mfrow=c(1,2))
n <- i
data.vec <- rexp(SRS*n,1/2) #creates the random data
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from exponential Distribution", freq = FALSE, main=sprintf("Histogram for exponential, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
# A
SRS <- 1000
set <- c(1, 2, 6, 10)
for(i in set) {
attach(mtcars)
par(mfrow=c(1,2))
n <- i
data.vec <- rnorm(SRS*n,mean=0,sd=1)
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from Normal Distribution", freq = FALSE, main=sprintf("Histogram for Normal, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
# A
SRS <- 1000
set <- c(1, 2, 6, 10)
for(i in set) {
attach(mtcars)
par(mfrow=c(1,2))
n <- i
data.vec <- rnorm(SRS*n,mean=0,sd=1)
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from Normal Distribution", freq = FALSE, main=sprintf("Histogram for Normal, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
SRS <- 1000
set <- c(1, 2, 6, 10)
for(i in set) {
n <- i
data.vec <- rnorm(SRS*n,mean=0,sd=1)
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from Normal Distribution", freq = FALSE, main=sprintf("Histogram for Normal, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
# E
SRS <- 1000
set <- c(1, 5, 10, 20, 30, 40 ,50)
for(i in set) {
attach(mtcars)
par(mfrow=c(1,2))
n <- i
data.vec <- rexp(SRS*n,1/2) #creates the random data
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from exponential Distribution", freq = FALSE, main=sprintf("Histogram for exponential, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
# E
SRS <- 1000
set <- c(1, 5, 10, 20, 30, 40 ,50)
for(i in set) {
attach(mtcars)                  # two plots in line
par(mfrow=c(1,2))
n <- i
data.vec <- rexp(SRS*n,2) #creates the random data  # lambda
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from exponential Distribution", freq = FALSE, main=sprintf("Histogram for exponential, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
i=0
while(i < 30) {
data.vec <- rnorm(40,mean=10,sd=2)
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
print(z.test(data.vec, conf.level = 0.80, alternative="two.sided", sd=std))
i<- i+1
}
# B
hogs=read.table(file="hogs.txt",header=T)
print(hogs$Weight.lb.)
quartz()
# B
hogs=read.table(file="hogs.txt",header=T)
print(hogs$Weight.lb.)
quartz()
hist(hogs$Weight.lb.,freq = FALSE)          # frequency should be false to get density curve.....
means <- mean(hogs$Weight.lb.)
print(means)
std <- sd(hogs$Weight.lb.)
setwd("~/Desktop/Purdue/STAT350_R/STAT350/Labs/Lab5")
# B
hogs=read.table(file="hogs.txt",header=T)
print(hogs$Weight.lb.)
quartz()
hist(hogs$Weight.lb.,freq = FALSE)          # frequency should be false to get density curve.....
means <- mean(hogs$Weight.lb.)
print(means)
std <- sd(hogs$Weight.lb.)
curve(dnorm(x, mean=means, sd=std), col="blue", lwd=2, add=TRUE)   # normal distribution line
lines(density(hogs$Weight.lb., adjust=2),col = "red", lwd=2)
mean(hogs$Weight.lb.)
sd(hogs$Weight.lb.)
# boxplot
quartz()
boxplot(hogs$Weight.lb.)
points(means, pch = 18)
#  b) Make a Normal quantile plot to confirm that there are no systematic departures from Normality.
quartz()
qqnorm(hogs$Weight.lb.,main="Normal Quantile Plot for normal distribution")
qqline(hogs$Weight.lb.)
t.test(hogs$Weight.lb., conf.level=0.95, alternative = "two.sided")
stdev = sd(hogs$Weight.lb.)
stdev
z.test(hogs$Weight.lb., conf.level = 0.95, alternative="two.sided", sd=stdev)
stdev
z.test(hogs$Weight.lb., conf.level = 0.95, alternative="two.sided", sd=stdev)
print(means)
std <- sd(hogs$Weight.lb.)
curve(dnorm(x, mean=means, sd=std), col="blue", lwd=2, add=TRUE)   # normal distribution line
lines(density(hogs$Weight.lb., adjust=2),col = "red", lwd=2)
mean(hogs$Weight.lb.)
t.test(hogs$Weight.lb., conf.level=0.95, alternative = "two.sided")
library(TeachingDemos)
stdev = sd(hogs$Weight.lb.)
stdev
z.test(hogs$Weight.lb., conf.level = 0.95, alternative="two.sided", sd=stdev)
# B
hogs=read.table(file="hogs.txt",header=T)
print(hogs$Weight.lb.)
quartz()
hist(hogs$Weight.lb.,freq = FALSE)          # frequency should be false to get density curve.....
means <- mean(hogs$Weight.lb.)
print(means)
std <- sd(hogs$Weight.lb.)
curve(dnorm(x, mean=means, sd=std), col="blue", lwd=2, add=TRUE)   # normal distribution line
lines(density(hogs$Weight.lb., adjust=2),col = "red", lwd=2)
mean(hogs$Weight.lb.)
sd(hogs$Weight.lb.)
# boxplot
quartz()
boxplot(hogs$Weight.lb.)
points(means, pch = 18)
#  b) Make a Normal quantile plot to confirm that there are no systematic departures from Normality.
quartz()
qqnorm(hogs$Weight.lb.,main="Normal Quantile Plot for normal distribution")
qqline(hogs$Weight.lb.)
t.test(hogs$Weight.lb., conf.level=0.95, alternative = "two.sided")
library(TeachingDemos)
stdev = sd(hogs$Weight.lb.)
stdev
z.test(hogs$Weight.lb., conf.level = 0.95, alternative="two.sided", sd=stdev)
