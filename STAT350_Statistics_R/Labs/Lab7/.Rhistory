# A
SRS <- 1000
set <- c(1, 2, 6, 10)
for(i in set) {
attach(mtcars)
par(mfrow=c(1,2))
n <- i
data.vec <- rnorm(SRS*n,mean=0,sd=1)
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from Normal Distribution", freq = FALSE, main=sprintf("Histogram for Normal, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
# A
SRS <- 1000
set <- c(1, 2, 6, 10)
for(i in set) {
attach(mtcars)
par(mfrow=c(1,2))
n <- i
data.vec <- rnorm(SRS*n,mean=0,sd=1)
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from Normal Distribution", freq = FALSE, main=sprintf("Histogram for Normal, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
set <- c(1, 2, 6, 10)
for(i in set) {
attach(mtcars)
par(mfrow=c(1,2))
n <- i
data.vec <- rnorm(SRS*n,mean=0,sd=1)
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from Normal Distribution", freq = FALSE, main=sprintf("Histogram for Normal, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
SRS <- 1000
set <- c(1, 2, 6, 10)
for(i in set) {
attach(mtcars)
par(mfrow=c(1,2))
n <- i
data.vec <- rnorm(SRS*n,mean=0,sd=1)
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from Normal Distribution", freq = FALSE, main=sprintf("Histogram for Normal, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
SRS <- 1000
set <- c(1, 5, 10, 20, 30, 40 ,50)
for(i in set) {
attach(mtcars)
par(mfrow=c(1,2))
n <- i
data.vec <- rexp(SRS*n,2) #creates the random data
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from exponential Distribution", freq = FALSE, main=sprintf("Histogram for exponential, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
# E
SRS <- 1000
set <- c(1, 5, 10, 20, 30, 40 ,50)
for(i in set) {
attach(mtcars)
par(mfrow=c(1,2))
n <- i
data.vec <- rexp(SRS*n,1/2) #creates the random data
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from exponential Distribution", freq = FALSE, main=sprintf("Histogram for exponential, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
}
set <- c(1, 5, 10, 20, 30, 40 ,50)
for(i in set) {
attach(mtcars)
par(mfrow=c(1,2))
n <- i
data.vec <- rexp(SRS*n,1/2) #creates the random data
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from exponential Distribution", freq = FALSE, main=sprintf("Histogram for exponential, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
for(i in set) {
n <- i
data.vec <- rnorm(SRS*n,mean=0,sd=1)
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from Normal Distribution", freq = FALSE, main=sprintf("Histogram for Normal, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
# E
SRS <- 1000
set <- c(1, 2, 6, 10)
for(i in set) {
n <- i
data.vec <- rnorm(SRS*n,mean=0,sd=1)
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from Normal Distribution", freq = FALSE, main=sprintf("Histogram for Normal, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
set <- c(1, 2, 6, 10)
for(i in set) {
attach(mtcars)
par(mfrow=c(1,2))
n <- i
data.vec <- rnorm(SRS*n,mean=0,sd=1)
data.mat <- matrix(data.vec, ncol = n)
for(i in set) {
n <- i
data.vec <- rnorm(SRS*n,mean=0,sd=1)
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from Normal Distribution", freq = FALSE, main=sprintf("Histogram for Normal, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
# E
set <- c(1, 2, 6, 10)
for(i in set) {
attach(mtcars)
par(mfrow=c(1,2))
n <- i
data.vec <- rnorm(SRS*n,mean=0,sd=1)
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from Normal Distribution", freq = FALSE, main=sprintf("Histogram for Normal, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
# E
SRS <- 1000
set <- c(1, 5, 10, 20, 30, 40 ,50)
for(i in set) {
attach(mtcars)
par(mfrow=c(1,2))
n <- i
data.vec <- rexp(SRS*n,1/2) #creates the random data
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from exponential Distribution", freq = FALSE, main=sprintf("Histogram for exponential, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
# A
SRS <- 1000
set <- c(1, 2, 6, 10)
for(i in set) {
attach(mtcars)
par(mfrow=c(1,2))
n <- i
data.vec <- rnorm(SRS*n,mean=0,sd=1)
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from Normal Distribution", freq = FALSE, main=sprintf("Histogram for Normal, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
# A
SRS <- 1000
set <- c(1, 2, 6, 10)
for(i in set) {
attach(mtcars)
par(mfrow=c(1,2))
n <- i
data.vec <- rnorm(SRS*n,mean=0,sd=1)
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from Normal Distribution", freq = FALSE, main=sprintf("Histogram for Normal, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
SRS <- 1000
set <- c(1, 2, 6, 10)
for(i in set) {
n <- i
data.vec <- rnorm(SRS*n,mean=0,sd=1)
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from Normal Distribution", freq = FALSE, main=sprintf("Histogram for Normal, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
# E
SRS <- 1000
set <- c(1, 5, 10, 20, 30, 40 ,50)
for(i in set) {
attach(mtcars)
par(mfrow=c(1,2))
n <- i
data.vec <- rexp(SRS*n,1/2) #creates the random data
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from exponential Distribution", freq = FALSE, main=sprintf("Histogram for exponential, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
# E
SRS <- 1000
set <- c(1, 5, 10, 20, 30, 40 ,50)
for(i in set) {
attach(mtcars)                  # two plots in line
par(mfrow=c(1,2))
n <- i
data.vec <- rexp(SRS*n,2) #creates the random data  # lambda
data.mat <- matrix(data.vec, ncol = n)
avg <- apply(data.mat, 1, mean)
m = mean(avg)
std = sd(avg)
# print(n, m, std)
str = sprintf("n = %d, mean = %f, std = %f, sample std = %f", n,m, std, std*sqrt(n))
print(str)
# windows()#this is optional
hist(avg, xlab="Data from exponential Distribution", freq = FALSE, main=sprintf("Histogram for exponential, n = %d",n))
curve(dnorm(x, mean=m, sd=std), col="blue", lwd=2, add=TRUE)
lines(density(avg, adjust=1),col = "red", lwd=2)
# windows()
# quartz()
qqnorm(avg,main=sprintf("Normal Quantile Plot for Normal, n = %d",n))
qqline(avg)
quartz()
}
setwd("~/Desktop/Purdue/STAT350_R/STAT350/Labs/Lab7")
CHICAGO=read.table(file="airline_cleaned.txt",header=T)
studynew <- subset(CHICAGO, Origin=="ORD" | Origin == "MDW")
ord <- subset(CHICAGO, Origin=="ORD")
mdw <- subset(CHICAGO, Origin=="MDW")
attach(studynew)
# Note: it is required that you have two curves (red and blue) on the
# histogram and the line on the normal quantile plot as done by the
#   code below.
library(lattice)
hist(log(abs(ord$DepDelay)))
means <- mean(log(abs(ord$DepDelay)))
print(means)
std <- sd(log(abs(ord$DepDelay)))
curve(dnorm(x, mean=means, sd=std), col="blue", lwd=2, add=TRUE)   # normal distribution line
lines(density(log(abs(ord$DepDelay)), adjust=2),col = "red", lwd=2)
attach(studynew)
# Note: it is required that you have two curves (red and blue) on the
# histogram and the line on the normal quantile plot as done by the
#   code below.
library(lattice)
hist(log(abs(ord$DepDelay)))
means <- mean(log(abs(ord$DepDelay)))
print(means)
std <- sd(log(abs(ord$DepDelay)))
curve(dnorm(x, mean=means, sd=std), col="blue", lwd=2, add=TRUE)   # normal distribution line
lines(density(log(abs(ord$DepDelay)), adjust=2),col = "red", lwd=2)
histogram(log(abs(mdw$DepDelay)))
attach(studynew)
# Note: it is required that you have two curves (red and blue) on the
# histogram and the line on the normal quantile plot as done by the
#   code below.
library(lattice)
histogram(log(abs(ord$DepDelay)))
means <- mean(log(abs(ord$DepDelay)))
print(means)
std <- sd(log(abs(ord$DepDelay)))
curve(dnorm(x, mean=means, sd=std), col="blue", lwd=2, add=TRUE)   # normal distribution line
lines(density(log(abs(ord$DepDelay)), adjust=2),col = "red", lwd=2)
histogram(log(abs(mdw$DepDelay)))
histogram(~log(abs(DepDelay)) | Origin, layout=c(1,2),type="density", panel=function(x)
#   code below.
library(lattice)
histogram(log(abs(ord$DepDelay)))
means <- mean(ord$DepDelay)
print(means)
std <- sd(ord$DepDelay)
curve(dnorm(x, mean=means, sd=std), col="blue", lwd=2, add=TRUE)   # normal distribution line
lines(density(log(abs(ord$DepDelay)), adjust=2),col = "red", lwd=2)
histogram(log(abs(mdw$DepDelay)))
histogram(~log(abs(DepDelay)) | Origin, layout=c(1,2),type="density", panel=function(x)
{panel.histogram(x)
mdw <- subset(CHICAGO, Origin=="MDW")
attach(studynew)
# Note: it is required that you have two curves (red and blue) on the
# histogram and the line on the normal quantile plot as done by the
#   code below.
library(lattice)
histogram(log(abs(ord$DepDelay)))
means <- mean(ord$DepDelay)
print(means)
std <- sd(ord$DepDelay)
curve(dnorm(x, mean=means, sd=std), col="blue", lwd=2, add=TRUE)   # normal distribution line
lines(density(log(abs(ord$DepDelay)), adjust=2),col = "red", lwd=2)
histogram(log(abs(mdw$DepDelay)))
histogram(~log(abs(DepDelay)) | Origin, layout=c(1,2),type="density", panel=function(x)
{panel.histogram(x)
panel.mathdensity(dmath=dnorm,col="blue",lwd=2,args=list(mean=mean(x, na.rm=T), sd = sd(x,na.rm=T)))
panel.densityplot(x,col="red",lwd=2)
})
bwplot(~log(abs(DepDelay)) | Origin, layout = c(1, 2), pch = "|") #Boxplots side-by-side
qqmath(~log(abs(DepDelay))| Origin, data = studynew, panel = function(x){
panel.qqmath(x)
panel.qqmathline(x)
